/*! For license information please see docs.bundle.js.LICENSE.txt */
(()=>{"use strict";var e,t,n={6380:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default={LETTERS:{A:"a",B:"b",C:"c",D:"d",E:"e",F:"f",G:"g",H:"h",I:"i",J:"j",K:"k",L:"l",M:"m",N:"n",O:"o",P:"p",Q:"q",R:"r",S:"s",T:"t",U:"u",V:"v",W:"w",X:"x",Y:"y",Z:"z"}}},51:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.randomSubArray=t.shuffle=t.createIntArray=void 0,t.createIntArray=function(e){void 0===e&&(e=0);for(var t=[],n=0;n<e;n++)t.push(n);return t},t.shuffle=function(e){void 0===e&&(e=[]);for(var t=[].concat(e),n=[];t.length;){var a=Math.floor(Math.random()*t.length);n.push(t.splice(a,1)[0])}return n},t.randomSubArray=function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);for(var n=[].concat(e),a=[],l=0;l<t;l++){var r=Math.floor(Math.random()*n.length);a.push(n.splice(r,1)[0])}return a}},2920:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default={NEVER:"NEVER",FETCHING_FIRST:"FETCHING_FIRST",FETCHING:"FETCHING",SUCCESS:"SUCCESS",FAILURE:"FAILURE",OUTDATED:"OUTDATED"}},2684:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.mergeDataStates=void 0;var l=a(n(2920));t.mergeDataStates=function(e){return 0===e.length?l.default.NEVER:e.some((function(e){return e===l.default.FAILURE}))?l.default.FAILURE:e.some((function(e){return e===l.default.OUTDATED}))?l.default.OUTDATED:e.some((function(e){return e===l.default.NEVER}))?l.default.NEVER:e.some((function(e){return e===l.default.FETCHING_FIRST}))?l.default.FETCHING_FIRST:e.some((function(e){return e===l.default.FETCHING}))?l.default.FETCHING:l.default.SUCCESS}},207:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.nowString=t.dateString=t.normalizeTime=t.durationToHumanTime=t.TimeConstants=void 0;var n=1e3,a=36e5;t.TimeConstants={MIL_PER_SEC:n,SEC_PER_MIN:60,MIL_PER_MIN:6e4,MIN_PER_HOU:60,SEC_PER_HOU:3600,MIL_PER_HOU:a,HOU_PER_DAY:24,MIN_PER_DAY:1440,SEC_PER_DAY:86400,MIL_PER_DAY:864e5},t.durationToHumanTime=function(e){return{millis:e%n,seconds:Math.floor(e/n)%60,minutes:Math.floor(e/6e4)%60,hours:Math.floor(e/a)}},t.normalizeTime=function(e){return"".concat(e).padStart(2,"0")},t.dateString=function(e){var n=(0,t.normalizeTime)(e.getFullYear()),a=(0,t.normalizeTime)(e.getMonth()),l=(0,t.normalizeTime)(e.getDate()),r=(0,t.normalizeTime)(e.getHours()),i=(0,t.normalizeTime)(e.getMinutes()),o=(0,t.normalizeTime)(e.getSeconds());return"".concat(n,"-").concat(a,"-").concat(l," ").concat(r,":").concat(i,":").concat(o)},t.nowString=function(){return(0,t.dateString)(new Date(Date.now()))}},2993:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.decodeBasicHeader=t.encodeBasicHeader=t.decode=t.encode=void 0,t.encode=function(e){return void 0===e&&(e=""),Buffer.from(e).toString("base64")},t.decode=function(e){return void 0===e&&(e=""),Buffer.from(e,"base64").toString()},t.encodeBasicHeader=function(e,n){void 0===e&&(e=""),void 0===n&&(n="");var a="".concat(e,":").concat(n),l=(0,t.encode)(a);return"Basic ".concat(l)},t.decodeBasicHeader=function(e){void 0===e&&(e="");var n=e.split("Basic ").join(""),a=(0,t.decode)(n).split(":");return 2===a.length?{username:a[0],password:a[1]}:{username:null,password:null}}},576:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checkSize=t.checkExtension=t.getExtension=void 0,t.getExtension=function(e){var t=e.name;return t.substring(t.lastIndexOf(".")+1).toLowerCase()},t.checkExtension=function(e,n){return-1!==n.indexOf((0,t.getExtension)(e))},t.checkSize=function(e,t){return e.size<=t}},190:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getParamNames=void 0;var n=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,a=/([^\s,]+)/g;t.getParamNames=function(e){var t=e.toString().replace(n,""),l=t.slice(t.indexOf("(")+1,t.indexOf(")")).match(a);return null===l?[]:l}},9431:(e,t)=>{var n,a,l;Object.defineProperty(t,"__esModule",{value:!0}),t.HttpStatus=t.HttpMethod=t.HttpHeader=void 0,(l=t.HttpHeader||(t.HttpHeader={})).ACCESS_CONTROL_ALLOW_ORIGIN="Access-Control-Allow-Origin",l.ACCESS_CONTROL_ALLOW_HEADERS="Access-Control-Allow-Headers",l.ACCESS_CONTROL_ALLOW_METHODS="Access-Control-Allow-Methods",(a=t.HttpMethod||(t.HttpMethod={})).GET="GET",a.POST="POST",a.PUT="PUT",a.PATCH="PATCH",a.DELETE="DELETE",a.OPTIONS="OPTIONS",(n=t.HttpStatus||(t.HttpStatus={}))[n.OK=200]="OK",n[n.CREATED=201]="CREATED",n[n.REMOVED=204]="REMOVED",n[n.BAD_REQUEST=400]="BAD_REQUEST",n[n.UNAUTHORIZED=401]="UNAUTHORIZED",n[n.FORBIDDEN=403]="FORBIDDEN",n[n.NOT_FOUND=404]="NOT_FOUND",n[n.ERROR=500]="ERROR"},2574:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.clone=t.getProperty=void 0,t.getProperty=function(e,t){return t.split(".").reduce((function(e,t){if(e&&"object"==typeof e)return e[t]}),e)},t.clone=function(e){return JSON.parse(JSON.stringify(e))}},2186:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.delayedPromise=void 0,t.delayedPromise=function(e,t){return void 0===t&&(t=0),Promise.all([e,new Promise((function(e){return setTimeout(e,t)}))]).then((function(e){return e[0]})).catch((function(e){throw e}))}},989:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.merge=t.remove=t.add=t.toSet=void 0,t.toSet=function(e){return e.reduce((function(e,t){return e.includes(t)||e.push(t),e}),[])},t.add=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return t.forEach((function(t){e.includes(t)||e.push(t)})),e},t.remove=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return t.forEach((function(t){var n=e.indexOf(t);-1!==n&&e.splice(n,1)})),e},t.merge=function(e,n){return(0,t.toSet)(e.concat(n))}},3838:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(953)),o=function(){function e(e,t){void 0===t&&(t=" "),this._value=e,this._words=e.split(t).map((function(e){return e.toLowerCase()})).filter((function(e){return Boolean(e)}))}return Object.defineProperty(e.prototype,"words",{get:function(){return this._words},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"camel",{get:function(){return this.words.map((function(e,t){return 0===t?e:i.capitalize(e)})).join("")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"pascal",{get:function(){return this.words.map((function(e){return i.capitalize(e)})).join("")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"worm",{get:function(){return this.words.map((function(e){return e.toLowerCase()})).join("_")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"snake",{get:function(){return this.words.map((function(e){return i.capitalize(e)})).join("_")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"serpent",{get:function(){return this.words.map((function(e){return e.toUpperCase()})).join("_")},enumerable:!1,configurable:!0}),e}();t.default=o},953:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.replaceAll=t.capitalizeFirst=t.capitalize=void 0,t.capitalize=function(e){return e.length?e.substring(0,1).toUpperCase()+e.substring(1).toLowerCase():""},t.capitalizeFirst=function(e){return e.length?e.substring(0,1).toUpperCase():""},t.replaceAll=function(e,t,n){return e.split(t).join(n)}},8267:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});var n={next:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}};t.default=n},6414:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UUID=t.StringUtils=t.StringLabel=t.Sets=t.PromiseUtils=t.ObjectUtils=t.HttpUtils=t.FunctionUtils=t.FileUtils=t.EncodeUtils=t.DateUtils=t.DataStatesUtils=t.DataStates=t.ArrayUtils=t.Alphabet=void 0;var o=r(n(6380)),u=r(n(51)),c=i(n(2920)),d=r(n(2684)),s=r(n(207)),f=r(n(2993)),m=r(n(576)),p=r(n(190)),v=r(n(9431)),h=r(n(2574)),b=r(n(2186)),g=r(n(989)),E=i(n(3838)),y=r(n(953)),_=i(n(8267));t.Alphabet=o,t.ArrayUtils=u,t.DataStates=c.default,t.DataStatesUtils=d,t.DateUtils=s,t.EncodeUtils=f,t.FileUtils=m,t.FunctionUtils=p,t.HttpUtils=v,t.ObjectUtils=h,t.PromiseUtils=b,t.Sets=g,t.StringLabel=E.default,t.StringUtils=y,t.UUID=_.default},1171:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,".code-panel {\r\n  border-radius: 0.5rem;\r\n  border: 2px solid #e5e5e5;\r\n  margin: 2rem 0;\r\n}\r\n.code-panel .header {\r\n  padding: 0.5rem;\r\n}\r\n.code-panel .rendering {\r\n  position: relative;\r\n  padding: 2rem 1rem 3rem 1rem;\r\n  background-color: #f7f7f7;\r\n}\r\n.code-panel .button-show {\r\n  position: absolute;\r\n  right: 0;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  background: white;\r\n  border: 1px solid darkgray;\r\n  border-radius: 0.25rem;\r\n  bottom: 0;\r\n}\r\n.code-panel .code {\r\n  white-space: pre-line;\r\n  position: relative;\r\n  padding: 1rem;\r\n  background-color: #262626;\r\n  color: white;\r\n  font-size: 12px;\r\n  border-bottom-left-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n  font-family: ui-monospace, Menlo, Monaco, 'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',\r\n    'Droid Sans Mono', 'Courier New', monospace;\r\n}\r\n.code-panel .button-copy {\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/common/CodePanel.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,yBAAyB;EACzB,cAAc;AAChB;AACA;EACE,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,4BAA4B;EAC5B,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,eAAe;EACf,eAAe;EACf,iBAAiB;EACjB,0BAA0B;EAC1B,sBAAsB;EACtB,SAAS;AACX;AACA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,iCAAiC;EACjC,kCAAkC;EAClC;+CAC6C;AAC/C;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,eAAe;EACf,eAAe;EACf,YAAY;EACZ,sBAAsB;EACtB,uBAAuB;EACvB,YAAY;AACd",sourcesContent:[".code-panel {\r\n  border-radius: 0.5rem;\r\n  border: 2px solid #e5e5e5;\r\n  margin: 2rem 0;\r\n}\r\n.code-panel .header {\r\n  padding: 0.5rem;\r\n}\r\n.code-panel .rendering {\r\n  position: relative;\r\n  padding: 2rem 1rem 3rem 1rem;\r\n  background-color: #f7f7f7;\r\n}\r\n.code-panel .button-show {\r\n  position: absolute;\r\n  right: 0;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  background: white;\r\n  border: 1px solid darkgray;\r\n  border-radius: 0.25rem;\r\n  bottom: 0;\r\n}\r\n.code-panel .code {\r\n  white-space: pre-line;\r\n  position: relative;\r\n  padding: 1rem;\r\n  background-color: #262626;\r\n  color: white;\r\n  font-size: 12px;\r\n  border-bottom-left-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n  font-family: ui-monospace, Menlo, Monaco, 'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',\r\n    'Droid Sans Mono', 'Courier New', monospace;\r\n}\r\n.code-panel .button-copy {\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  background-color: black;\r\n  color: white;\r\n}\r\n"],sourceRoot:""}]);const o=i},8743:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,"\r\n  .demo-page .fd-title--h2 {\r\n    margin-top: 2rem;\r\n    border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);\r\n  }.demo-page .fd-title--h3 {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n","",{version:3,sources:["webpack://./src/components/common/DemoPage.css"],names:[],mappings:";EACE;IACE,gBAAgB;IAChB,0EAA0E;EAC5E,CACA;IACE,gBAAgB;EAClB",sourcesContent:[".demo-page {\r\n  & .fd-title--h2 {\r\n    margin-top: 2rem;\r\n    border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);\r\n  }\r\n  & .fd-title--h3 {\r\n    margin-top: 1rem;\r\n  }\r\n}\r\n\r\n"],sourceRoot:""}]);const o=i},2785:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,".fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n  padding: 0 0.5rem;\r\n}\r\n\r\n@media (min-width: 600px) {\r\n  .fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n    padding: 0 2rem;\r\n  }\r\n}\r\n\r\n@media (min-width: 1400px) {\r\n  .fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n    padding: 0 3rem;\r\n  }\r\n}","",{version:3,sources:["webpack://./src/lib/components/icontabbar/IconTabBar.css"],names:[],mappings:"AAAA;EACE,iBAAiB;AACnB;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:[".fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n  padding: 0 0.5rem;\r\n}\r\n\r\n@media (min-width: 600px) {\r\n  .fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n    padding: 0 2rem;\r\n  }\r\n}\r\n\r\n@media (min-width: 1400px) {\r\n  .fd-icon-tab-bar .fd-icon-tab-bar__header {\r\n    padding: 0 3rem;\r\n  }\r\n}"],sourceRoot:""}]);const o=i},232:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,".fd-object-header-attribute {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.fd-object-header-attribute .fd-object-header-attribute__label {\r\n  color: var(--sapContent_LabelColor);\r\n}\r\n.fd-object-header-attribute .fd-object-header-attribute__text {\r\n  word-wrap: break-word;\r\n}\r\n.fd-object-header-attribute + .fd-object-header-attribute {\r\n  margin-top: 0.25rem;\r\n}\r\n","",{version:3,sources:["webpack://./src/lib/components/object/ObjectHeaderAttribute.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,mCAAmC;AACrC;AACA;EACE,qBAAyB;AAC3B;AACA;EACE,mBAAmB;AACrB",sourcesContent:[".fd-object-header-attribute {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.fd-object-header-attribute .fd-object-header-attribute__label {\r\n  color: var(--sapContent_LabelColor);\r\n}\r\n.fd-object-header-attribute .fd-object-header-attribute__text {\r\n  overflow-wrap: break-word;\r\n}\r\n.fd-object-header-attribute + .fd-object-header-attribute {\r\n  margin-top: 0.25rem;\r\n}\r\n"],sourceRoot:""}]);const o=i},1976:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,".fd-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.fd-page .fd-page__header {\r\n  flex-shrink: 0;\r\n  flex-basis: 100px;\r\n  padding: 1rem 0.5rem 1rem 0.5rem;\r\n\r\n  background: var(--sapList_Background);\r\n}\r\n\r\n@media screen and (min-width: 600px) {\r\n  .fd-page .fd-page__header {\r\n    padding: 1rem 2rem 1rem 2rem;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1400px) {\r\n  .fd-page .fd-page__header {\r\n    padding: 1rem 3rem 1rem 3rem;\r\n  }\r\n}\r\n\r\n.fd-page .fd-page__header .fd-toolbar {\r\n  padding: 0;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.fd-page .fd-page__content {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  overflow: auto;\r\n}\r\n\r\n.fd-page .fd-page__content .fd-page__body {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n\r\n  background: var(--sapBackgroundColor);\r\n}\r\n\r\n.fd-page .fd-page__content .fd-page__footer {\r\n  flex-shrink: 0;\r\n  flex-basis: 100px;\r\n}\r\n","",{version:3,sources:["webpack://./src/lib/components/page/Page.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;;EAEtB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,gCAAgC;;EAEhC,qCAAqC;AACvC;;AAEA;EACE;IACE,4BAA4B;EAC9B;AACF;;AAEA;EACE;IACE,4BAA4B;EAC9B;AACF;;AAEA;EACE,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,sBAAsB;;EAEtB,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,qCAAqC;AACvC;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB",sourcesContent:[".fd-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.fd-page .fd-page__header {\r\n  flex-shrink: 0;\r\n  flex-basis: 100px;\r\n  padding: 1rem 0.5rem 1rem 0.5rem;\r\n\r\n  background: var(--sapList_Background);\r\n}\r\n\r\n@media screen and (min-width: 600px) {\r\n  .fd-page .fd-page__header {\r\n    padding: 1rem 2rem 1rem 2rem;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1400px) {\r\n  .fd-page .fd-page__header {\r\n    padding: 1rem 3rem 1rem 3rem;\r\n  }\r\n}\r\n\r\n.fd-page .fd-page__header .fd-toolbar {\r\n  padding: 0;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.fd-page .fd-page__content {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  overflow: auto;\r\n}\r\n\r\n.fd-page .fd-page__content .fd-page__body {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n\r\n  background: var(--sapBackgroundColor);\r\n}\r\n\r\n.fd-page .fd-page__content .fd-page__footer {\r\n  flex-shrink: 0;\r\n  flex-basis: 100px;\r\n}\r\n"],sourceRoot:""}]);const o=i},1047:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7537),l=n.n(a),r=n(3645),i=n.n(r)()(l());i.push([e.id,".fd-section .fd-toolbar {\r\n  padding: 0 0 0 0.25rem;\r\n}\r\n","",{version:3,sources:["webpack://./src/lib/components/toolbar/Toolbar.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB",sourcesContent:[".fd-section .fd-toolbar {\r\n  padding: 0 0 0 0.25rem;\r\n}\r\n"],sourceRoot:""}]);const o=i},3645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,l,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(i[u]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);a&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),l&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=l):d[4]="".concat(l)),t.push(d))}},t}},7537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(l," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([r]).join("\n")}return[t].join("\n")}},4448:(e,t,n)=>{var a=n(7294),l=n(3840);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),s=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,m={},p={};function v(e,t,n,a,l,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=i}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];h[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function E(e,t,n,a){var l=h.hasOwnProperty(t)?h[t]:null;(null!==l?0!==l.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null==t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,l,a)&&(n=null),a||null===l?function(e){return!!s.call(p,e)||!s.call(m,e)&&(f.test(e)?p[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,a=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,g);h[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,g);h[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,g);h[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),w=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),O=Symbol.for("react.context"),N=Symbol.for("react.forward_ref"),k=Symbol.for("react.suspense"),P=Symbol.for("react.suspense_list"),T=Symbol.for("react.memo"),D=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var B=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function R(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var L,j=Object.assign;function I(e){if(void 0===L)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var z=!1;function F(e,t){if(!e||z)return"";z=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var a=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){a=e}e.call(t.prototype)}else{try{throw Error()}catch(e){a=e}e()}}catch(t){if(t&&a&&"string"==typeof t.stack){for(var l=t.stack.split("\n"),r=a.stack.split("\n"),i=l.length-1,o=r.length-1;1<=i&&0<=o&&l[i]!==r[o];)o--;for(;1<=i&&0<=o;i--,o--)if(l[i]!==r[o]){if(1!==i||1!==o)do{if(i--,0>--o||l[i]!==r[o]){var u="\n"+l[i].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=i&&0<=o);break}}}finally{z=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?I(e):""}function U(e){switch(e.tag){case 5:return I(e.type);case 16:return I("Lazy");case 13:return I("Suspense");case 19:return I("SuspenseList");case 0:case 2:case 15:return F(e.type,!1);case 11:return F(e.type.render,!1);case 1:return F(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case w:return"Portal";case C:return"Profiler";case x:return"StrictMode";case k:return"Suspense";case P:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case T:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case D:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function $(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,r=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){a=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=W(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return j({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Z(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function q(e,t){null!=(t=t.checked)&&E(e,"checked",t,!1)}function X(e,t){q(e,t);var n=V(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&a&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(a&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return j({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(r(92));if(te(n)){if(1<n.length)throw Error(r(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function re(e,t){var n=V(t.value),a=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,de,se=(de=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return de(e,t)}))}:de);function fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var me={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||me.hasOwnProperty(e)&&me[e]?(""+t).trim():t+"px"}function he(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),l=ve(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,l):e[n]=l}}Object.keys(me).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),me[t]=me[e]}))}));var be=j({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ge(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(r(62))}}function Ee(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,Se=null,xe=null;function Ce(e){if(e=El(e)){if("function"!=typeof we)throw Error(r(280));var t=e.stateNode;t&&(t=_l(t),we(e.stateNode,e.type,t))}}function Ae(e){Se?xe?xe.push(e):xe=[e]:Se=e}function Oe(){if(Se){var e=Se,t=xe;if(xe=Se=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Ne(e,t){return e(t)}function ke(){}var Pe=!1;function Te(e,t,n){if(Pe)return e(t,n);Pe=!0;try{return Ne(e,t,n)}finally{Pe=!1,(null!==Se||null!==xe)&&(ke(),Oe())}}function De(e,t){var n=e.stateNode;if(null===n)return null;var a=_l(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(r(231,t,typeof n));return n}var Be=!1;if(d)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Be=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(de){Be=!1}function Re(e,t,n,a,l,r,i,o,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Le=!1,je=null,Ie=!1,ze=null,Fe={onError:function(e){Le=!0,je=e}};function Ue(e,t,n,a,l,r,i,o,u){Le=!1,je=null,Re.apply(Fe,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function $e(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(He(e)!==e)throw Error(r(188))}function We(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(r(188));return t!==e?null:e}for(var n=e,a=t;;){var l=n.return;if(null===l)break;var i=l.alternate;if(null===i){if(null!==(a=l.return)){n=a;continue}break}if(l.child===i.child){for(i=l.child;i;){if(i===n)return Ve(l),e;if(i===a)return Ve(l),t;i=i.sibling}throw Error(r(188))}if(n.return!==a.return)n=l,a=i;else{for(var o=!1,u=l.child;u;){if(u===n){o=!0,n=l,a=i;break}if(u===a){o=!0,a=l,n=i;break}u=u.sibling}if(!o){for(u=i.child;u;){if(u===n){o=!0,n=i,a=l;break}if(u===a){o=!0,a=i,n=l;break}u=u.sibling}if(!o)throw Error(r(189))}}if(n.alternate!==a)throw Error(r(190))}if(3!==n.tag)throw Error(r(188));return n.stateNode.current===n?e:t}(e))?Ye(e):null}function Ye(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ye(e);if(null!==t)return t;e=e.sibling}return null}var Ge=l.unstable_scheduleCallback,Qe=l.unstable_cancelCallback,Ke=l.unstable_shouldYield,Ze=l.unstable_requestPaint,qe=l.unstable_now,Xe=l.unstable_getCurrentPriorityLevel,Je=l.unstable_ImmediatePriority,et=l.unstable_UserBlockingPriority,tt=l.unstable_NormalPriority,nt=l.unstable_LowPriority,at=l.unstable_IdlePriority,lt=null,rt=null,it=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ot(e)/ut|0)|0},ot=Math.log,ut=Math.LN2,ct=64,dt=4194304;function st(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ft(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,l=e.suspendedLanes,r=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~l;0!==o?a=st(o):0!=(r&=i)&&(a=st(r))}else 0!=(i=n&~l)?a=st(i):0!==r&&(a=st(r));if(0===a)return 0;if(0!==t&&t!==a&&0==(t&l)&&((l=a&-a)>=(r=t&-t)||16===l&&0!=(4194240&r)))return t;if(0!=(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)l=1<<(n=31-it(t)),a|=e[n],t&=~l;return a}function mt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function ht(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function bt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function gt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-it(n),l=1<<a;l&t|e[a]&t&&(e[a]|=t),n&=~l}}var Et=0;function yt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var _t,wt,St,xt,Ct,At=!1,Ot=[],Nt=null,kt=null,Pt=null,Tt=new Map,Dt=new Map,Bt=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rt(e,t){switch(e){case"focusin":case"focusout":Nt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":Pt=null;break;case"pointerover":case"pointerout":Tt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Dt.delete(t.pointerId)}}function Lt(e,t,n,a,l,r){return null===e||e.nativeEvent!==r?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:r,targetContainers:[l]},null!==t&&null!==(t=El(t))&&wt(t),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==l&&-1===t.indexOf(l)&&t.push(l),e)}function jt(e){var t=gl(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=$e(n)))return e.blockedOn=t,void Ct(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function It(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=El(n))&&wt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ye=a,n.target.dispatchEvent(a),ye=null,t.shift()}return!0}function zt(e,t,n){It(e)&&n.delete(t)}function Ft(){At=!1,null!==Nt&&It(Nt)&&(Nt=null),null!==kt&&It(kt)&&(kt=null),null!==Pt&&It(Pt)&&(Pt=null),Tt.forEach(zt),Dt.forEach(zt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,At||(At=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,Ft)))}function Ht(e){function t(t){return Ut(t,e)}if(0<Ot.length){Ut(Ot[0],e);for(var n=1;n<Ot.length;n++){var a=Ot[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Nt&&Ut(Nt,e),null!==kt&&Ut(kt,e),null!==Pt&&Ut(Pt,e),Tt.forEach(t),Dt.forEach(t),n=0;n<Bt.length;n++)(a=Bt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Bt.length&&null===(n=Bt[0]).blockedOn;)jt(n),null===n.blockedOn&&Bt.shift()}var $t=y.ReactCurrentBatchConfig,Vt=!0;function Wt(e,t,n,a){var l=Et,r=$t.transition;$t.transition=null;try{Et=1,Gt(e,t,n,a)}finally{Et=l,$t.transition=r}}function Yt(e,t,n,a){var l=Et,r=$t.transition;$t.transition=null;try{Et=4,Gt(e,t,n,a)}finally{Et=l,$t.transition=r}}function Gt(e,t,n,a){if(Vt){var l=Kt(e,t,n,a);if(null===l)Va(e,t,a,Qt,n),Rt(e,a);else if(function(e,t,n,a,l){switch(t){case"focusin":return Nt=Lt(Nt,e,t,n,a,l),!0;case"dragenter":return kt=Lt(kt,e,t,n,a,l),!0;case"mouseover":return Pt=Lt(Pt,e,t,n,a,l),!0;case"pointerover":var r=l.pointerId;return Tt.set(r,Lt(Tt.get(r)||null,e,t,n,a,l)),!0;case"gotpointercapture":return r=l.pointerId,Dt.set(r,Lt(Dt.get(r)||null,e,t,n,a,l)),!0}return!1}(l,e,t,n,a))a.stopPropagation();else if(Rt(e,a),4&t&&-1<Mt.indexOf(e)){for(;null!==l;){var r=El(l);if(null!==r&&_t(r),null===(r=Kt(e,t,n,a))&&Va(e,t,a,Qt,n),r===l)break;l=r}null!==l&&a.stopPropagation()}else Va(e,t,a,null,n)}}var Qt=null;function Kt(e,t,n,a){if(Qt=null,null!==(e=gl(e=_e(a))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=$e(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Zt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var qt=null,Xt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Xt,a=n.length,l="value"in qt?qt.value:qt.textContent,r=l.length;for(e=0;e<a&&n[e]===l[e];e++);var i=a-e;for(t=1;t<=i&&n[a-t]===l[r-t];t++);return Jt=l.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function ln(e){function t(t,n,a,l,r){for(var i in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=l,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(l):l[i]);return this.isDefaultPrevented=(null!=l.defaultPrevented?l.defaultPrevented:!1===l.returnValue)?nn:an,this.isPropagationStopped=an,this}return j(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var rn,on,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(cn),sn=j({},cn,{view:0,detail:0}),fn=ln(sn),mn=j({},sn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(rn=e.screenX-un.screenX,on=e.screenY-un.screenY):on=rn=0,un=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),pn=ln(mn),vn=ln(j({},mn,{dataTransfer:0})),hn=ln(j({},sn,{relatedTarget:0})),bn=ln(j({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=j({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),En=ln(gn),yn=ln(j({},cn,{data:0})),_n={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return xn}var An=j({},sn,{key:function(e){if(e.key){var t=_n[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),On=ln(An),Nn=ln(j({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),kn=ln(j({},sn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Pn=ln(j({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=j({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=ln(Tn),Bn=[9,13,27,32],Mn=d&&"CompositionEvent"in window,Rn=null;d&&"documentMode"in document&&(Rn=document.documentMode);var Ln=d&&"TextEvent"in window&&!Rn,jn=d&&(!Mn||Rn&&8<Rn&&11>=Rn),In=String.fromCharCode(32),zn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==Bn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1,$n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$n[e.type]:"textarea"===t}function Wn(e,t,n,a){Ae(a),0<(t=Ya(t,"onChange")).length&&(n=new dn("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Yn=null,Gn=null;function Qn(e){Ia(e,0)}function Kn(e){if(G(yl(e)))return e}function Zn(e,t){if("change"===e)return t}var qn=!1;if(d){var Xn;if(d){var Jn="oninput"in document;if(!Jn){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jn="function"==typeof ea.oninput}Xn=Jn}else Xn=!1;qn=Xn&&(!document.documentMode||9<document.documentMode)}function ta(){Yn&&(Yn.detachEvent("onpropertychange",na),Gn=Yn=null)}function na(e){if("value"===e.propertyName&&Kn(Gn)){var t=[];Wn(t,Gn,e,_e(e)),Te(Qn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Gn=n,(Yn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function la(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Gn)}function ra(e,t){if("click"===e)return Kn(t)}function ia(e,t){if("input"===e||"change"===e)return Kn(t)}var oa="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ua(e,t){if(oa(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var l=n[a];if(!s.call(t,l)||!oa(e[l],t[l]))return!1}return!0}function ca(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function da(e,t){var n,a=ca(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ca(a)}}function sa(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?sa(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fa(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function ma(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function pa(e){var t=fa(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&sa(n.ownerDocument.documentElement,n)){if(null!==a&&ma(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var l=n.textContent.length,r=Math.min(a.start,l);a=void 0===a.end?r:Math.min(a.end,l),!e.extend&&r>a&&(l=a,a=r,r=l),l=da(n,r);var i=da(n,a);l&&i&&(1!==e.rangeCount||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(l.node,l.offset),e.removeAllRanges(),r>a?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var va=d&&"documentMode"in document&&11>=document.documentMode,ha=null,ba=null,ga=null,Ea=!1;function ya(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;Ea||null==ha||ha!==Q(a)||(a="selectionStart"in(a=ha)&&ma(a)?{start:a.selectionStart,end:a.selectionEnd}:{anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ga&&ua(ga,a)||(ga=a,0<(a=Ya(ba,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ha)))}function _a(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wa={animationend:_a("Animation","AnimationEnd"),animationiteration:_a("Animation","AnimationIteration"),animationstart:_a("Animation","AnimationStart"),transitionend:_a("Transition","TransitionEnd")},Sa={},xa={};function Ca(e){if(Sa[e])return Sa[e];if(!wa[e])return e;var t,n=wa[e];for(t in n)if(n.hasOwnProperty(t)&&t in xa)return Sa[e]=n[t];return e}d&&(xa=document.createElement("div").style,"AnimationEvent"in window||(delete wa.animationend.animation,delete wa.animationiteration.animation,delete wa.animationstart.animation),"TransitionEvent"in window||delete wa.transitionend.transition);var Aa=Ca("animationend"),Oa=Ca("animationiteration"),Na=Ca("animationstart"),ka=Ca("transitionend"),Pa=new Map,Ta="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Da(e,t){Pa.set(e,t),u(t,[e])}for(var Ba=0;Ba<Ta.length;Ba++){var Ma=Ta[Ba];Da(Ma.toLowerCase(),"on"+(Ma[0].toUpperCase()+Ma.slice(1)))}Da(Aa,"onAnimationEnd"),Da(Oa,"onAnimationIteration"),Da(Na,"onAnimationStart"),Da("dblclick","onDoubleClick"),Da("focusin","onFocus"),Da("focusout","onBlur"),Da(ka,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ra="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),La=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ra));function ja(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,l,i,o,u,c){if(Ue.apply(this,arguments),Le){if(!Le)throw Error(r(198));var d=je;Le=!1,je=null,Ie||(Ie=!0,ze=d)}}(a,t,void 0,e),e.currentTarget=null}function Ia(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var a=e[n],l=a.event;a=a.listeners;e:{var r=void 0;if(t)for(var i=a.length-1;0<=i;i--){var o=a[i],u=o.instance,c=o.currentTarget;if(o=o.listener,u!==r&&l.isPropagationStopped())break e;ja(l,o,c),r=u}else for(i=0;i<a.length;i++){if(u=(o=a[i]).instance,c=o.currentTarget,o=o.listener,u!==r&&l.isPropagationStopped())break e;ja(l,o,c),r=u}}}if(Ie)throw e=ze,Ie=!1,ze=null,e}function za(e,t){var n=t[vl];void 0===n&&(n=t[vl]=new Set);var a=e+"__bubble";n.has(a)||($a(t,e,2,!1),n.add(a))}function Fa(e,t,n){var a=0;t&&(a|=4),$a(n,e,a,t)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Ha(e){if(!e[Ua]){e[Ua]=!0,i.forEach((function(t){"selectionchange"!==t&&(La.has(t)||Fa(t,!1,e),Fa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ua]||(t[Ua]=!0,Fa("selectionchange",!1,t))}}function $a(e,t,n,a){switch(Zt(t)){case 1:var l=Wt;break;case 4:l=Yt;break;default:l=Gt}n=l.bind(null,t,n,e),l=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(l=!0),a?void 0!==l?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):void 0!==l?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function Va(e,t,n,a,l){var r=a;if(0==(1&t)&&0==(2&t)&&null!==a)e:for(;;){if(null===a)return;var i=a.tag;if(3===i||4===i){var o=a.stateNode.containerInfo;if(o===l||8===o.nodeType&&o.parentNode===l)break;if(4===i)for(i=a.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===l||8===u.nodeType&&u.parentNode===l))return;i=i.return}for(;null!==o;){if(null===(i=gl(o)))return;if(5===(u=i.tag)||6===u){a=r=i;continue e}o=o.parentNode}}a=a.return}Te((function(){var a=r,l=_e(n),i=[];e:{var o=Pa.get(e);if(void 0!==o){var u=dn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=On;break;case"focusin":c="focus",u=hn;break;case"focusout":c="blur",u=hn;break;case"beforeblur":case"afterblur":u=hn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=kn;break;case Aa:case Oa:case Na:u=bn;break;case ka:u=Pn;break;case"scroll":u=fn;break;case"wheel":u=Dn;break;case"copy":case"cut":case"paste":u=En;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Nn}var d=0!=(4&t),s=!d&&"scroll"===e,f=d?null!==o?o+"Capture":null:o;d=[];for(var m,p=a;null!==p;){var v=(m=p).stateNode;if(5===m.tag&&null!==v&&(m=v,null!==f&&null!=(v=De(p,f))&&d.push(Wa(p,v,m))),s)break;p=p.return}0<d.length&&(o=new u(o,c,null,n,l),i.push({event:o,listeners:d}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ye||!(c=n.relatedTarget||n.fromElement)||!gl(c)&&!c[pl])&&(u||o)&&(o=l.window===l?l:(o=l.ownerDocument)?o.defaultView||o.parentWindow:window,u?(u=a,null!==(c=(c=n.relatedTarget||n.toElement)?gl(c):null)&&(c!==(s=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=a),u!==c)){if(d=pn,v="onMouseLeave",f="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(d=Nn,v="onPointerLeave",f="onPointerEnter",p="pointer"),s=null==u?o:yl(u),m=null==c?o:yl(c),(o=new d(v,p+"leave",u,n,l)).target=s,o.relatedTarget=m,v=null,gl(l)===a&&((d=new d(f,p+"enter",c,n,l)).target=m,d.relatedTarget=s,v=d),s=v,u&&c)e:{for(f=c,p=0,m=d=u;m;m=Ga(m))p++;for(m=0,v=f;v;v=Ga(v))m++;for(;0<p-m;)d=Ga(d),p--;for(;0<m-p;)f=Ga(f),m--;for(;p--;){if(d===f||null!==f&&d===f.alternate)break e;d=Ga(d),f=Ga(f)}d=null}else d=null;null!==u&&Qa(i,o,u,d,!1),null!==c&&null!==s&&Qa(i,s,c,d,!0)}if("select"===(u=(o=a?yl(a):window).nodeName&&o.nodeName.toLowerCase())||"input"===u&&"file"===o.type)var h=Zn;else if(Vn(o))if(qn)h=ia;else{h=la;var b=aa}else(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(h=ra);switch(h&&(h=h(e,a))?Wn(i,h,n,l):(b&&b(e,o,a),"focusout"===e&&(b=o._wrapperState)&&b.controlled&&"number"===o.type&&ee(o,"number",o.value)),b=a?yl(a):window,e){case"focusin":(Vn(b)||"true"===b.contentEditable)&&(ha=b,ba=a,ga=null);break;case"focusout":ga=ba=ha=null;break;case"mousedown":Ea=!0;break;case"contextmenu":case"mouseup":case"dragend":Ea=!1,ya(i,n,l);break;case"selectionchange":if(va)break;case"keydown":case"keyup":ya(i,n,l)}var g;if(Mn)e:{switch(e){case"compositionstart":var E="onCompositionStart";break e;case"compositionend":E="onCompositionEnd";break e;case"compositionupdate":E="onCompositionUpdate";break e}E=void 0}else Hn?Fn(e,n)&&(E="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(E="onCompositionStart");E&&(jn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==E?"onCompositionEnd"===E&&Hn&&(g=en()):(Xt="value"in(qt=l)?qt.value:qt.textContent,Hn=!0)),0<(b=Ya(a,E)).length&&(E=new yn(E,e,null,n,l),i.push({event:E,listeners:b}),(g||null!==(g=Un(n)))&&(E.data=g))),(g=Ln?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(zn=!0,In);case"textInput":return(e=t.data)===In&&zn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Mn&&Fn(e,t)?(e=en(),Jt=Xt=qt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return jn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(a=Ya(a,"onBeforeInput")).length&&(l=new yn("onBeforeInput","beforeinput",null,n,l),i.push({event:l,listeners:a}),l.data=g)}Ia(i,t)}))}function Wa(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ya(e,t){for(var n=t+"Capture",a=[];null!==e;){var l=e,r=l.stateNode;5===l.tag&&null!==r&&(l=r,null!=(r=De(e,n))&&a.unshift(Wa(e,r,l)),null!=(r=De(e,t))&&a.push(Wa(e,r,l))),e=e.return}return a}function Ga(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qa(e,t,n,a,l){for(var r=t._reactName,i=[];null!==n&&n!==a;){var o=n,u=o.alternate,c=o.stateNode;if(null!==u&&u===a)break;5===o.tag&&null!==c&&(o=c,l?null!=(u=De(n,r))&&i.unshift(Wa(n,u,o)):l||null!=(u=De(n,r))&&i.push(Wa(n,u,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Ka=/\r\n?/g,Za=/\u0000|\uFFFD/g;function qa(e){return("string"==typeof e?e:""+e).replace(Ka,"\n").replace(Za,"")}function Xa(e,t,n){if(t=qa(t),qa(e)!==t&&n)throw Error(r(425))}function Ja(){}var el=null,tl=null;function nl(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var al="function"==typeof setTimeout?setTimeout:void 0,ll="function"==typeof clearTimeout?clearTimeout:void 0,rl="function"==typeof Promise?Promise:void 0,il="function"==typeof queueMicrotask?queueMicrotask:void 0!==rl?function(e){return rl.resolve(null).then(e).catch(ol)}:al;function ol(e){setTimeout((function(){throw e}))}function ul(e,t){var n=t,a=0;do{var l=n.nextSibling;if(e.removeChild(n),l&&8===l.nodeType)if("/$"===(n=l.data)){if(0===a)return e.removeChild(l),void Ht(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=l}while(n);Ht(t)}function cl(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function dl(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var sl=Math.random().toString(36).slice(2),fl="__reactFiber$"+sl,ml="__reactProps$"+sl,pl="__reactContainer$"+sl,vl="__reactEvents$"+sl,hl="__reactListeners$"+sl,bl="__reactHandles$"+sl;function gl(e){var t=e[fl];if(t)return t;for(var n=e.parentNode;n;){if(t=n[pl]||n[fl]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=dl(e);null!==e;){if(n=e[fl])return n;e=dl(e)}return t}n=(e=n).parentNode}return null}function El(e){return!(e=e[fl]||e[pl])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yl(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function _l(e){return e[ml]||null}var wl=[],Sl=-1;function xl(e){return{current:e}}function Cl(e){0>Sl||(e.current=wl[Sl],wl[Sl]=null,Sl--)}function Al(e,t){Sl++,wl[Sl]=e.current,e.current=t}var Ol={},Nl=xl(Ol),kl=xl(!1),Pl=Ol;function Tl(e,t){var n=e.type.contextTypes;if(!n)return Ol;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var l,r={};for(l in n)r[l]=t[l];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function Dl(e){return null!=e.childContextTypes}function Bl(){Cl(kl),Cl(Nl)}function Ml(e,t,n){if(Nl.current!==Ol)throw Error(r(168));Al(Nl,t),Al(kl,n)}function Rl(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!=typeof a.getChildContext)return n;for(var l in a=a.getChildContext())if(!(l in t))throw Error(r(108,$(e)||"Unknown",l));return j({},n,a)}function Ll(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ol,Pl=Nl.current,Al(Nl,e),Al(kl,kl.current),!0}function jl(e,t,n){var a=e.stateNode;if(!a)throw Error(r(169));n?(e=Rl(e,t,Pl),a.__reactInternalMemoizedMergedChildContext=e,Cl(kl),Cl(Nl),Al(Nl,e)):Cl(kl),Al(kl,n)}var Il=null,zl=!1,Fl=!1;function Ul(e){null===Il?Il=[e]:Il.push(e)}function Hl(){if(!Fl&&null!==Il){Fl=!0;var e=0,t=Et;try{var n=Il;for(Et=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Il=null,zl=!1}catch(t){throw null!==Il&&(Il=Il.slice(e+1)),Ge(Je,Hl),t}finally{Et=t,Fl=!1}}return null}var $l=[],Vl=0,Wl=null,Yl=0,Gl=[],Ql=0,Kl=null,Zl=1,ql="";function Xl(e,t){$l[Vl++]=Yl,$l[Vl++]=Wl,Wl=e,Yl=t}function Jl(e,t,n){Gl[Ql++]=Zl,Gl[Ql++]=ql,Gl[Ql++]=Kl,Kl=e;var a=Zl;e=ql;var l=32-it(a)-1;a&=~(1<<l),n+=1;var r=32-it(t)+l;if(30<r){var i=l-l%5;r=(a&(1<<i)-1).toString(32),a>>=i,l-=i,Zl=1<<32-it(t)+l|n<<l|a,ql=r+e}else Zl=1<<r|n<<l|a,ql=e}function er(e){null!==e.return&&(Xl(e,1),Jl(e,1,0))}function tr(e){for(;e===Wl;)Wl=$l[--Vl],$l[Vl]=null,Yl=$l[--Vl],$l[Vl]=null;for(;e===Kl;)Kl=Gl[--Ql],Gl[Ql]=null,ql=Gl[--Ql],Gl[Ql]=null,Zl=Gl[--Ql],Gl[Ql]=null}var nr=null,ar=null,lr=!1,rr=null;function ir(e,t){var n=Tc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function or(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nr=e,ar=cl(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nr=e,ar=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Kl?{id:Zl,overflow:ql}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Tc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nr=e,ar=null,!0);default:return!1}}function ur(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function cr(e){if(lr){var t=ar;if(t){var n=t;if(!or(e,t)){if(ur(e))throw Error(r(418));t=cl(n.nextSibling);var a=nr;t&&or(e,t)?ir(a,n):(e.flags=-4097&e.flags|2,lr=!1,nr=e)}}else{if(ur(e))throw Error(r(418));e.flags=-4097&e.flags|2,lr=!1,nr=e}}}function dr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nr=e}function sr(e){if(e!==nr)return!1;if(!lr)return dr(e),lr=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nl(e.type,e.memoizedProps)),t&&(t=ar)){if(ur(e))throw fr(),Error(r(418));for(;t;)ir(e,t),t=cl(t.nextSibling)}if(dr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ar=cl(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ar=null}}else ar=nr?cl(e.stateNode.nextSibling):null;return!0}function fr(){for(var e=ar;e;)e=cl(e.nextSibling)}function mr(){ar=nr=null,lr=!1}function pr(e){null===rr?rr=[e]:rr.push(e)}var vr=y.ReactCurrentBatchConfig;function hr(e,t){if(e&&e.defaultProps){for(var n in t=j({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var br=xl(null),gr=null,Er=null,yr=null;function _r(){yr=Er=gr=null}function wr(e){var t=br.current;Cl(br),e._currentValue=t}function Sr(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function xr(e,t){gr=e,yr=Er=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(yo=!0),e.firstContext=null)}function Cr(e){var t=e._currentValue;if(yr!==e)if(e={context:e,memoizedValue:t,next:null},null===Er){if(null===gr)throw Error(r(308));Er=e,gr.dependencies={lanes:0,firstContext:e}}else Er=Er.next=e;return t}var Ar=null;function Or(e){null===Ar?Ar=[e]:Ar.push(e)}function Nr(e,t,n,a){var l=t.interleaved;return null===l?(n.next=n,Or(t)):(n.next=l.next,l.next=n),t.interleaved=n,kr(e,a)}function kr(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Pr=!1;function Tr(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Dr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Br(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Mr(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!=(2&Nu)){var l=a.pending;return null===l?t.next=t:(t.next=l.next,l.next=t),a.pending=t,kr(e,n)}return null===(l=a.interleaved)?(t.next=t,Or(a)):(t.next=l.next,l.next=t),a.interleaved=t,kr(e,n)}function Rr(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,gt(e,n)}}function Lr(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var l=null,r=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===r?l=r=i:r=r.next=i,n=n.next}while(null!==n);null===r?l=r=t:r=r.next=t}else l=r=t;return n={baseState:a.baseState,firstBaseUpdate:l,lastBaseUpdate:r,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function jr(e,t,n,a){var l=e.updateQueue;Pr=!1;var r=l.firstBaseUpdate,i=l.lastBaseUpdate,o=l.shared.pending;if(null!==o){l.shared.pending=null;var u=o,c=u.next;u.next=null,null===i?r=c:i.next=c,i=u;var d=e.alternate;null!==d&&(o=(d=d.updateQueue).lastBaseUpdate)!==i&&(null===o?d.firstBaseUpdate=c:o.next=c,d.lastBaseUpdate=u)}if(null!==r){var s=l.baseState;for(i=0,d=c=u=null,o=r;;){var f=o.lane,m=o.eventTime;if((a&f)===f){null!==d&&(d=d.next={eventTime:m,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var p=e,v=o;switch(f=t,m=n,v.tag){case 1:if("function"==typeof(p=v.payload)){s=p.call(m,s,f);break e}s=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(f="function"==typeof(p=v.payload)?p.call(m,s,f):p))break e;s=j({},s,f);break e;case 2:Pr=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(f=l.effects)?l.effects=[o]:f.push(o))}else m={eventTime:m,lane:f,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===d?(c=d=m,u=s):d=d.next=m,i|=f;if(null===(o=o.next)){if(null===(o=l.shared.pending))break;o=(f=o).next,f.next=null,l.lastBaseUpdate=f,l.shared.pending=null}}if(null===d&&(u=s),l.baseState=u,l.firstBaseUpdate=c,l.lastBaseUpdate=d,null!==(t=l.shared.interleaved)){l=t;do{i|=l.lane,l=l.next}while(l!==t)}else null===r&&(l.shared.lanes=0);Lu|=i,e.lanes=i,e.memoizedState=s}}function Ir(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],l=a.callback;if(null!==l){if(a.callback=null,a=n,"function"!=typeof l)throw Error(r(191,l));l.call(a)}}}var zr=(new a.Component).refs;function Fr(e,t,n,a){n=null==(n=n(a,t=e.memoizedState))?t:j({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Ur={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=ec(),l=tc(e),r=Br(a,l);r.payload=t,null!=n&&(r.callback=n),null!==(t=Mr(e,r,l))&&(nc(t,e,l,a),Rr(t,e,l))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=ec(),l=tc(e),r=Br(a,l);r.tag=1,r.payload=t,null!=n&&(r.callback=n),null!==(t=Mr(e,r,l))&&(nc(t,e,l,a),Rr(t,e,l))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),a=tc(e),l=Br(n,a);l.tag=2,null!=t&&(l.callback=t),null!==(t=Mr(e,l,a))&&(nc(t,e,a,n),Rr(t,e,a))}};function Hr(e,t,n,a,l,r,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,r,i):!(t.prototype&&t.prototype.isPureReactComponent&&ua(n,a)&&ua(l,r))}function $r(e,t,n){var a=!1,l=Ol,r=t.contextType;return"object"==typeof r&&null!==r?r=Cr(r):(l=Dl(t)?Pl:Nl.current,r=(a=null!=(a=t.contextTypes))?Tl(e,l):Ol),t=new t(n,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ur,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=r),t}function Vr(e,t,n,a){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Ur.enqueueReplaceState(t,t.state,null)}function Wr(e,t,n,a){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=zr,Tr(e);var r=t.contextType;"object"==typeof r&&null!==r?l.context=Cr(r):(r=Dl(t)?Pl:Nl.current,l.context=Tl(e,r)),l.state=e.memoizedState,"function"==typeof(r=t.getDerivedStateFromProps)&&(Fr(e,t,r,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&Ur.enqueueReplaceState(l,l.state,null),jr(e,n,l,a),l.state=e.memoizedState),"function"==typeof l.componentDidMount&&(e.flags|=4194308)}function Yr(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(r(309));var a=n.stateNode}if(!a)throw Error(r(147,e));var l=a,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=l.refs;t===zr&&(t=l.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(r(284));if(!n._owner)throw Error(r(290,e))}return e}function Gr(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Qr(e){return(0,e._init)(e._payload)}function Kr(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t){return(e=Bc(e,t)).index=0,e.sibling=null,e}function i(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,a){return null===t||6!==t.tag?((t=jc(n,e.mode,a)).return=e,t):((t=l(t,n)).return=e,t)}function c(e,t,n,a){var r=n.type;return r===S?s(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===r||"object"==typeof r&&null!==r&&r.$$typeof===D&&Qr(r)===t.type)?((a=l(t,n.props)).ref=Yr(e,t,n),a.return=e,a):((a=Mc(n.type,n.key,n.props,null,e.mode,a)).ref=Yr(e,t,n),a.return=e,a)}function d(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ic(n,e.mode,a)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function s(e,t,n,a,r){return null===t||7!==t.tag?((t=Rc(n,e.mode,a,r)).return=e,t):((t=l(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=jc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return(n=Mc(t.type,t.key,t.props,null,e.mode,n)).ref=Yr(e,null,t),n.return=e,n;case w:return(t=Ic(t,e.mode,n)).return=e,t;case D:return f(e,(0,t._init)(t._payload),n)}if(te(t)||R(t))return(t=Rc(t,e.mode,n,null)).return=e,t;Gr(e,t)}return null}function m(e,t,n,a){var l=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==l?null:u(e,t,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===l?c(e,t,n,a):null;case w:return n.key===l?d(e,t,n,a):null;case D:return m(e,t,(l=n._init)(n._payload),a)}if(te(n)||R(n))return null!==l?null:s(e,t,n,a,null);Gr(e,n)}return null}function p(e,t,n,a,l){if("string"==typeof a&&""!==a||"number"==typeof a)return u(t,e=e.get(n)||null,""+a,l);if("object"==typeof a&&null!==a){switch(a.$$typeof){case _:return c(t,e=e.get(null===a.key?n:a.key)||null,a,l);case w:return d(t,e=e.get(null===a.key?n:a.key)||null,a,l);case D:return p(e,t,n,(0,a._init)(a._payload),l)}if(te(a)||R(a))return s(t,e=e.get(n)||null,a,l,null);Gr(t,a)}return null}function v(l,r,o,u){for(var c=null,d=null,s=r,v=r=0,h=null;null!==s&&v<o.length;v++){s.index>v?(h=s,s=null):h=s.sibling;var b=m(l,s,o[v],u);if(null===b){null===s&&(s=h);break}e&&s&&null===b.alternate&&t(l,s),r=i(b,r,v),null===d?c=b:d.sibling=b,d=b,s=h}if(v===o.length)return n(l,s),lr&&Xl(l,v),c;if(null===s){for(;v<o.length;v++)null!==(s=f(l,o[v],u))&&(r=i(s,r,v),null===d?c=s:d.sibling=s,d=s);return lr&&Xl(l,v),c}for(s=a(l,s);v<o.length;v++)null!==(h=p(s,l,v,o[v],u))&&(e&&null!==h.alternate&&s.delete(null===h.key?v:h.key),r=i(h,r,v),null===d?c=h:d.sibling=h,d=h);return e&&s.forEach((function(e){return t(l,e)})),lr&&Xl(l,v),c}function h(l,o,u,c){var d=R(u);if("function"!=typeof d)throw Error(r(150));if(null==(u=d.call(u)))throw Error(r(151));for(var s=d=null,v=o,h=o=0,b=null,g=u.next();null!==v&&!g.done;h++,g=u.next()){v.index>h?(b=v,v=null):b=v.sibling;var E=m(l,v,g.value,c);if(null===E){null===v&&(v=b);break}e&&v&&null===E.alternate&&t(l,v),o=i(E,o,h),null===s?d=E:s.sibling=E,s=E,v=b}if(g.done)return n(l,v),lr&&Xl(l,h),d;if(null===v){for(;!g.done;h++,g=u.next())null!==(g=f(l,g.value,c))&&(o=i(g,o,h),null===s?d=g:s.sibling=g,s=g);return lr&&Xl(l,h),d}for(v=a(l,v);!g.done;h++,g=u.next())null!==(g=p(v,l,h,g.value,c))&&(e&&null!==g.alternate&&v.delete(null===g.key?h:g.key),o=i(g,o,h),null===s?d=g:s.sibling=g,s=g);return e&&v.forEach((function(e){return t(l,e)})),lr&&Xl(l,h),d}return function e(a,r,i,u){if("object"==typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case _:e:{for(var c=i.key,d=r;null!==d;){if(d.key===c){if((c=i.type)===S){if(7===d.tag){n(a,d.sibling),(r=l(d,i.props.children)).return=a,a=r;break e}}else if(d.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===D&&Qr(c)===d.type){n(a,d.sibling),(r=l(d,i.props)).ref=Yr(a,d,i),r.return=a,a=r;break e}n(a,d);break}t(a,d),d=d.sibling}i.type===S?((r=Rc(i.props.children,a.mode,u,i.key)).return=a,a=r):((u=Mc(i.type,i.key,i.props,null,a.mode,u)).ref=Yr(a,r,i),u.return=a,a=u)}return o(a);case w:e:{for(d=i.key;null!==r;){if(r.key===d){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(a,r.sibling),(r=l(r,i.children||[])).return=a,a=r;break e}n(a,r);break}t(a,r),r=r.sibling}(r=Ic(i,a.mode,u)).return=a,a=r}return o(a);case D:return e(a,r,(d=i._init)(i._payload),u)}if(te(i))return v(a,r,i,u);if(R(i))return h(a,r,i,u);Gr(a,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==r&&6===r.tag?(n(a,r.sibling),(r=l(r,i)).return=a,a=r):(n(a,r),(r=jc(i,a.mode,u)).return=a,a=r),o(a)):n(a,r)}}var Zr=Kr(!0),qr=Kr(!1),Xr={},Jr=xl(Xr),ei=xl(Xr),ti=xl(Xr);function ni(e){if(e===Xr)throw Error(r(174));return e}function ai(e,t){switch(Al(ti,t),Al(ei,e),Al(Jr,Xr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Cl(Jr),Al(Jr,t)}function li(){Cl(Jr),Cl(ei),Cl(ti)}function ri(e){ni(ti.current);var t=ni(Jr.current),n=ue(t,e.type);t!==n&&(Al(ei,e),Al(Jr,n))}function ii(e){ei.current===e&&(Cl(Jr),Cl(ei))}var oi=xl(0);function ui(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ci=[];function di(){for(var e=0;e<ci.length;e++)ci[e]._workInProgressVersionPrimary=null;ci.length=0}var si=y.ReactCurrentDispatcher,fi=y.ReactCurrentBatchConfig,mi=0,pi=null,vi=null,hi=null,bi=!1,gi=!1,Ei=0,yi=0;function _i(){throw Error(r(321))}function wi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!oa(e[n],t[n]))return!1;return!0}function Si(e,t,n,a,l,i){if(mi=i,pi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,si.current=null===e||null===e.memoizedState?io:oo,e=n(a,l),gi){i=0;do{if(gi=!1,Ei=0,25<=i)throw Error(r(301));i+=1,hi=vi=null,t.updateQueue=null,si.current=uo,e=n(a,l)}while(gi)}if(si.current=ro,t=null!==vi&&null!==vi.next,mi=0,hi=vi=pi=null,bi=!1,t)throw Error(r(300));return e}function xi(){var e=0!==Ei;return Ei=0,e}function Ci(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===hi?pi.memoizedState=hi=e:hi=hi.next=e,hi}function Ai(){if(null===vi){var e=pi.alternate;e=null!==e?e.memoizedState:null}else e=vi.next;var t=null===hi?pi.memoizedState:hi.next;if(null!==t)hi=t,vi=e;else{if(null===e)throw Error(r(310));e={memoizedState:(vi=e).memoizedState,baseState:vi.baseState,baseQueue:vi.baseQueue,queue:vi.queue,next:null},null===hi?pi.memoizedState=hi=e:hi=hi.next=e}return hi}function Oi(e,t){return"function"==typeof t?t(e):t}function Ni(e){var t=Ai(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var a=vi,l=a.baseQueue,i=n.pending;if(null!==i){if(null!==l){var o=l.next;l.next=i.next,i.next=o}a.baseQueue=l=i,n.pending=null}if(null!==l){i=l.next,a=a.baseState;var u=o=null,c=null,d=i;do{var s=d.lane;if((mi&s)===s)null!==c&&(c=c.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),a=d.hasEagerState?d.eagerState:e(a,d.action);else{var f={lane:s,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};null===c?(u=c=f,o=a):c=c.next=f,pi.lanes|=s,Lu|=s}d=d.next}while(null!==d&&d!==i);null===c?o=a:c.next=u,oa(a,t.memoizedState)||(yo=!0),t.memoizedState=a,t.baseState=o,t.baseQueue=c,n.lastRenderedState=a}if(null!==(e=n.interleaved)){l=e;do{i=l.lane,pi.lanes|=i,Lu|=i,l=l.next}while(l!==e)}else null===l&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ki(e){var t=Ai(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var a=n.dispatch,l=n.pending,i=t.memoizedState;if(null!==l){n.pending=null;var o=l=l.next;do{i=e(i,o.action),o=o.next}while(o!==l);oa(i,t.memoizedState)||(yo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,a]}function Pi(){}function Ti(e,t){var n=pi,a=Ai(),l=t(),i=!oa(a.memoizedState,l);if(i&&(a.memoizedState=l,yo=!0),a=a.queue,$i(Mi.bind(null,n,a,e),[e]),a.getSnapshot!==t||i||null!==hi&&1&hi.memoizedState.tag){if(n.flags|=2048,Ii(9,Bi.bind(null,n,a,l,t),void 0,null),null===ku)throw Error(r(349));0!=(30&mi)||Di(n,t,l)}return l}function Di(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=pi.updateQueue)?(t={lastEffect:null,stores:null},pi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Bi(e,t,n,a){t.value=n,t.getSnapshot=a,Ri(t)&&Li(e)}function Mi(e,t,n){return n((function(){Ri(t)&&Li(e)}))}function Ri(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!oa(e,n)}catch(e){return!0}}function Li(e){var t=kr(e,1);null!==t&&nc(t,e,1,-1)}function ji(e){var t=Ci();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Oi,lastRenderedState:e},t.queue=e,e=e.dispatch=to.bind(null,pi,e),[t.memoizedState,e]}function Ii(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=pi.updateQueue)?(t={lastEffect:null,stores:null},pi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function zi(){return Ai().memoizedState}function Fi(e,t,n,a){var l=Ci();pi.flags|=e,l.memoizedState=Ii(1|t,n,void 0,void 0===a?null:a)}function Ui(e,t,n,a){var l=Ai();a=void 0===a?null:a;var r=void 0;if(null!==vi){var i=vi.memoizedState;if(r=i.destroy,null!==a&&wi(a,i.deps))return void(l.memoizedState=Ii(t,n,r,a))}pi.flags|=e,l.memoizedState=Ii(1|t,n,r,a)}function Hi(e,t){return Fi(8390656,8,e,t)}function $i(e,t){return Ui(2048,8,e,t)}function Vi(e,t){return Ui(4,2,e,t)}function Wi(e,t){return Ui(4,4,e,t)}function Yi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Gi(e,t,n){return n=null!=n?n.concat([e]):null,Ui(4,4,Yi.bind(null,t,e),n)}function Qi(){}function Ki(e,t){var n=Ai();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&wi(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Zi(e,t){var n=Ai();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&wi(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function qi(e,t,n){return 0==(21&mi)?(e.baseState&&(e.baseState=!1,yo=!0),e.memoizedState=n):(oa(n,t)||(n=vt(),pi.lanes|=n,Lu|=n,e.baseState=!0),t)}function Xi(e,t){var n=Et;Et=0!==n&&4>n?n:4,e(!0);var a=fi.transition;fi.transition={};try{e(!1),t()}finally{Et=n,fi.transition=a}}function Ji(){return Ai().memoizedState}function eo(e,t,n){var a=tc(e);n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},no(e)?ao(t,n):null!==(n=Nr(e,t,n,a))&&(nc(n,e,a,ec()),lo(n,t,a))}function to(e,t,n){var a=tc(e),l={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(no(e))ao(t,l);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=r(i,n);if(l.hasEagerState=!0,l.eagerState=o,oa(o,i)){var u=t.interleaved;return null===u?(l.next=l,Or(t)):(l.next=u.next,u.next=l),void(t.interleaved=l)}}catch(e){}null!==(n=Nr(e,t,l,a))&&(nc(n,e,a,l=ec()),lo(n,t,a))}}function no(e){var t=e.alternate;return e===pi||null!==t&&t===pi}function ao(e,t){gi=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function lo(e,t,n){if(0!=(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,gt(e,n)}}var ro={readContext:Cr,useCallback:_i,useContext:_i,useEffect:_i,useImperativeHandle:_i,useInsertionEffect:_i,useLayoutEffect:_i,useMemo:_i,useReducer:_i,useRef:_i,useState:_i,useDebugValue:_i,useDeferredValue:_i,useTransition:_i,useMutableSource:_i,useSyncExternalStore:_i,useId:_i,unstable_isNewReconciler:!1},io={readContext:Cr,useCallback:function(e,t){return Ci().memoizedState=[e,void 0===t?null:t],e},useContext:Cr,useEffect:Hi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Fi(4194308,4,Yi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Fi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Fi(4,2,e,t)},useMemo:function(e,t){var n=Ci();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=Ci();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=eo.bind(null,pi,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},Ci().memoizedState=e},useState:ji,useDebugValue:Qi,useDeferredValue:function(e){return Ci().memoizedState=e},useTransition:function(){var e=ji(!1),t=e[0];return e=Xi.bind(null,e[1]),Ci().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=pi,l=Ci();if(lr){if(void 0===n)throw Error(r(407));n=n()}else{if(n=t(),null===ku)throw Error(r(349));0!=(30&mi)||Di(a,t,n)}l.memoizedState=n;var i={value:n,getSnapshot:t};return l.queue=i,Hi(Mi.bind(null,a,i,e),[e]),a.flags|=2048,Ii(9,Bi.bind(null,a,i,n,t),void 0,null),n},useId:function(){var e=Ci(),t=ku.identifierPrefix;if(lr){var n=ql;t=":"+t+"R"+(n=(Zl&~(1<<32-it(Zl)-1)).toString(32)+n),0<(n=Ei++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=yi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},oo={readContext:Cr,useCallback:Ki,useContext:Cr,useEffect:$i,useImperativeHandle:Gi,useInsertionEffect:Vi,useLayoutEffect:Wi,useMemo:Zi,useReducer:Ni,useRef:zi,useState:function(){return Ni(Oi)},useDebugValue:Qi,useDeferredValue:function(e){return qi(Ai(),vi.memoizedState,e)},useTransition:function(){return[Ni(Oi)[0],Ai().memoizedState]},useMutableSource:Pi,useSyncExternalStore:Ti,useId:Ji,unstable_isNewReconciler:!1},uo={readContext:Cr,useCallback:Ki,useContext:Cr,useEffect:$i,useImperativeHandle:Gi,useInsertionEffect:Vi,useLayoutEffect:Wi,useMemo:Zi,useReducer:ki,useRef:zi,useState:function(){return ki(Oi)},useDebugValue:Qi,useDeferredValue:function(e){var t=Ai();return null===vi?t.memoizedState=e:qi(t,vi.memoizedState,e)},useTransition:function(){return[ki(Oi)[0],Ai().memoizedState]},useMutableSource:Pi,useSyncExternalStore:Ti,useId:Ji,unstable_isNewReconciler:!1};function co(e,t){try{var n="",a=t;do{n+=U(a),a=a.return}while(a);var l=n}catch(e){l="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:l,digest:null}}function so(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fo(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var mo="function"==typeof WeakMap?WeakMap:Map;function po(e,t,n){(n=Br(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Vu||(Vu=!0,Wu=a),fo(0,t)},n}function vo(e,t,n){(n=Br(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"==typeof a){var l=t.value;n.payload=function(){return a(l)},n.callback=function(){fo(0,t)}}var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){fo(0,t),"function"!=typeof a&&(null===Yu?Yu=new Set([this]):Yu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ho(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new mo;var l=new Set;a.set(t,l)}else void 0===(l=a.get(t))&&(l=new Set,a.set(t,l));l.has(n)||(l.add(n),e=Cc.bind(null,e,t,n),t.then(e,e))}function bo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function go(e,t,n,a,l){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Br(-1,1)).tag=2,Mr(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=l,e)}var Eo=y.ReactCurrentOwner,yo=!1;function _o(e,t,n,a){t.child=null===e?qr(t,null,n,a):Zr(t,e.child,n,a)}function wo(e,t,n,a,l){n=n.render;var r=t.ref;return xr(t,l),a=Si(e,t,n,a,r,l),n=xi(),null===e||yo?(lr&&n&&er(t),t.flags|=1,_o(e,t,a,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Vo(e,t,l))}function So(e,t,n,a,l){if(null===e){var r=n.type;return"function"!=typeof r||Dc(r)||void 0!==r.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mc(n.type,null,a,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,xo(e,t,r,a,l))}if(r=e.child,0==(e.lanes&l)){var i=r.memoizedProps;if((n=null!==(n=n.compare)?n:ua)(i,a)&&e.ref===t.ref)return Vo(e,t,l)}return t.flags|=1,(e=Bc(r,a)).ref=t.ref,e.return=t,t.child=e}function xo(e,t,n,a,l){if(null!==e){var r=e.memoizedProps;if(ua(r,a)&&e.ref===t.ref){if(yo=!1,t.pendingProps=a=r,0==(e.lanes&l))return t.lanes=e.lanes,Vo(e,t,l);0!=(131072&e.flags)&&(yo=!0)}}return Oo(e,t,n,a,l)}function Co(e,t,n){var a=t.pendingProps,l=a.children,r=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Al(Bu,Du),Du|=n;else{if(0==(1073741824&n))return e=null!==r?r.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Al(Bu,Du),Du|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==r?r.baseLanes:n,Al(Bu,Du),Du|=a}else null!==r?(a=r.baseLanes|n,t.memoizedState=null):a=n,Al(Bu,Du),Du|=a;return _o(e,t,l,n),t.child}function Ao(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Oo(e,t,n,a,l){var r=Dl(n)?Pl:Nl.current;return r=Tl(t,r),xr(t,l),n=Si(e,t,n,a,r,l),a=xi(),null===e||yo?(lr&&a&&er(t),t.flags|=1,_o(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Vo(e,t,l))}function No(e,t,n,a,l){if(Dl(n)){var r=!0;Ll(t)}else r=!1;if(xr(t,l),null===t.stateNode)$o(e,t),$r(t,n,a),Wr(t,n,a,l),a=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var u=i.context,c=n.contextType;c="object"==typeof c&&null!==c?Cr(c):Tl(t,c=Dl(n)?Pl:Nl.current);var d=n.getDerivedStateFromProps,s="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate;s||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==a||u!==c)&&Vr(t,i,a,c),Pr=!1;var f=t.memoizedState;i.state=f,jr(t,a,i,l),u=t.memoizedState,o!==a||f!==u||kl.current||Pr?("function"==typeof d&&(Fr(t,n,d,a),u=t.memoizedState),(o=Pr||Hr(t,n,o,a,f,u,c))?(s||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=u),i.props=a,i.state=u,i.context=c,a=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),a=!1)}else{i=t.stateNode,Dr(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:hr(t.type,o),i.props=c,s=t.pendingProps,f=i.context,u="object"==typeof(u=n.contextType)&&null!==u?Cr(u):Tl(t,u=Dl(n)?Pl:Nl.current);var m=n.getDerivedStateFromProps;(d="function"==typeof m||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==s||f!==u)&&Vr(t,i,a,u),Pr=!1,f=t.memoizedState,i.state=f,jr(t,a,i,l);var p=t.memoizedState;o!==s||f!==p||kl.current||Pr?("function"==typeof m&&(Fr(t,n,m,a),p=t.memoizedState),(c=Pr||Hr(t,n,c,a,f,p,u)||!1)?(d||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(a,p,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(a,p,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=p),i.props=a,i.state=p,i.context=u,a=c):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),a=!1)}return ko(e,t,n,a,r,l)}function ko(e,t,n,a,l,r){Ao(e,t);var i=0!=(128&t.flags);if(!a&&!i)return l&&jl(t,n,!1),Vo(e,t,r);a=t.stateNode,Eo.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&i?(t.child=Zr(t,e.child,null,r),t.child=Zr(t,null,o,r)):_o(e,t,o,r),t.memoizedState=a.state,l&&jl(t,n,!0),t.child}function Po(e){var t=e.stateNode;t.pendingContext?Ml(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ml(0,t.context,!1),ai(e,t.containerInfo)}function To(e,t,n,a,l){return mr(),pr(l),t.flags|=256,_o(e,t,n,a),t.child}var Do,Bo,Mo,Ro={dehydrated:null,treeContext:null,retryLane:0};function Lo(e){return{baseLanes:e,cachePool:null,transitions:null}}function jo(e,t,n){var a,l=t.pendingProps,i=oi.current,o=!1,u=0!=(128&t.flags);if((a=u)||(a=(null===e||null!==e.memoizedState)&&0!=(2&i)),a?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Al(oi,1&i),null===e)return cr(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=l.children,e=l.fallback,o?(l=t.mode,o=t.child,u={mode:"hidden",children:u},0==(1&l)&&null!==o?(o.childLanes=0,o.pendingProps=u):o=Lc(u,l,0,null),e=Rc(e,l,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Lo(n),t.memoizedState=Ro,e):Io(t,u));if(null!==(i=e.memoizedState)&&null!==(a=i.dehydrated))return function(e,t,n,a,l,i,o){if(n)return 256&t.flags?(t.flags&=-257,zo(e,t,o,a=so(Error(r(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=a.fallback,l=t.mode,a=Lc({mode:"visible",children:a.children},l,0,null),(i=Rc(i,l,o,null)).flags|=2,a.return=t,i.return=t,a.sibling=i,t.child=a,0!=(1&t.mode)&&Zr(t,e.child,null,o),t.child.memoizedState=Lo(o),t.memoizedState=Ro,i);if(0==(1&t.mode))return zo(e,t,o,null);if("$!"===l.data){if(a=l.nextSibling&&l.nextSibling.dataset)var u=a.dgst;return a=u,zo(e,t,o,a=so(i=Error(r(419)),a,void 0))}if(u=0!=(o&e.childLanes),yo||u){if(null!==(a=ku)){switch(o&-o){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}0!==(l=0!=(l&(a.suspendedLanes|o))?0:l)&&l!==i.retryLane&&(i.retryLane=l,kr(e,l),nc(a,e,l,-1))}return vc(),zo(e,t,o,a=so(Error(r(421))))}return"$?"===l.data?(t.flags|=128,t.child=e.child,t=Oc.bind(null,e),l._reactRetry=t,null):(e=i.treeContext,ar=cl(l.nextSibling),nr=t,lr=!0,rr=null,null!==e&&(Gl[Ql++]=Zl,Gl[Ql++]=ql,Gl[Ql++]=Kl,Zl=e.id,ql=e.overflow,Kl=t),(t=Io(t,a.children)).flags|=4096,t)}(e,t,u,l,a,i,n);if(o){o=l.fallback,u=t.mode,a=(i=e.child).sibling;var c={mode:"hidden",children:l.children};return 0==(1&u)&&t.child!==i?((l=t.child).childLanes=0,l.pendingProps=c,t.deletions=null):(l=Bc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==a?o=Bc(a,o):(o=Rc(o,u,n,null)).flags|=2,o.return=t,l.return=t,l.sibling=o,t.child=l,l=o,o=t.child,u=null===(u=e.child.memoizedState)?Lo(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},o.memoizedState=u,o.childLanes=e.childLanes&~n,t.memoizedState=Ro,l}return e=(o=e.child).sibling,l=Bc(o,{mode:"visible",children:l.children}),0==(1&t.mode)&&(l.lanes=n),l.return=t,l.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=l,t.memoizedState=null,l}function Io(e,t){return(t=Lc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function zo(e,t,n,a){return null!==a&&pr(a),Zr(t,e.child,null,n),(e=Io(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Fo(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Sr(e.return,t,n)}function Uo(e,t,n,a,l){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:l}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=a,r.tail=n,r.tailMode=l)}function Ho(e,t,n){var a=t.pendingProps,l=a.revealOrder,r=a.tail;if(_o(e,t,a.children,n),0!=(2&(a=oi.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fo(e,n,t);else if(19===e.tag)Fo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Al(oi,a),0==(1&t.mode))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;null!==n;)null!==(e=n.alternate)&&null===ui(e)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Uo(t,!1,l,n,r);break;case"backwards":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(e=l.alternate)&&null===ui(e)){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Uo(t,!0,n,null,r);break;case"together":Uo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function $o(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Lu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(n=Bc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Wo(e,t){if(!lr)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Yo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var l=e.child;null!==l;)n|=l.lanes|l.childLanes,a|=14680064&l.subtreeFlags,a|=14680064&l.flags,l.return=e,l=l.sibling;else for(l=e.child;null!==l;)n|=l.lanes|l.childLanes,a|=l.subtreeFlags,a|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Go(e,t,n){var a=t.pendingProps;switch(tr(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Yo(t),null;case 1:case 17:return Dl(t.type)&&Bl(),Yo(t),null;case 3:return a=t.stateNode,li(),Cl(kl),Cl(Nl),di(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(sr(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==rr&&(ic(rr),rr=null))),Yo(t),null;case 5:ii(t);var l=ni(ti.current);if(n=t.type,null!==e&&null!=t.stateNode)Bo(e,t,n,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(r(166));return Yo(t),null}if(e=ni(Jr.current),sr(t)){a=t.stateNode,n=t.type;var i=t.memoizedProps;switch(a[fl]=t,a[ml]=i,e=0!=(1&t.mode),n){case"dialog":za("cancel",a),za("close",a);break;case"iframe":case"object":case"embed":za("load",a);break;case"video":case"audio":for(l=0;l<Ra.length;l++)za(Ra[l],a);break;case"source":za("error",a);break;case"img":case"image":case"link":za("error",a),za("load",a);break;case"details":za("toggle",a);break;case"input":Z(a,i),za("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!i.multiple},za("invalid",a);break;case"textarea":le(a,i),za("invalid",a)}for(var u in ge(n,i),l=null,i)if(i.hasOwnProperty(u)){var c=i[u];"children"===u?"string"==typeof c?a.textContent!==c&&(!0!==i.suppressHydrationWarning&&Xa(a.textContent,c,e),l=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Xa(a.textContent,c,e),l=["children",""+c]):o.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&za("scroll",a)}switch(n){case"input":Y(a),J(a,i,!0);break;case"textarea":Y(a),ie(a);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(a.onclick=Ja)}a=l,t.updateQueue=a,null!==a&&(t.flags|=4)}else{u=9===l.nodeType?l:l.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof a.is?e=u.createElement(n,{is:a.is}):(e=u.createElement(n),"select"===n&&(u=e,a.multiple?u.multiple=!0:a.size&&(u.size=a.size))):e=u.createElementNS(e,n),e[fl]=t,e[ml]=a,Do(e,t),t.stateNode=e;e:{switch(u=Ee(n,a),n){case"dialog":za("cancel",e),za("close",e),l=a;break;case"iframe":case"object":case"embed":za("load",e),l=a;break;case"video":case"audio":for(l=0;l<Ra.length;l++)za(Ra[l],e);l=a;break;case"source":za("error",e),l=a;break;case"img":case"image":case"link":za("error",e),za("load",e),l=a;break;case"details":za("toggle",e),l=a;break;case"input":Z(e,a),l=K(e,a),za("invalid",e);break;case"option":default:l=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},l=j({},a,{value:void 0}),za("invalid",e);break;case"textarea":le(e,a),l=ae(e,a),za("invalid",e)}for(i in ge(n,l),c=l)if(c.hasOwnProperty(i)){var d=c[i];"style"===i?he(e,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&se(e,d):"children"===i?"string"==typeof d?("textarea"!==n||""!==d)&&fe(e,d):"number"==typeof d&&fe(e,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=d&&"onScroll"===i&&za("scroll",e):null!=d&&E(e,i,d,u))}switch(n){case"input":Y(e),J(e,a,!1);break;case"textarea":Y(e),ie(e);break;case"option":null!=a.value&&e.setAttribute("value",""+V(a.value));break;case"select":e.multiple=!!a.multiple,null!=(i=a.value)?ne(e,!!a.multiple,i,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Ja)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Yo(t),null;case 6:if(e&&null!=t.stateNode)Mo(0,t,e.memoizedProps,a);else{if("string"!=typeof a&&null===t.stateNode)throw Error(r(166));if(n=ni(ti.current),ni(Jr.current),sr(t)){if(a=t.stateNode,n=t.memoizedProps,a[fl]=t,(i=a.nodeValue!==n)&&null!==(e=nr))switch(e.tag){case 3:Xa(a.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xa(a.nodeValue,n,0!=(1&e.mode))}i&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[fl]=t,t.stateNode=a}return Yo(t),null;case 13:if(Cl(oi),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(lr&&null!==ar&&0!=(1&t.mode)&&0==(128&t.flags))fr(),mr(),t.flags|=98560,i=!1;else if(i=sr(t),null!==a&&null!==a.dehydrated){if(null===e){if(!i)throw Error(r(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(r(317));i[fl]=t}else mr(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Yo(t),i=!1}else null!==rr&&(ic(rr),rr=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((a=null!==a)!=(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&oi.current)?0===Mu&&(Mu=3):vc())),null!==t.updateQueue&&(t.flags|=4),Yo(t),null);case 4:return li(),null===e&&Ha(t.stateNode.containerInfo),Yo(t),null;case 10:return wr(t.type._context),Yo(t),null;case 19:if(Cl(oi),null===(i=t.memoizedState))return Yo(t),null;if(a=0!=(128&t.flags),null===(u=i.rendering))if(a)Wo(i,!1);else{if(0!==Mu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=ui(e))){for(t.flags|=128,Wo(i,!1),null!==(a=u.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(i=n).flags&=14680066,null===(u=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=u.childLanes,i.lanes=u.lanes,i.child=u.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=u.memoizedProps,i.memoizedState=u.memoizedState,i.updateQueue=u.updateQueue,i.type=u.type,e=u.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Al(oi,1&oi.current|2),t.child}e=e.sibling}null!==i.tail&&qe()>Hu&&(t.flags|=128,a=!0,Wo(i,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=ui(u))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Wo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!u.alternate&&!lr)return Yo(t),null}else 2*qe()-i.renderingStartTime>Hu&&1073741824!==n&&(t.flags|=128,a=!0,Wo(i,!1),t.lanes=4194304);i.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=i.last)?n.sibling=u:t.child=u,i.last=u)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=qe(),t.sibling=null,n=oi.current,Al(oi,a?1&n|2:1&n),t):(Yo(t),null);case 22:case 23:return sc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!=(1&t.mode)?0!=(1073741824&Du)&&(Yo(t),6&t.subtreeFlags&&(t.flags|=8192)):Yo(t),null;case 24:case 25:return null}throw Error(r(156,t.tag))}function Qo(e,t){switch(tr(t),t.tag){case 1:return Dl(t.type)&&Bl(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return li(),Cl(kl),Cl(Nl),di(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ii(t),null;case 13:if(Cl(oi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(r(340));mr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Cl(oi),null;case 4:return li(),null;case 10:return wr(t.type._context),null;case 22:case 23:return sc(),null;default:return null}}Do=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bo=function(e,t,n,a){var l=e.memoizedProps;if(l!==a){e=t.stateNode,ni(Jr.current);var r,i=null;switch(n){case"input":l=K(e,l),a=K(e,a),i=[];break;case"select":l=j({},l,{value:void 0}),a=j({},a,{value:void 0}),i=[];break;case"textarea":l=ae(e,l),a=ae(e,a),i=[];break;default:"function"!=typeof l.onClick&&"function"==typeof a.onClick&&(e.onclick=Ja)}for(d in ge(n,a),n=null,l)if(!a.hasOwnProperty(d)&&l.hasOwnProperty(d)&&null!=l[d])if("style"===d){var u=l[d];for(r in u)u.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(o.hasOwnProperty(d)?i||(i=[]):(i=i||[]).push(d,null));for(d in a){var c=a[d];if(u=null!=l?l[d]:void 0,a.hasOwnProperty(d)&&c!==u&&(null!=c||null!=u))if("style"===d)if(u){for(r in u)!u.hasOwnProperty(r)||c&&c.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in c)c.hasOwnProperty(r)&&u[r]!==c[r]&&(n||(n={}),n[r]=c[r])}else n||(i||(i=[]),i.push(d,n)),n=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(i=i||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(o.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&za("scroll",e),i||u===c||(i=[])):(i=i||[]).push(d,c))}n&&(i=i||[]).push("style",n);var d=i;(t.updateQueue=d)&&(t.flags|=4)}},Mo=function(e,t,n,a){n!==a&&(t.flags|=4)};var Ko=!1,Zo=!1,qo="function"==typeof WeakSet?WeakSet:Set,Xo=null;function Jo(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){xc(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){xc(e,t,n)}}var tu=!1;function nu(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var l=a=a.next;do{if((l.tag&e)===e){var r=l.destroy;l.destroy=void 0,void 0!==r&&eu(t,n,r)}l=l.next}while(l!==a)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function lu(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ru(e){var t=e.alternate;null!==t&&(e.alternate=null,ru(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[fl],delete t[ml],delete t[vl],delete t[hl],delete t[bl]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function ou(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function cu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var du=null,su=!1;function fu(e,t,n){for(n=n.child;null!==n;)mu(e,t,n),n=n.sibling}function mu(e,t,n){if(rt&&"function"==typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(lt,n)}catch(e){}switch(n.tag){case 5:Zo||Jo(n,t);case 6:var a=du,l=su;du=null,fu(e,t,n),su=l,null!==(du=a)&&(su?(e=du,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):du.removeChild(n.stateNode));break;case 18:null!==du&&(su?(e=du,n=n.stateNode,8===e.nodeType?ul(e.parentNode,n):1===e.nodeType&&ul(e,n),Ht(e)):ul(du,n.stateNode));break;case 4:a=du,l=su,du=n.stateNode.containerInfo,su=!0,fu(e,t,n),du=a,su=l;break;case 0:case 11:case 14:case 15:if(!Zo&&null!==(a=n.updateQueue)&&null!==(a=a.lastEffect)){l=a=a.next;do{var r=l,i=r.destroy;r=r.tag,void 0!==i&&(0!=(2&r)||0!=(4&r))&&eu(n,t,i),l=l.next}while(l!==a)}fu(e,t,n);break;case 1:if(!Zo&&(Jo(n,t),"function"==typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(e){xc(n,t,e)}fu(e,t,n);break;case 21:fu(e,t,n);break;case 22:1&n.mode?(Zo=(a=Zo)||null!==n.memoizedState,fu(e,t,n),Zo=a):fu(e,t,n);break;default:fu(e,t,n)}}function pu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new qo),t.forEach((function(t){var a=Nc.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function vu(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var l=n[a];try{var i=e,o=t,u=o;e:for(;null!==u;){switch(u.tag){case 5:du=u.stateNode,su=!1;break e;case 3:case 4:du=u.stateNode.containerInfo,su=!0;break e}u=u.return}if(null===du)throw Error(r(160));mu(i,o,l),du=null,su=!1;var c=l.alternate;null!==c&&(c.return=null),l.return=null}catch(e){xc(l,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)hu(t,e),t=t.sibling}function hu(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(vu(t,e),bu(e),4&a){try{nu(3,e,e.return),au(3,e)}catch(t){xc(e,e.return,t)}try{nu(5,e,e.return)}catch(t){xc(e,e.return,t)}}break;case 1:vu(t,e),bu(e),512&a&&null!==n&&Jo(n,n.return);break;case 5:if(vu(t,e),bu(e),512&a&&null!==n&&Jo(n,n.return),32&e.flags){var l=e.stateNode;try{fe(l,"")}catch(t){xc(e,e.return,t)}}if(4&a&&null!=(l=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===i.type&&null!=i.name&&q(l,i),Ee(u,o);var d=Ee(u,i);for(o=0;o<c.length;o+=2){var s=c[o],f=c[o+1];"style"===s?he(l,f):"dangerouslySetInnerHTML"===s?se(l,f):"children"===s?fe(l,f):E(l,s,f,d)}switch(u){case"input":X(l,i);break;case"textarea":re(l,i);break;case"select":var m=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!i.multiple;var p=i.value;null!=p?ne(l,!!i.multiple,p,!1):m!==!!i.multiple&&(null!=i.defaultValue?ne(l,!!i.multiple,i.defaultValue,!0):ne(l,!!i.multiple,i.multiple?[]:"",!1))}l[ml]=i}catch(t){xc(e,e.return,t)}}break;case 6:if(vu(t,e),bu(e),4&a){if(null===e.stateNode)throw Error(r(162));l=e.stateNode,i=e.memoizedProps;try{l.nodeValue=i}catch(t){xc(e,e.return,t)}}break;case 3:if(vu(t,e),bu(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(t){xc(e,e.return,t)}break;case 4:default:vu(t,e),bu(e);break;case 13:vu(t,e),bu(e),8192&(l=e.child).flags&&(i=null!==l.memoizedState,l.stateNode.isHidden=i,!i||null!==l.alternate&&null!==l.alternate.memoizedState||(Uu=qe())),4&a&&pu(e);break;case 22:if(s=null!==n&&null!==n.memoizedState,1&e.mode?(Zo=(d=Zo)||s,vu(t,e),Zo=d):vu(t,e),bu(e),8192&a){if(d=null!==e.memoizedState,(e.stateNode.isHidden=d)&&!s&&0!=(1&e.mode))for(Xo=e,s=e.child;null!==s;){for(f=Xo=s;null!==Xo;){switch(p=(m=Xo).child,m.tag){case 0:case 11:case 14:case 15:nu(4,m,m.return);break;case 1:Jo(m,m.return);var v=m.stateNode;if("function"==typeof v.componentWillUnmount){a=m,n=m.return;try{t=a,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(e){xc(a,n,e)}}break;case 5:Jo(m,m.return);break;case 22:if(null!==m.memoizedState){_u(f);continue}}null!==p?(p.return=m,Xo=p):_u(f)}s=s.sibling}e:for(s=null,f=e;;){if(5===f.tag){if(null===s){s=f;try{l=f.stateNode,d?"function"==typeof(i=l.style).setProperty?i.setProperty("display","none","important"):i.display="none":(u=f.stateNode,o=null!=(c=f.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=ve("display",o))}catch(t){xc(e,e.return,t)}}}else if(6===f.tag){if(null===s)try{f.stateNode.nodeValue=d?"":f.memoizedProps}catch(t){xc(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;s===f&&(s=null),f=f.return}s===f&&(s=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:vu(t,e),bu(e),4&a&&pu(e);case 21:}}function bu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var a=n;break e}n=n.return}throw Error(r(160))}switch(a.tag){case 5:var l=a.stateNode;32&a.flags&&(fe(l,""),a.flags&=-33),cu(e,ou(e),l);break;case 3:case 4:var i=a.stateNode.containerInfo;uu(e,ou(e),i);break;default:throw Error(r(161))}}catch(t){xc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function gu(e,t,n){Xo=e,Eu(e,t,n)}function Eu(e,t,n){for(var a=0!=(1&e.mode);null!==Xo;){var l=Xo,r=l.child;if(22===l.tag&&a){var i=null!==l.memoizedState||Ko;if(!i){var o=l.alternate,u=null!==o&&null!==o.memoizedState||Zo;o=Ko;var c=Zo;if(Ko=i,(Zo=u)&&!c)for(Xo=l;null!==Xo;)u=(i=Xo).child,22===i.tag&&null!==i.memoizedState?wu(l):null!==u?(u.return=i,Xo=u):wu(l);for(;null!==r;)Xo=r,Eu(r,t,n),r=r.sibling;Xo=l,Ko=o,Zo=c}yu(e)}else 0!=(8772&l.subtreeFlags)&&null!==r?(r.return=l,Xo=r):yu(e)}}function yu(e){for(;null!==Xo;){var t=Xo;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Zo||au(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Zo)if(null===n)a.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:hr(t.type,n.memoizedProps);a.componentDidUpdate(l,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Ir(t,i,a);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ir(t,o,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var d=t.alternate;if(null!==d){var s=d.memoizedState;if(null!==s){var f=s.dehydrated;null!==f&&Ht(f)}}}break;default:throw Error(r(163))}Zo||512&t.flags&&lu(t)}catch(e){xc(t,t.return,e)}}if(t===e){Xo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xo=n;break}Xo=t.return}}function _u(e){for(;null!==Xo;){var t=Xo;if(t===e){Xo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xo=n;break}Xo=t.return}}function wu(e){for(;null!==Xo;){var t=Xo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(e){xc(t,n,e)}break;case 1:var a=t.stateNode;if("function"==typeof a.componentDidMount){var l=t.return;try{a.componentDidMount()}catch(e){xc(t,l,e)}}var r=t.return;try{lu(t)}catch(e){xc(t,r,e)}break;case 5:var i=t.return;try{lu(t)}catch(e){xc(t,i,e)}}}catch(e){xc(t,t.return,e)}if(t===e){Xo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Xo=o;break}Xo=t.return}}var Su,xu=Math.ceil,Cu=y.ReactCurrentDispatcher,Au=y.ReactCurrentOwner,Ou=y.ReactCurrentBatchConfig,Nu=0,ku=null,Pu=null,Tu=0,Du=0,Bu=xl(0),Mu=0,Ru=null,Lu=0,ju=0,Iu=0,zu=null,Fu=null,Uu=0,Hu=1/0,$u=null,Vu=!1,Wu=null,Yu=null,Gu=!1,Qu=null,Ku=0,Zu=0,qu=null,Xu=-1,Ju=0;function ec(){return 0!=(6&Nu)?qe():-1!==Xu?Xu:Xu=qe()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Nu)&&0!==Tu?Tu&-Tu:null!==vr.transition?(0===Ju&&(Ju=vt()),Ju):0!==(e=Et)?e:e=void 0===(e=window.event)?16:Zt(e.type)}function nc(e,t,n,a){if(50<Zu)throw Zu=0,qu=null,Error(r(185));bt(e,n,a),0!=(2&Nu)&&e===ku||(e===ku&&(0==(2&Nu)&&(ju|=n),4===Mu&&oc(e,Tu)),ac(e,a),1===n&&0===Nu&&0==(1&t.mode)&&(Hu=qe()+500,zl&&Hl()))}function ac(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,r=e.pendingLanes;0<r;){var i=31-it(r),o=1<<i,u=l[i];-1===u?0!=(o&n)&&0==(o&a)||(l[i]=mt(o,t)):u<=t&&(e.expiredLanes|=o),r&=~o}}(e,t);var a=ft(e,e===ku?Tu:0);if(0===a)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){zl=!0,Ul(e)}(uc.bind(null,e)):Ul(uc.bind(null,e)),il((function(){0==(6&Nu)&&Hl()})),n=null;else{switch(yt(a)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=kc(n,lc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function lc(e,t){if(Xu=-1,Ju=0,0!=(6&Nu))throw Error(r(327));var n=e.callbackNode;if(wc()&&e.callbackNode!==n)return null;var a=ft(e,e===ku?Tu:0);if(0===a)return null;if(0!=(30&a)||0!=(a&e.expiredLanes)||t)t=hc(e,a);else{t=a;var l=Nu;Nu|=2;var i=pc();for(ku===e&&Tu===t||($u=null,Hu=qe()+500,fc(e,t));;)try{gc();break}catch(t){mc(e,t)}_r(),Cu.current=i,Nu=l,null!==Pu?t=0:(ku=null,Tu=0,t=Mu)}if(0!==t){if(2===t&&0!==(l=pt(e))&&(a=l,t=rc(e,l)),1===t)throw n=Ru,fc(e,0),oc(e,a),ac(e,qe()),n;if(6===t)oc(e,a);else{if(l=e.current.alternate,0==(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var l=n[a],r=l.getSnapshot;l=l.value;try{if(!oa(r(),l))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(l)&&(2===(t=hc(e,a))&&0!==(i=pt(e))&&(a=i,t=rc(e,i)),1===t))throw n=Ru,fc(e,0),oc(e,a),ac(e,qe()),n;switch(e.finishedWork=l,e.finishedLanes=a,t){case 0:case 1:throw Error(r(345));case 2:case 5:_c(e,Fu,$u);break;case 3:if(oc(e,a),(130023424&a)===a&&10<(t=Uu+500-qe())){if(0!==ft(e,0))break;if(((l=e.suspendedLanes)&a)!==a){ec(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=al(_c.bind(null,e,Fu,$u),t);break}_c(e,Fu,$u);break;case 4:if(oc(e,a),(4194240&a)===a)break;for(t=e.eventTimes,l=-1;0<a;){var o=31-it(a);i=1<<o,(o=t[o])>l&&(l=o),a&=~i}if(a=l,10<(a=(120>(a=qe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*xu(a/1960))-a)){e.timeoutHandle=al(_c.bind(null,e,Fu,$u),a);break}_c(e,Fu,$u);break;default:throw Error(r(329))}}}return ac(e,qe()),e.callbackNode===n?lc.bind(null,e):null}function rc(e,t){var n=zu;return e.current.memoizedState.isDehydrated&&(fc(e,t).flags|=256),2!==(e=hc(e,t))&&(t=Fu,Fu=n,null!==t&&ic(t)),e}function ic(e){null===Fu?Fu=e:Fu.push.apply(Fu,e)}function oc(e,t){for(t&=~Iu,t&=~ju,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),a=1<<n;e[n]=-1,t&=~a}}function uc(e){if(0!=(6&Nu))throw Error(r(327));wc();var t=ft(e,0);if(0==(1&t))return ac(e,qe()),null;var n=hc(e,t);if(0!==e.tag&&2===n){var a=pt(e);0!==a&&(t=a,n=rc(e,a))}if(1===n)throw n=Ru,fc(e,0),oc(e,t),ac(e,qe()),n;if(6===n)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,_c(e,Fu,$u),ac(e,qe()),null}function cc(e,t){var n=Nu;Nu|=1;try{return e(t)}finally{0===(Nu=n)&&(Hu=qe()+500,zl&&Hl())}}function dc(e){null!==Qu&&0===Qu.tag&&0==(6&Nu)&&wc();var t=Nu;Nu|=1;var n=Ou.transition,a=Et;try{if(Ou.transition=null,Et=1,e)return e()}finally{Et=a,Ou.transition=n,0==(6&(Nu=t))&&Hl()}}function sc(){Du=Bu.current,Cl(Bu)}function fc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ll(n)),null!==Pu)for(n=Pu.return;null!==n;){var a=n;switch(tr(a),a.tag){case 1:null!=(a=a.type.childContextTypes)&&Bl();break;case 3:li(),Cl(kl),Cl(Nl),di();break;case 5:ii(a);break;case 4:li();break;case 13:case 19:Cl(oi);break;case 10:wr(a.type._context);break;case 22:case 23:sc()}n=n.return}if(ku=e,Pu=e=Bc(e.current,null),Tu=Du=t,Mu=0,Ru=null,Iu=ju=Lu=0,Fu=zu=null,null!==Ar){for(t=0;t<Ar.length;t++)if(null!==(a=(n=Ar[t]).interleaved)){n.interleaved=null;var l=a.next,r=n.pending;if(null!==r){var i=r.next;r.next=l,a.next=i}n.pending=a}Ar=null}return e}function mc(e,t){for(;;){var n=Pu;try{if(_r(),si.current=ro,bi){for(var a=pi.memoizedState;null!==a;){var l=a.queue;null!==l&&(l.pending=null),a=a.next}bi=!1}if(mi=0,hi=vi=pi=null,gi=!1,Ei=0,Au.current=null,null===n||null===n.return){Mu=1,Ru=t,Pu=null;break}e:{var i=e,o=n.return,u=n,c=t;if(t=Tu,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var d=c,s=u,f=s.tag;if(0==(1&s.mode)&&(0===f||11===f||15===f)){var m=s.alternate;m?(s.updateQueue=m.updateQueue,s.memoizedState=m.memoizedState,s.lanes=m.lanes):(s.updateQueue=null,s.memoizedState=null)}var p=bo(o);if(null!==p){p.flags&=-257,go(p,o,u,0,t),1&p.mode&&ho(i,d,t),c=d;var v=(t=p).updateQueue;if(null===v){var h=new Set;h.add(c),t.updateQueue=h}else v.add(c);break e}if(0==(1&t)){ho(i,d,t),vc();break e}c=Error(r(426))}else if(lr&&1&u.mode){var b=bo(o);if(null!==b){0==(65536&b.flags)&&(b.flags|=256),go(b,o,u,0,t),pr(co(c,u));break e}}i=c=co(c,u),4!==Mu&&(Mu=2),null===zu?zu=[i]:zu.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Lr(i,po(0,c,t));break e;case 1:u=c;var g=i.type,E=i.stateNode;if(0==(128&i.flags)&&("function"==typeof g.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Yu||!Yu.has(E)))){i.flags|=65536,t&=-t,i.lanes|=t,Lr(i,vo(i,u,t));break e}}i=i.return}while(null!==i)}yc(n)}catch(e){t=e,Pu===n&&null!==n&&(Pu=n=n.return);continue}break}}function pc(){var e=Cu.current;return Cu.current=ro,null===e?ro:e}function vc(){0!==Mu&&3!==Mu&&2!==Mu||(Mu=4),null===ku||0==(268435455&Lu)&&0==(268435455&ju)||oc(ku,Tu)}function hc(e,t){var n=Nu;Nu|=2;var a=pc();for(ku===e&&Tu===t||($u=null,fc(e,t));;)try{bc();break}catch(t){mc(e,t)}if(_r(),Nu=n,Cu.current=a,null!==Pu)throw Error(r(261));return ku=null,Tu=0,Mu}function bc(){for(;null!==Pu;)Ec(Pu)}function gc(){for(;null!==Pu&&!Ke();)Ec(Pu)}function Ec(e){var t=Su(e.alternate,e,Du);e.memoizedProps=e.pendingProps,null===t?yc(e):Pu=t,Au.current=null}function yc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Go(n,t,Du)))return void(Pu=n)}else{if(null!==(n=Qo(n,t)))return n.flags&=32767,void(Pu=n);if(null===e)return Mu=6,void(Pu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Pu=t);Pu=t=e}while(null!==t);0===Mu&&(Mu=5)}function _c(e,t,n){var a=Et,l=Ou.transition;try{Ou.transition=null,Et=1,function(e,t,n,a){do{wc()}while(null!==Qu);if(0!=(6&Nu))throw Error(r(327));n=e.finishedWork;var l=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var l=31-it(n),r=1<<l;t[l]=0,a[l]=-1,e[l]=-1,n&=~r}}(e,i),e===ku&&(Pu=ku=null,Tu=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Gu||(Gu=!0,kc(tt,(function(){return wc(),null}))),i=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||i){i=Ou.transition,Ou.transition=null;var o=Et;Et=1;var u=Nu;Nu|=4,Au.current=null,function(e,t){if(el=Vt,ma(e=fa())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var l=a.anchorOffset,i=a.focusNode;a=a.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var o=0,u=-1,c=-1,d=0,s=0,f=e,m=null;t:for(;;){for(var p;f!==n||0!==l&&3!==f.nodeType||(u=o+l),f!==i||0!==a&&3!==f.nodeType||(c=o+a),3===f.nodeType&&(o+=f.nodeValue.length),null!==(p=f.firstChild);)m=f,f=p;for(;;){if(f===e)break t;if(m===n&&++d===l&&(u=o),m===i&&++s===a&&(c=o),null!==(p=f.nextSibling))break;m=(f=m).parentNode}f=p}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(tl={focusedElem:e,selectionRange:n},Vt=!1,Xo=t;null!==Xo;)if(e=(t=Xo).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Xo=e;else for(;null!==Xo;){t=Xo;try{var v=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==v){var h=v.memoizedProps,b=v.memoizedState,g=t.stateNode,E=g.getSnapshotBeforeUpdate(t.elementType===t.type?h:hr(t.type,h),b);g.__reactInternalSnapshotBeforeUpdate=E}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(r(163))}}catch(e){xc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Xo=e;break}Xo=t.return}v=tu,tu=!1}(e,n),hu(n,e),pa(tl),Vt=!!el,tl=el=null,e.current=n,gu(n,e,l),Ze(),Nu=u,Et=o,Ou.transition=i}else e.current=n;if(Gu&&(Gu=!1,Qu=e,Ku=l),0===(i=e.pendingLanes)&&(Yu=null),function(e){if(rt&&"function"==typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(lt,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),ac(e,qe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)a((l=t[n]).value,{componentStack:l.stack,digest:l.digest});if(Vu)throw Vu=!1,e=Wu,Wu=null,e;0!=(1&Ku)&&0!==e.tag&&wc(),0!=(1&(i=e.pendingLanes))?e===qu?Zu++:(Zu=0,qu=e):Zu=0,Hl()}(e,t,n,a)}finally{Ou.transition=l,Et=a}return null}function wc(){if(null!==Qu){var e=yt(Ku),t=Ou.transition,n=Et;try{if(Ou.transition=null,Et=16>e?16:e,null===Qu)var a=!1;else{if(e=Qu,Qu=null,Ku=0,0!=(6&Nu))throw Error(r(331));var l=Nu;for(Nu|=4,Xo=e.current;null!==Xo;){var i=Xo,o=i.child;if(0!=(16&Xo.flags)){var u=i.deletions;if(null!==u){for(var c=0;c<u.length;c++){var d=u[c];for(Xo=d;null!==Xo;){var s=Xo;switch(s.tag){case 0:case 11:case 15:nu(8,s,i)}var f=s.child;if(null!==f)f.return=s,Xo=f;else for(;null!==Xo;){var m=(s=Xo).sibling,p=s.return;if(ru(s),s===d){Xo=null;break}if(null!==m){m.return=p,Xo=m;break}Xo=p}}}var v=i.alternate;if(null!==v){var h=v.child;if(null!==h){v.child=null;do{var b=h.sibling;h.sibling=null,h=b}while(null!==h)}}Xo=i}}if(0!=(2064&i.subtreeFlags)&&null!==o)o.return=i,Xo=o;else e:for(;null!==Xo;){if(0!=(2048&(i=Xo).flags))switch(i.tag){case 0:case 11:case 15:nu(9,i,i.return)}var g=i.sibling;if(null!==g){g.return=i.return,Xo=g;break e}Xo=i.return}}var E=e.current;for(Xo=E;null!==Xo;){var y=(o=Xo).child;if(0!=(2064&o.subtreeFlags)&&null!==y)y.return=o,Xo=y;else e:for(o=E;null!==Xo;){if(0!=(2048&(u=Xo).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(e){xc(u,u.return,e)}if(u===o){Xo=null;break e}var _=u.sibling;if(null!==_){_.return=u.return,Xo=_;break e}Xo=u.return}}if(Nu=l,Hl(),rt&&"function"==typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(lt,e)}catch(e){}a=!0}return a}finally{Et=n,Ou.transition=t}}return!1}function Sc(e,t,n){e=Mr(e,t=po(0,t=co(n,t),1),1),t=ec(),null!==e&&(bt(e,1,t),ac(e,t))}function xc(e,t,n){if(3===e.tag)Sc(e,e,n);else for(;null!==t;){if(3===t.tag){Sc(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof a.componentDidCatch&&(null===Yu||!Yu.has(a))){t=Mr(t,e=vo(t,e=co(n,e),1),1),e=ec(),null!==t&&(bt(t,1,e),ac(t,e));break}}t=t.return}}function Cc(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,ku===e&&(Tu&n)===n&&(4===Mu||3===Mu&&(130023424&Tu)===Tu&&500>qe()-Uu?fc(e,0):Iu|=n),ac(e,t)}function Ac(e,t){0===t&&(0==(1&e.mode)?t=1:(t=dt,0==(130023424&(dt<<=1))&&(dt=4194304)));var n=ec();null!==(e=kr(e,t))&&(bt(e,t,n),ac(e,n))}function Oc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ac(e,n)}function Nc(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,l=e.memoizedState;null!==l&&(n=l.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(r(314))}null!==a&&a.delete(t),Ac(e,n)}function kc(e,t){return Ge(e,t)}function Pc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Tc(e,t,n,a){return new Pc(e,t,n,a)}function Dc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bc(e,t){var n=e.alternate;return null===n?((n=Tc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mc(e,t,n,a,l,i){var o=2;if(a=e,"function"==typeof e)Dc(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case S:return Rc(n.children,l,i,t);case x:o=8,l|=8;break;case C:return(e=Tc(12,n,t,2|l)).elementType=C,e.lanes=i,e;case k:return(e=Tc(13,n,t,l)).elementType=k,e.lanes=i,e;case P:return(e=Tc(19,n,t,l)).elementType=P,e.lanes=i,e;case B:return Lc(n,l,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:o=10;break e;case O:o=9;break e;case N:o=11;break e;case T:o=14;break e;case D:o=16,a=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=Tc(o,n,t,l)).elementType=e,t.type=a,t.lanes=i,t}function Rc(e,t,n,a){return(e=Tc(7,e,a,t)).lanes=n,e}function Lc(e,t,n,a){return(e=Tc(22,e,a,t)).elementType=B,e.lanes=n,e.stateNode={isHidden:!1},e}function jc(e,t,n){return(e=Tc(6,e,null,t)).lanes=n,e}function Ic(e,t,n){return(t=Tc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function zc(e,t,n,a,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ht(0),this.expirationTimes=ht(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ht(0),this.identifierPrefix=a,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function Fc(e,t,n,a,l,r,i,o,u){return e=new zc(e,t,n,o,u),1===t?(t=1,!0===r&&(t|=8)):t=0,r=Tc(3,null,null,t),e.current=r,r.stateNode=e,r.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Tr(r),e}function Uc(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}function Hc(e){if(!e)return Ol;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Dl(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(r(171))}if(1===e.tag){var n=e.type;if(Dl(n))return Rl(e,n,t)}return t}function $c(e,t,n,a,l,r,i,o,u){return(e=Fc(n,a,!0,e,0,r,0,o,u)).context=Hc(null),n=e.current,(r=Br(a=ec(),l=tc(n))).callback=null!=t?t:null,Mr(n,r,l),e.current.lanes=l,bt(e,l,a),ac(e,a),e}function Vc(e,t,n,a){var l=t.current,r=ec(),i=tc(l);return n=Hc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Br(r,i)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Mr(l,t,i))&&(nc(e,l,i,r),Rr(e,l,i)),i}function Wc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Yc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Gc(e,t){Yc(e,t),(e=e.alternate)&&Yc(e,t)}Su=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||kl.current)yo=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return yo=!1,function(e,t,n){switch(t.tag){case 3:Po(t),mr();break;case 5:ri(t);break;case 1:Dl(t.type)&&Ll(t);break;case 4:ai(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,l=t.memoizedProps.value;Al(br,a._currentValue),a._currentValue=l;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Al(oi,1&oi.current),t.flags|=128,null):0!=(n&t.child.childLanes)?jo(e,t,n):(Al(oi,1&oi.current),null!==(e=Vo(e,t,n))?e.sibling:null);Al(oi,1&oi.current);break;case 19:if(a=0!=(n&t.childLanes),0!=(128&e.flags)){if(a)return Ho(e,t,n);t.flags|=128}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null,l.lastEffect=null),Al(oi,oi.current),a)break;return null;case 22:case 23:return t.lanes=0,Co(e,t,n)}return Vo(e,t,n)}(e,t,n);yo=0!=(131072&e.flags)}else yo=!1,lr&&0!=(1048576&t.flags)&&Jl(t,Yl,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;$o(e,t),e=t.pendingProps;var l=Tl(t,Nl.current);xr(t,n),l=Si(null,t,a,e,l,n);var i=xi();return t.flags|=1,"object"==typeof l&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Dl(a)?(i=!0,Ll(t)):i=!1,t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,Tr(t),l.updater=Ur,t.stateNode=l,l._reactInternals=t,Wr(t,a,e,n),t=ko(null,t,a,!0,i,n)):(t.tag=0,lr&&i&&er(t),_o(null,t,l,n),t=t.child),t;case 16:a=t.elementType;e:{switch($o(e,t),e=t.pendingProps,a=(l=a._init)(a._payload),t.type=a,l=t.tag=function(e){if("function"==typeof e)return Dc(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===T)return 14}return 2}(a),e=hr(a,e),l){case 0:t=Oo(null,t,a,e,n);break e;case 1:t=No(null,t,a,e,n);break e;case 11:t=wo(null,t,a,e,n);break e;case 14:t=So(null,t,a,hr(a.type,e),n);break e}throw Error(r(306,a,""))}return t;case 0:return a=t.type,l=t.pendingProps,Oo(e,t,a,l=t.elementType===a?l:hr(a,l),n);case 1:return a=t.type,l=t.pendingProps,No(e,t,a,l=t.elementType===a?l:hr(a,l),n);case 3:e:{if(Po(t),null===e)throw Error(r(387));a=t.pendingProps,l=(i=t.memoizedState).element,Dr(e,t),jr(t,a,null,n);var o=t.memoizedState;if(a=o.element,i.isDehydrated){if(i={element:a,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=To(e,t,a,n,l=co(Error(r(423)),t));break e}if(a!==l){t=To(e,t,a,n,l=co(Error(r(424)),t));break e}for(ar=cl(t.stateNode.containerInfo.firstChild),nr=t,lr=!0,rr=null,n=qr(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(mr(),a===l){t=Vo(e,t,n);break e}_o(e,t,a,n)}t=t.child}return t;case 5:return ri(t),null===e&&cr(t),a=t.type,l=t.pendingProps,i=null!==e?e.memoizedProps:null,o=l.children,nl(a,l)?o=null:null!==i&&nl(a,i)&&(t.flags|=32),Ao(e,t),_o(e,t,o,n),t.child;case 6:return null===e&&cr(t),null;case 13:return jo(e,t,n);case 4:return ai(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Zr(t,null,a,n):_o(e,t,a,n),t.child;case 11:return a=t.type,l=t.pendingProps,wo(e,t,a,l=t.elementType===a?l:hr(a,l),n);case 7:return _o(e,t,t.pendingProps,n),t.child;case 8:case 12:return _o(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,l=t.pendingProps,i=t.memoizedProps,o=l.value,Al(br,a._currentValue),a._currentValue=o,null!==i)if(oa(i.value,o)){if(i.children===l.children&&!kl.current){t=Vo(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var u=i.dependencies;if(null!==u){o=i.child;for(var c=u.firstContext;null!==c;){if(c.context===a){if(1===i.tag){(c=Br(-1,n&-n)).tag=2;var d=i.updateQueue;if(null!==d){var s=(d=d.shared).pending;null===s?c.next=c:(c.next=s.next,s.next=c),d.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Sr(i.return,n,t),u.lanes|=n;break}c=c.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(r(341));o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),Sr(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}_o(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,a=t.pendingProps.children,xr(t,n),a=a(l=Cr(l)),t.flags|=1,_o(e,t,a,n),t.child;case 14:return l=hr(a=t.type,t.pendingProps),So(e,t,a,l=hr(a.type,l),n);case 15:return xo(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,l=t.pendingProps,l=t.elementType===a?l:hr(a,l),$o(e,t),t.tag=1,Dl(a)?(e=!0,Ll(t)):e=!1,xr(t,n),$r(t,a,l),Wr(t,a,l,n),ko(null,t,a,!0,e,n);case 19:return Ho(e,t,n);case 22:return Co(e,t,n)}throw Error(r(156,t.tag))};var Qc="function"==typeof reportError?reportError:function(e){console.error(e)};function Kc(e){this._internalRoot=e}function Zc(e){this._internalRoot=e}function qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function ed(e,t,n,a,l){var r=n._reactRootContainer;if(r){var i=r;if("function"==typeof l){var o=l;l=function(){var e=Wc(i);o.call(e)}}Vc(t,i,e,l)}else i=function(e,t,n,a,l){if(l){if("function"==typeof a){var r=a;a=function(){var e=Wc(i);r.call(e)}}var i=$c(t,a,e,0,null,!1,0,"",Jc);return e._reactRootContainer=i,e[pl]=i.current,Ha(8===e.nodeType?e.parentNode:e),dc(),i}for(;l=e.lastChild;)e.removeChild(l);if("function"==typeof a){var o=a;a=function(){var e=Wc(u);o.call(e)}}var u=Fc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=u,e[pl]=u.current,Ha(8===e.nodeType?e.parentNode:e),dc((function(){Vc(t,u,n,a)})),u}(n,t,e,l,a);return Wc(i)}Zc.prototype.render=Kc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(r(409));Vc(e,t,null,null)},Zc.prototype.unmount=Kc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;dc((function(){Vc(null,e,null,null)})),t[pl]=null}},Zc.prototype.unstable_scheduleHydration=function(e){if(e){var t=xt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Bt.length&&0!==t&&t<Bt[n].priority;n++);Bt.splice(n,0,e),0===n&&jt(e)}},_t=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=st(t.pendingLanes);0!==n&&(gt(t,1|n),ac(t,qe()),0==(6&Nu)&&(Hu=qe()+500,Hl()))}break;case 13:dc((function(){var t=kr(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),Gc(e,1)}},wt=function(e){if(13===e.tag){var t=kr(e,134217728);null!==t&&nc(t,e,134217728,ec()),Gc(e,134217728)}},St=function(e){if(13===e.tag){var t=tc(e),n=kr(e,t);null!==n&&nc(n,e,t,ec()),Gc(e,t)}},xt=function(){return Et},Ct=function(e,t){var n=Et;try{return Et=e,t()}finally{Et=n}},we=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var l=_l(a);if(!l)throw Error(r(90));G(a),X(a,l)}}}break;case"textarea":re(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ne=cc,ke=dc;var td={usingClientEntryPoint:!1,Events:[El,yl,_l,Ae,Oe,cc]},nd={findFiberByHostInstance:gl,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ad={bundleType:nd.bundleType,version:nd.version,rendererPackageName:nd.rendererPackageName,rendererConfig:nd.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:nd.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ld=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ld.isDisabled&&ld.supportsFiber)try{lt=ld.inject(ad),rt=ld}catch(de){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=td,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!qc(t))throw Error(r(200));return Uc(e,t,null,n)},t.createRoot=function(e,t){if(!qc(e))throw Error(r(299));var n=!1,a="",l=Qc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(l=t.onRecoverableError)),t=Fc(e,1,!1,null,0,n,0,a,l),e[pl]=t.current,Ha(8===e.nodeType?e.parentNode:e),new Kc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(r(188));throw e=Object.keys(e).join(","),Error(r(268,e))}return null===(e=We(t))?null:e.stateNode},t.flushSync=function(e){return dc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(r(200));return ed(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!qc(e))throw Error(r(405));var a=null!=n&&n.hydratedSources||null,l=!1,i="",o=Qc;if(null!=n&&(!0===n.unstable_strictMode&&(l=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=$c(t,null,e,1,null!=n?n:null,l,0,i,o),e[pl]=t.current,Ha(e),a)for(e=0;e<a.length;e++)l=(l=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new Zc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(r(200));return ed(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(r(40));return!!e._reactRootContainer&&(dc((function(){ed(null,null,e,!1,(function(){e._reactRootContainer=null,e[pl]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Xc(n))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return ed(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{var a=n(3935);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},3935:(e,t,n)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9818:(e,t,n)=>{n.r(t),n.d(t,{AbortedDeferredError:()=>U,Await:()=>gt,BrowserRouter:()=>jt,Form:()=>Ht,HashRouter:()=>It,Link:()=>Ft,MemoryRouter:()=>ft,NavLink:()=>Ut,Navigate:()=>mt,NavigationType:()=>a,Outlet:()=>pt,Route:()=>vt,Router:()=>ht,RouterProvider:()=>st,Routes:()=>bt,ScrollRestoration:()=>Vt,UNSAFE_DataRouterContext:()=>ke,UNSAFE_DataRouterStateContext:()=>Pe,UNSAFE_DataStaticRouterContext:()=>Ne,UNSAFE_LocationContext:()=>Be,UNSAFE_NavigationContext:()=>De,UNSAFE_RouteContext:()=>Me,UNSAFE_enhanceManualRouteObjects:()=>xt,createBrowserRouter:()=>Rt,createHashRouter:()=>Lt,createMemoryRouter:()=>Ct,createPath:()=>p,createRoutesFromChildren:()=>wt,createRoutesFromElements:()=>wt,createSearchParams:()=>Tt,defer:()=>V,generatePath:()=>A,isRouteErrorResponse:()=>G,json:()=>F,matchPath:()=>O,matchRoutes:()=>y,parsePath:()=>v,redirect:()=>W,renderMatches:()=>St,resolvePath:()=>D,unstable_HistoryRouter:()=>zt,useActionData:()=>ot,useAsyncError:()=>dt,useAsyncValue:()=>ct,useFetcher:()=>tn,useFetchers:()=>nn,useFormAction:()=>Jt,useHref:()=>Le,useInRouterContext:()=>je,useLinkClickHandler:()=>Kt,useLoaderData:()=>rt,useLocation:()=>Ie,useMatch:()=>Fe,useMatches:()=>lt,useNavigate:()=>Ue,useNavigation:()=>nt,useNavigationType:()=>ze,useOutlet:()=>Ve,useOutletContext:()=>$e,useParams:()=>We,useResolvedPath:()=>Ye,useRevalidator:()=>at,useRouteError:()=>ut,useRouteLoaderData:()=>it,useRoutes:()=>Ge,useSearchParams:()=>Zt,useSubmit:()=>qt});var a,l=n(7294),r=n.t(l,2);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(a||(a={}));const o="popstate";function u(e){void 0===e&&(e={});let t,{initialEntries:n=["/"],initialIndex:l,v5Compat:r=!1}=e;t=n.map(((e,t)=>f(e,"string"==typeof e?null:e.state,0===t?"default":void 0)));let i=c(null==l?t.length-1:l),o=a.Pop,u=null;function c(e){return Math.min(Math.max(e,0),t.length-1)}function d(){return t[i]}function f(e,n,a){void 0===n&&(n=null);let l=m(t?d().pathname:"/",e,n,a);return s("/"===l.pathname.charAt(0),"relative pathnames are not supported in memory history: "+JSON.stringify(e)),l}return{get index(){return i},get action(){return o},get location(){return d()},createHref:e=>"string"==typeof e?e:p(e),encodeLocation:e=>e,push(e,n){o=a.Push;let l=f(e,n);i+=1,t.splice(i,t.length,l),r&&u&&u({action:o,location:l})},replace(e,n){o=a.Replace;let l=f(e,n);t[i]=l,r&&u&&u({action:o,location:l})},go(e){o=a.Pop,i=c(i+e),u&&u({action:o,location:d()})},listen:e=>(u=e,()=>{u=null})}}function c(e){return void 0===e&&(e={}),b((function(e,t){let{pathname:n,search:a,hash:l}=e.location;return m("",{pathname:n,search:a,hash:l},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"==typeof t?t:p(t)}),null,e)}function d(e){return void 0===e&&(e={}),b((function(e,t){let{pathname:n="/",search:a="",hash:l=""}=v(e.location.hash.substr(1));return m("",{pathname:n,search:a,hash:l},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){let n=e.document.querySelector("base"),a="";if(n&&n.getAttribute("href")){let t=e.location.href,n=t.indexOf("#");a=-1===n?t:t.slice(0,n)}return a+"#"+("string"==typeof t?t:p(t))}),(function(e,t){s("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")}),e)}function s(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function f(e){return{usr:e.state,key:e.key}}function m(e,t,n,a){return void 0===n&&(n=null),i({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?v(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function p(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function v(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function h(e){let t="undefined"!=typeof window&&void 0!==window.location&&"null"!==window.location.origin?window.location.origin:"unknown://unknown",n="string"==typeof e?e:p(e);return new URL(n,t)}function b(e,t,n,l){void 0===l&&(l={});let{window:r=document.defaultView,v5Compat:u=!1}=l,c=r.history,d=a.Pop,s=null;function v(){d=a.Pop,s&&s({action:d,location:b.location})}let b={get action(){return d},get location(){return e(r,c)},listen(e){if(s)throw new Error("A history only accepts one active listener");return r.addEventListener(o,v),s=e,()=>{r.removeEventListener(o,v),s=null}},createHref:e=>t(r,e),encodeLocation(e){let t=h(p(e));return i({},e,{pathname:t.pathname,search:t.search,hash:t.hash})},push:function(e,t){d=a.Push;let l=m(b.location,e,t);n&&n(l,e);let i=f(l),o=b.createHref(l);try{c.pushState(i,"",o)}catch(e){r.location.assign(o)}u&&s&&s({action:d,location:b.location})},replace:function(e,t){d=a.Replace;let l=m(b.location,e,t);n&&n(l,e);let r=f(l),i=b.createHref(l);c.replaceState(r,"",i),u&&s&&s({action:d,location:b.location})},go:e=>c.go(e)};return b}var g;function E(e,t,n){return void 0===t&&(t=[]),void 0===n&&(n=new Set),e.map(((e,a)=>{let l=[...t,a],r="string"==typeof e.id?e.id:l.join("-");return P(!0!==e.index||!e.children,"Cannot specify children on an index route"),P(!n.has(r),'Found a route id collision on id "'+r+"\".  Route id's must be globally unique within Data Router usages"),n.add(r),function(e){return!0===e.index}(e)?i({},e,{id:r}):i({},e,{id:r,children:e.children?E(e.children,l,n):void 0})}))}function y(e,t,n){void 0===n&&(n="/");let a=k(("string"==typeof t?v(t):t).pathname||"/",n);if(null==a)return null;let l=_(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(l);let r=null;for(let e=0;null==r&&e<l.length;++e)r=C(l[e],N(a));return r}function _(e,t,n,a){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a=""),e.forEach(((e,l)=>{let r={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:l,route:e};r.relativePath.startsWith("/")&&(P(r.relativePath.startsWith(a),'Absolute route path "'+r.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),r.relativePath=r.relativePath.slice(a.length));let i=L([a,r.relativePath]),o=n.concat(r);e.children&&e.children.length>0&&(P(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),_(e.children,t,o,i)),(null!=e.path||e.index)&&t.push({path:i,score:x(i,e.index),routesMeta:o})})),t}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(g||(g={}));const w=/^:\w+$/,S=e=>"*"===e;function x(e,t){let n=e.split("/"),a=n.length;return n.some(S)&&(a+=-2),t&&(a+=2),n.filter((e=>!S(e))).reduce(((e,t)=>e+(w.test(t)?3:""===t?1:10)),a)}function C(e,t){let{routesMeta:n}=e,a={},l="/",r=[];for(let e=0;e<n.length;++e){let i=n[e],o=e===n.length-1,u="/"===l?t:t.slice(l.length)||"/",c=O({path:i.relativePath,caseSensitive:i.caseSensitive,end:o},u);if(!c)return null;Object.assign(a,c.params);let d=i.route;r.push({params:a,pathname:L([l,c.pathname]),pathnameBase:j(L([l,c.pathnameBase])),route:d}),"/"!==c.pathnameBase&&(l=L([l,c.pathnameBase]))}return r}function A(e,t){return void 0===t&&(t={}),e.replace(/:(\w+)/g,((e,n)=>(P(null!=t[n],'Missing ":'+n+'" param'),t[n]))).replace(/(\/?)\*/,((e,n,a,l)=>null==t["*"]?"/*"===l?"/":"":""+n+t["*"]))}function O(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0),T("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],l="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(a.push(t),"([^\\/]+)")));return e.endsWith("*")?(a.push("*"),l+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?l+="\\/*$":""!==e&&"/"!==e&&(l+="(?:(?=\\/|$))"),[new RegExp(l,t?void 0:"i"),a]}(e.path,e.caseSensitive,e.end),l=t.match(n);if(!l)return null;let r=l[0],i=r.replace(/(.)\/+$/,"$1"),o=l.slice(1);return{params:a.reduce(((e,t,n)=>{if("*"===t){let e=o[n]||"";i=r.slice(0,r.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return T(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(o[n]||"",t),e}),{}),pathname:r,pathnameBase:i,pattern:e}}function N(e){try{return decodeURI(e)}catch(t){return T(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function k(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function P(e,t){if(!1===e||null==e)throw new Error(t)}function T(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function D(e,t){void 0===t&&(t="/");let{pathname:n,search:a="",hash:l=""}="string"==typeof e?v(e):e,r=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:r,search:I(a),hash:z(l)}}function B(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function M(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function R(e,t,n,a){let l;void 0===a&&(a=!1),"string"==typeof e?l=v(e):(l=i({},e),P(!l.pathname||!l.pathname.includes("?"),B("?","pathname","search",l)),P(!l.pathname||!l.pathname.includes("#"),B("#","pathname","hash",l)),P(!l.search||!l.search.includes("#"),B("#","search","hash",l)));let r,o=""===e||""===l.pathname,u=o?"/":l.pathname;if(a||null==u)r=n;else{let e=t.length-1;if(u.startsWith("..")){let t=u.split("/");for(;".."===t[0];)t.shift(),e-=1;l.pathname=t.join("/")}r=e>=0?t[e]:"/"}let c=D(l,r),d=u&&"/"!==u&&u.endsWith("/"),s=(o||"."===u)&&n.endsWith("/");return c.pathname.endsWith("/")||!d&&!s||(c.pathname+="/"),c}const L=e=>e.join("/").replace(/\/\/+/g,"/"),j=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),I=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",z=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"",F=function(e,t){void 0===t&&(t={});let n="number"==typeof t?{status:t}:t,a=new Headers(n.headers);return a.has("Content-Type")||a.set("Content-Type","application/json; charset=utf-8"),new Response(JSON.stringify(e),i({},n,{headers:a}))};class U extends Error{}class H{constructor(e){let t;this.pendingKeys=new Set,this.subscriber=void 0,P(e&&"object"==typeof e&&!Array.isArray(e),"defer() only accepts plain objects"),this.abortPromise=new Promise(((e,n)=>t=n)),this.controller=new AbortController;let n=()=>t(new U("Deferred data aborted"));this.unlistenAbortSignal=()=>this.controller.signal.removeEventListener("abort",n),this.controller.signal.addEventListener("abort",n),this.data=Object.entries(e).reduce(((e,t)=>{let[n,a]=t;return Object.assign(e,{[n]:this.trackPromise(n,a)})}),{})}trackPromise(e,t){if(!(t instanceof Promise))return t;this.pendingKeys.add(e);let n=Promise.race([t,this.abortPromise]).then((t=>this.onSettle(n,e,null,t)),(t=>this.onSettle(n,e,t)));return n.catch((()=>{})),Object.defineProperty(n,"_tracked",{get:()=>!0}),n}onSettle(e,t,n,a){if(this.controller.signal.aborted&&n instanceof U)return this.unlistenAbortSignal(),Object.defineProperty(e,"_error",{get:()=>n}),Promise.reject(n);this.pendingKeys.delete(t),this.done&&this.unlistenAbortSignal();const l=this.subscriber;return n?(Object.defineProperty(e,"_error",{get:()=>n}),l&&l(!1),Promise.reject(n)):(Object.defineProperty(e,"_data",{get:()=>a}),l&&l(!1),a)}subscribe(e){this.subscriber=e}cancel(){this.controller.abort(),this.pendingKeys.forEach(((e,t)=>this.pendingKeys.delete(t)));let e=this.subscriber;e&&e(!0)}async resolveData(e){let t=!1;if(!this.done){let n=()=>this.cancel();e.addEventListener("abort",n),t=await new Promise((t=>{this.subscribe((a=>{e.removeEventListener("abort",n),(a||this.done)&&t(a)}))}))}return t}get done(){return 0===this.pendingKeys.size}get unwrappedData(){return P(null!==this.data&&this.done,"Can only unwrap data on initialized and settled deferreds"),Object.entries(this.data).reduce(((e,t)=>{let[n,a]=t;return Object.assign(e,{[n]:$(a)})}),{})}}function $(e){if(!function(e){return e instanceof Promise&&!0===e._tracked}(e))return e;if(e._error)throw e._error;return e._data}function V(e){return new H(e)}const W=function(e,t){void 0===t&&(t=302);let n=t;"number"==typeof n?n={status:n}:void 0===n.status&&(n.status=302);let a=new Headers(n.headers);return a.set("Location",e),new Response(null,i({},n,{headers:a}))};class Y{constructor(e,t,n){this.status=e,this.statusText=t||"",this.data=n}}function G(e){return e instanceof Y}const Q={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0},K={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0},Z=!("undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement);function q(e){P(e.routes.length>0,"You must provide a non-empty routes array to createRouter");let t=E(e.routes),n=null,l=new Set,r=null,o=null,u=null,c=!1,d=y(t,e.history.location,e.basename),s=null;if(null==d){let{matches:e,route:n,error:a}=de(t);d=e,s={[n.id]:a}}let f,p,v=!d.some((e=>e.route.loader))||null!=e.hydrationData,h={historyAction:e.history.action,location:e.history.location,matches:d,initialized:v,navigation:Q,restoreScrollPosition:null,preventScrollReset:!1,revalidation:"idle",loaderData:e.hydrationData&&e.hydrationData.loaderData||{},actionData:e.hydrationData&&e.hydrationData.actionData||null,errors:e.hydrationData&&e.hydrationData.errors||s,fetchers:new Map},b=a.Pop,g=!1,_=!1,w=!1,S=[],x=[],C=new Map,A=0,O=-1,N=new Map,k=new Set,T=new Map,D=new Map;function B(e){h=i({},h,e),l.forEach((e=>e(h)))}function M(t,n){var l;B(i({},null!=h.actionData&&null!=h.navigation.formMethod&&"loading"===h.navigation.state&&(null==(l=h.navigation.formAction)?void 0:l.split("?")[0])===t.pathname?{}:{actionData:null},n,n.loaderData?{loaderData:ue(h.loaderData,n.loaderData,n.matches||[])}:{},{historyAction:b,location:t,initialized:!0,navigation:Q,revalidation:"idle",restoreScrollPosition:!h.navigation.formData&&G(t,n.matches||h.matches),preventScrollReset:g})),_||b===a.Pop||(b===a.Push?e.history.push(t,t.state):b===a.Replace&&e.history.replace(t,t.state)),b=a.Pop,g=!1,_=!1,w=!1,S=[],x=[]}async function R(n,l,c){p&&p.abort(),p=null,b=n,_=!0===(c&&c.startUninterruptedRevalidation),function(e,t){if(r&&o&&u){let n=t.map((e=>ye(e,h.loaderData))),a=o(e,n)||e.key;r[a]=u()}}(h.location,h.matches),g=!0===(c&&c.preventScrollReset);let d=c&&c.overrideNavigation,s=y(t,l,e.basename);if(!s){let{matches:e,route:n,error:a}=de(t);return W(),void M(l,{matches:e,loaderData:{},errors:{[n.id]:a}})}if(E=l,(v=h.location).pathname===E.pathname&&v.search===E.search&&v.hash!==E.hash)return void M(l,{matches:s});var v,E;p=new AbortController;let N,R,L=re(l,p.signal,c&&c.submission);if(c&&c.pendingError)R={[ce(s).route.id]:c.pendingError};else if(c&&c.submission){let e=await async function(e,t,n,l,r){let o;z(),B({navigation:i({state:"submitting",location:t},n)});let u=_e(l,t);if(u.route.action){if(o=await le("action",e,u,l,f.basename),e.signal.aborted)return{shortCircuited:!0}}else o=se(t);if(he(o)){let e=i({state:"loading",location:m(h.location,o.location)},n);return await j(o,e,r&&r.replace),{shortCircuited:!0}}if(ve(o)){let e=ce(l,u.route.id);return!0!==(r&&r.replace)&&(b=a.Push),{pendingActionError:{[e.route.id]:o.error}}}if(pe(o))throw new Error("defer() is not supported in actions");return{pendingActionData:{[u.route.id]:o.data}}}(L,l,c.submission,s,{replace:c.replace});if(e.shortCircuited)return;N=e.pendingActionData,R=e.pendingActionError,d=i({state:"loading",location:l},c.submission)}let{shortCircuited:F,loaderData:U,errors:H}=await async function(e,t,n,a,l,r,o,u){let c=a;c||(c={state:"loading",location:t,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0});let[d,s]=te(h,n,l,t,w,S,x,o,u,T);if(W((e=>!(n&&n.some((t=>t.route.id===e)))||d&&d.some((t=>t.route.id===e)))),0===d.length&&0===s.length)return M(t,{matches:n,loaderData:ue(h.loaderData,{},n),errors:u||null,actionData:o||null}),{shortCircuited:!0};_||(s.forEach((e=>{let[t]=e,n=h.fetchers.get(t),a={state:"loading",data:n&&n.data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};h.fetchers.set(t,a)})),B(i({navigation:c,actionData:o||h.actionData||null},s.length>0?{fetchers:new Map(h.fetchers)}:{}))),O=++A,s.forEach((e=>{let[t]=e;return C.set(t,p)}));let{results:f,loaderResults:m,fetcherResults:v}=await I(h.matches,n,d,s,e);if(e.signal.aborted)return{shortCircuited:!0};s.forEach((e=>{let[t]=e;return C.delete(t)}));let b=fe(f);if(b){let e=ee(h,b);return await j(b,e,r),{shortCircuited:!0}}let{loaderData:g,errors:E}=oe(h,n,d,m,u,s,v,D);return D.forEach(((e,t)=>{e.subscribe((n=>{(n||e.done)&&D.delete(t)}))})),function(){let e=[];for(let t of k){let n=h.fetchers.get(t);P(n,"Expected fetcher: "+t),"loading"===n.state&&(k.delete(t),e.push(t))}$(e)}(),i({loaderData:g,errors:E},V(O)||s.length>0?{fetchers:new Map(h.fetchers)}:{})}(L,l,s,d,c&&c.submission,c&&c.replace,N,R);F||(p=null,M(l,{matches:s,loaderData:U,errors:H}))}function L(e){return h.fetchers.get(e)||K}async function j(e,t,n){e.revalidate&&(w=!0),P(t.location,"Expected a location on the redirect navigation"),p=null;let l=!0===n?a.Replace:a.Push;await R(l,t.location,{overrideNavigation:t})}async function I(e,t,n,a,l){let r=await Promise.all([...n.map((e=>le("loader",l,e,t,f.basename))),...a.map((e=>{let[,t,n,a]=e;return le("loader",re(t,l.signal),n,a,f.basename)}))]),i=r.slice(0,n.length),o=r.slice(n.length);return await Promise.all([be(e,n,i,l.signal,!1,h.loaderData),be(e,a.map((e=>{let[,,t]=e;return t})),o,l.signal,!0)]),{results:r,loaderResults:i,fetcherResults:o}}function z(){w=!0,S.push(...W()),T.forEach(((e,t)=>{C.has(t)&&(x.push(t),H(t))}))}function F(e,t,n){let a=ce(h.matches,t);U(e),B({errors:{[a.route.id]:n},fetchers:new Map(h.fetchers)})}function U(e){C.has(e)&&H(e),T.delete(e),N.delete(e),k.delete(e),h.fetchers.delete(e)}function H(e){let t=C.get(e);P(t,"Expected fetch controller: "+e),t.abort(),C.delete(e)}function $(e){for(let t of e){let e={state:"idle",data:L(t).data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};h.fetchers.set(t,e)}}function V(e){let t=[];for(let[n,a]of N)if(a<e){let e=h.fetchers.get(n);P(e,"Expected fetcher: "+n),"loading"===e.state&&(H(n),N.delete(n),t.push(n))}return $(t),t.length>0}function W(e){let t=[];return D.forEach(((n,a)=>{e&&!e(a)||(n.cancel(),t.push(a),D.delete(a))})),t}function G(e,t){if(r&&o&&u){let n=t.map((e=>ye(e,h.loaderData))),a=o(e,n)||e.key,l=r[a];if("number"==typeof l)return l}return null}return f={get basename(){return e.basename},get state(){return h},get routes(){return t},initialize:function(){return n=e.history.listen((e=>{let{action:t,location:n}=e;return R(t,n)})),h.initialized||R(a.Pop,h.location),f},subscribe:function(e){return l.add(e),()=>l.delete(e)},enableScrollRestoration:function(e,t,n){if(r=e,u=t,o=n||(e=>e.key),!c&&h.navigation===Q){c=!0;let e=G(h.location,h.matches);null!=e&&B({restoreScrollPosition:e})}return()=>{r=null,u=null,o=null}},navigate:async function(t,n){if("number"==typeof t)return void e.history.go(t);let{path:l,submission:r,error:i}=J(t,n),o=m(h.location,l,n&&n.state);o=e.history.encodeLocation(o);let u=!0===(n&&n.replace)||null!=r?a.Replace:a.Push,c=n&&"preventScrollReset"in n?!0===n.preventScrollReset:void 0;return await R(u,o,{submission:r,pendingError:i,preventScrollReset:c,replace:n&&n.replace})},fetch:function(n,a,l,r){if(Z)throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");C.has(n)&&H(n);let o=y(t,l,e.basename);if(!o)return void F(n,a,new Y(404,"Not Found",null));let{path:u,submission:c}=J(l,r,!0),d=_e(o,u);c?async function(n,a,l,r,o,u){if(z(),T.delete(n),!r.route.action){let{error:e}=se(l);return void F(n,a,e)}let c=h.fetchers.get(n),d=i({state:"submitting"},u,{data:c&&c.data});h.fetchers.set(n,d),B({fetchers:new Map(h.fetchers)});let s=new AbortController,v=re(l,s.signal,u);C.set(n,s);let g=await le("action",v,r,o,f.basename);if(v.signal.aborted)return void(C.get(n)===s&&C.delete(n));if(he(g)){C.delete(n),k.add(n);let e=i({state:"loading"},u,{data:void 0});h.fetchers.set(n,e),B({fetchers:new Map(h.fetchers)});let t=i({state:"loading",location:m(h.location,g.location)},u);return void await j(g,t)}if(ve(g))return void F(n,a,g.error);pe(g)&&P(!1,"defer() is not supported in actions");let E=h.navigation.location||h.location,_=re(E,s.signal),R="idle"!==h.navigation.state?y(t,h.navigation.location,e.basename):h.matches;P(R,"Didn't find any matches after fetcher action");let L=++A;N.set(n,L);let U=i({state:"loading",data:g.data},u);h.fetchers.set(n,U);let[H,$]=te(h,R,u,E,w,S,x,{[r.route.id]:g.data},void 0,T);$.filter((e=>{let[t]=e;return t!==n})).forEach((e=>{let[t]=e,n=h.fetchers.get(t),a={state:"loading",data:n&&n.data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};h.fetchers.set(t,a),C.set(t,s)})),B({fetchers:new Map(h.fetchers)});let{results:W,loaderResults:Y,fetcherResults:G}=await I(h.matches,R,H,$,_);if(s.signal.aborted)return;N.delete(n),C.delete(n),$.forEach((e=>{let[t]=e;return C.delete(t)}));let Q=fe(W);if(Q){let e=ee(h,Q);return void await j(Q,e)}let{loaderData:K,errors:Z}=oe(h,h.matches,H,Y,void 0,$,G,D),q={state:"idle",data:g.data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};h.fetchers.set(n,q);let X=V(L);"loading"===h.navigation.state&&L>O?(P(b,"Expected pending action"),p&&p.abort(),M(h.navigation.location,{matches:R,loaderData:K,errors:Z,fetchers:new Map(h.fetchers)})):(B(i({errors:Z,loaderData:ue(h.loaderData,K,R)},X?{fetchers:new Map(h.fetchers)}:{})),w=!1)}(n,a,u,d,o,c):(T.set(n,[u,d,o]),async function(e,t,n,a,l){let r=h.fetchers.get(e),i={state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,data:r&&r.data};h.fetchers.set(e,i),B({fetchers:new Map(h.fetchers)});let o=new AbortController,u=re(n,o.signal);C.set(e,o);let c=await le("loader",u,a,l,f.basename);if(pe(c)&&(c=await ge(c,u.signal,!0)||c),C.get(e)===o&&C.delete(e),u.signal.aborted)return;if(he(c)){let e=ee(h,c);return void await j(c,e)}if(ve(c)){let n=ce(h.matches,t);return h.fetchers.delete(e),void B({fetchers:new Map(h.fetchers),errors:{[n.route.id]:c.error}})}P(!pe(c),"Unhandled fetcher deferred data");let d={state:"idle",data:c.data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};h.fetchers.set(e,d),B({fetchers:new Map(h.fetchers)})}(n,a,u,d,o))},revalidate:function(){z(),B({revalidation:"loading"}),"submitting"!==h.navigation.state&&("idle"!==h.navigation.state?R(b||h.historyAction,h.navigation.location,{overrideNavigation:h.navigation}):R(h.historyAction,h.location,{startUninterruptedRevalidation:!0}))},createHref:t=>e.history.createHref(t),getFetcher:L,deleteFetcher:U,dispose:function(){n&&n(),l.clear(),p&&p.abort(),h.fetchers.forEach(((e,t)=>U(t)))},_internalFetchControllers:C,_internalActiveDeferreds:D},f}const X=new Set(["POST","PUT","PATCH","DELETE"]);function J(e,t,n){void 0===n&&(n=!1);let a="string"==typeof e?e:p(e);if(!t||!("formMethod"in t)&&!("formData"in t))return{path:a};if(null!=t.formMethod&&"get"!==t.formMethod)return{path:a,submission:{formMethod:t.formMethod,formAction:me(a),formEncType:t&&t.formEncType||"application/x-www-form-urlencoded",formData:t.formData}};if(!t.formData)return{path:a};let l=v(a);try{let e=ie(t.formData);n&&l.search&&Ee(l.search)&&e.append("index",""),l.search="?"+e}catch(e){return{path:a,error:new Y(400,"Bad Request","Cannot submit binary form data using GET")}}return{path:p(l)}}function ee(e,t){let{formMethod:n,formAction:a,formEncType:l,formData:r}=e.navigation;return{state:"loading",location:m(e.location,t.location),formMethod:n||void 0,formAction:a||void 0,formEncType:l||void 0,formData:r||void 0}}function te(e,t,n,a,l,r,i,o,u,c){let d=u?Object.values(u)[0]:o?Object.values(o)[0]:null,s=function(e,t){let n=e;if(t){let a=e.findIndex((e=>e.route.id===t));a>=0&&(n=e.slice(0,a))}return n}(t,u?Object.keys(u)[0]:void 0).filter(((t,i)=>null!=t.route.loader&&(function(e,t,n){let a=!t||n.route.id!==t.route.id,l=void 0===e[n.route.id];return a||l}(e.loaderData,e.matches[i],t)||r.some((e=>e===t.route.id))||ae(e.location,e.matches[i],n,a,t,l,d)))),f=[];return c&&c.forEach(((e,t)=>{let[a,r,o]=e;(i.includes(t)||l&&ae(a,r,n,a,r,l,d))&&f.push([t,a,r,o])})),[s,f]}function ne(e,t){let n=e.route.path;return e.pathname!==t.pathname||n&&n.endsWith("*")&&e.params["*"]!==t.params["*"]}function ae(e,t,n,a,l,r,o){let u=h(e),c=t.params,d=h(a),s=l.params,f=ne(t,l)||u.toString()===d.toString()||u.search!==d.search||r;if(l.route.shouldRevalidate){let e=l.route.shouldRevalidate(i({currentUrl:u,currentParams:c,nextUrl:d,nextParams:s},n,{actionResult:o,defaultShouldRevalidate:f}));if("boolean"==typeof e)return e}return f}async function le(e,t,n,a,l,r,i){let o,u,c;void 0===r&&(r=!1),void 0===i&&(i=!1);let d=new Promise(((e,t)=>c=t)),s=()=>c();t.signal.addEventListener("abort",s);try{let a=n.route[e];P(a,"Could not find the "+e+' to run on the "'+n.route.id+'" route'),u=await Promise.race([a({request:t,params:n.params}),d])}catch(e){o=g.error,u=e}finally{t.signal.removeEventListener("abort",s)}if(u instanceof Response){let e,c=u.status;if(c>=300&&c<=399){let e=u.headers.get("Location");P(e,"Redirects returned/thrown from loaders/actions must have a Location header");let i=R(e,M(a.slice(0,a.indexOf(n)+1)).map((e=>e.pathnameBase)),h(t.url).pathname);if(P(p(i),"Unable to resolve redirect location: "+u.headers.get("Location")),l){let e=i.pathname;i.pathname="/"===e?l:L([l,e])}if(e=p(i),r)throw u.headers.set("Location",e),u;return{type:g.redirect,status:c,location:e,revalidate:null!==u.headers.get("X-Remix-Revalidate")}}if(i)throw{type:o||g.data,response:u};let d=u.headers.get("Content-Type");return e=d&&d.startsWith("application/json")?await u.json():await u.text(),o===g.error?{type:o,error:new Y(c,u.statusText,e),headers:u.headers}:{type:g.data,data:e,statusCode:u.status,headers:u.headers}}return o===g.error?{type:o,error:u}:u instanceof H?{type:g.deferred,deferredData:u}:{type:g.data,data:u}}function re(e,t,n){let a=h(me(e)).toString(),l={signal:t};if(n){let{formMethod:e,formEncType:t,formData:a}=n;l.method=e.toUpperCase(),l.body="application/x-www-form-urlencoded"===t?ie(a):a}return new Request(a,l)}function ie(e){let t=new URLSearchParams;for(let[n,a]of e.entries())P("string"==typeof a,'File inputs are not supported with encType "application/x-www-form-urlencoded", please use "multipart/form-data" instead.'),t.append(n,a);return t}function oe(e,t,n,a,l,r,o,u){let{loaderData:c,errors:d}=function(e,t,n,a,l){let r,i={},o=null,u=!1,c={};return n.forEach(((n,d)=>{let s=t[d].route.id;if(P(!he(n),"Cannot handle redirect results in processLoaderData"),ve(n)){let t=ce(e,s),l=n.error;a&&(l=Object.values(a)[0],a=void 0),o=Object.assign(o||{},{[t.route.id]:l}),u||(u=!0,r=G(n.error)?n.error.status:500),n.headers&&(c[s]=n.headers)}else pe(n)?(l&&l.set(s,n.deferredData),i[s]=n.deferredData.data):(i[s]=n.data,null==n.statusCode||200===n.statusCode||u||(r=n.statusCode),n.headers&&(c[s]=n.headers))})),a&&(o=a),{loaderData:i,errors:o,statusCode:r||200,loaderHeaders:c}}(t,n,a,l,u);for(let t=0;t<r.length;t++){let[n,,a]=r[t];P(void 0!==o&&void 0!==o[t],"Did not find corresponding fetcher result");let l=o[t];if(ve(l)){let t=ce(e.matches,a.route.id);d&&d[t.route.id]||(d=i({},d,{[t.route.id]:l.error})),e.fetchers.delete(n)}else{if(he(l))throw new Error("Unhandled fetcher revalidation redirect");if(pe(l))throw new Error("Unhandled fetcher deferred data");{let t={state:"idle",data:l.data,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0};e.fetchers.set(n,t)}}}return{loaderData:c,errors:d}}function ue(e,t,n){let a=i({},t);return n.forEach((n=>{let l=n.route.id;void 0===t[l]&&void 0!==e[l]&&(a[l]=e[l])})),a}function ce(e,t){return(t?e.slice(0,e.findIndex((e=>e.route.id===t))+1):[...e]).reverse().find((e=>!0===e.route.hasErrorBoundary))||e[0]}function de(e){return function(e,t,n){let a=e.find((e=>e.index||!e.path||"/"===e.path))||{id:"__shim-"+t+"-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:a}],route:a,error:new Y(t,n,null)}}(e,404,"Not Found")}function se(e){let t="string"==typeof e?e:p(e);return console.warn("You're trying to submit to a route that does not have an action.  To fix this, please add an `action` function to the route for ["+t+"]"),{type:g.error,error:new Y(405,"Method Not Allowed","")}}function fe(e){for(let t=e.length-1;t>=0;t--){let n=e[t];if(he(n))return n}}function me(e){return p(i({},"string"==typeof e?v(e):e,{hash:""}))}function pe(e){return e.type===g.deferred}function ve(e){return e.type===g.error}function he(e){return(e&&e.type)===g.redirect}async function be(e,t,n,a,l,r){for(let i=0;i<n.length;i++){let o=n[i],u=t[i],c=e.find((e=>e.route.id===u.route.id)),d=null!=c&&!ne(c,u)&&void 0!==(r&&r[u.route.id]);pe(o)&&(l||d)&&await ge(o,a,l).then((e=>{e&&(n[i]=e||n[i])}))}}async function ge(e,t,n){if(void 0===n&&(n=!1),!await e.deferredData.resolveData(t)){if(n)try{return{type:g.data,data:e.deferredData.unwrappedData}}catch(e){return{type:g.error,error:e}}return{type:g.data,data:e.deferredData.data}}}function Ee(e){return new URLSearchParams(e).getAll("index").some((e=>""===e))}function ye(e,t){let{route:n,pathname:a,params:l}=e;return{id:n.id,pathname:a,params:l,data:t[n.id],handle:n.handle}}function _e(e,t){let n="string"==typeof t?v(t).search:t.search;if(e[e.length-1].route.index&&Ee(n||""))return e[e.length-1];let a=M(e);return a[a.length-1]}function we(){return we=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},we.apply(this,arguments)}new Set(["GET","HEAD",...X]);"function"==typeof Object.is&&Object.is;const{useState:Se,useEffect:xe,useLayoutEffect:Ce,useDebugValue:Ae}=r;"undefined"==typeof window||void 0===window.document||window.document.createElement;const Oe=r.useSyncExternalStore,Ne=l.createContext(null),ke=l.createContext(null),Pe=l.createContext(null),Te=l.createContext(null),De=l.createContext(null),Be=l.createContext(null),Me=l.createContext({outlet:null,matches:[]}),Re=l.createContext(null);function Le(e,t){let{relative:n}=void 0===t?{}:t;je()||P(!1);let{basename:a,navigator:r}=l.useContext(De),{hash:i,pathname:o,search:u}=Ye(e,{relative:n}),c=o;return"/"!==a&&(c="/"===o?a:L([a,o])),r.createHref({pathname:c,search:u,hash:i})}function je(){return null!=l.useContext(Be)}function Ie(){return je()||P(!1),l.useContext(Be).location}function ze(){return l.useContext(Be).navigationType}function Fe(e){je()||P(!1);let{pathname:t}=Ie();return l.useMemo((()=>O(e,t)),[t,e])}function Ue(){je()||P(!1);let{basename:e,navigator:t}=l.useContext(De),{matches:n}=l.useContext(Me),{pathname:a}=Ie(),r=JSON.stringify(M(n).map((e=>e.pathnameBase))),i=l.useRef(!1);return l.useEffect((()=>{i.current=!0})),l.useCallback((function(n,l){if(void 0===l&&(l={}),!i.current)return;if("number"==typeof n)return void t.go(n);let o=R(n,JSON.parse(r),a,"path"===l.relative);"/"!==e&&(o.pathname="/"===o.pathname?e:L([e,o.pathname])),(l.replace?t.replace:t.push)(o,l.state,l)}),[e,t,r,a])}const He=l.createContext(null);function $e(){return l.useContext(He)}function Ve(e){let t=l.useContext(Me).outlet;return t?l.createElement(He.Provider,{value:e},t):t}function We(){let{matches:e}=l.useContext(Me),t=e[e.length-1];return t?t.params:{}}function Ye(e,t){let{relative:n}=void 0===t?{}:t,{matches:a}=l.useContext(Me),{pathname:r}=Ie(),i=JSON.stringify(M(a).map((e=>e.pathnameBase)));return l.useMemo((()=>R(e,JSON.parse(i),r,"path"===n)),[e,i,r,n])}function Ge(e,t){je()||P(!1);let n=l.useContext(Pe),{matches:r}=l.useContext(Me),i=r[r.length-1],o=i?i.params:{},u=(i&&i.pathname,i?i.pathnameBase:"/");i&&i.route;let c,d=Ie();if(t){var s;let e="string"==typeof t?v(t):t;"/"===u||(null==(s=e.pathname)?void 0:s.startsWith(u))||P(!1),c=e}else c=d;let f=c.pathname||"/",m=y(e,{pathname:"/"===u?f:f.slice(u.length)||"/"}),p=qe(m&&m.map((e=>Object.assign({},e,{params:Object.assign({},o,e.params),pathname:L([u,e.pathname]),pathnameBase:"/"===e.pathnameBase?u:L([u,e.pathnameBase])}))),r,n||void 0);return t&&p?l.createElement(Be.Provider,{value:{location:we({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:a.Pop}},p):p}function Qe(){let e=ut(),t=G(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a},i={padding:"2px 4px",backgroundColor:a};return l.createElement(l.Fragment,null,l.createElement("h2",null,"Unhandled Thrown Error!"),l.createElement("h3",{style:{fontStyle:"italic"}},t),n?l.createElement("pre",{style:r},n):null,l.createElement("p",null,"💿 Hey developer 👋"),l.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",l.createElement("code",{style:i},"errorElement")," props on ",l.createElement("code",{style:i},"<Route>")))}class Ke extends l.Component{constructor(e){super(e),this.state={location:e.location,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location?{error:e.error,location:e.location}:{error:e.error||t.error,location:t.location}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?l.createElement(Re.Provider,{value:this.state.error,children:this.props.component}):this.props.children}}function Ze(e){let{routeContext:t,match:n,children:a}=e,r=l.useContext(Ne);return r&&n.route.errorElement&&(r._deepestRenderedBoundaryId=n.route.id),l.createElement(Me.Provider,{value:t},a)}function qe(e,t,n){if(void 0===t&&(t=[]),null==e){if(null==n||!n.errors)return null;e=n.matches}let a=e,r=null==n?void 0:n.errors;if(null!=r){let e=a.findIndex((e=>e.route.id&&(null==r?void 0:r[e.route.id])));e>=0||P(!1),a=a.slice(0,Math.min(a.length,e+1))}return a.reduceRight(((e,i,o)=>{let u=i.route.id?null==r?void 0:r[i.route.id]:null,c=n?i.route.errorElement||l.createElement(Qe,null):null,d=()=>l.createElement(Ze,{match:i,routeContext:{outlet:e,matches:t.concat(a.slice(0,o+1))}},u?c:void 0!==i.route.element?i.route.element:e);return n&&(i.route.errorElement||0===o)?l.createElement(Ke,{location:n.location,component:c,error:u,children:d()}):d()}),null)}var Xe,Je,et;function tt(e){let t=l.useContext(Pe);return t||P(!1),t}function nt(){return tt(Je.UseNavigation).navigation}function at(){let e=function(e){let t=l.useContext(ke);return t||P(!1),t}(Xe.UseRevalidator),t=tt(Je.UseRevalidator);return{revalidate:e.router.revalidate,state:t.revalidation}}function lt(){let{matches:e,loaderData:t}=tt(Je.UseMatches);return l.useMemo((()=>e.map((e=>{let{pathname:n,params:a}=e;return{id:e.route.id,pathname:n,params:a,data:t[e.route.id],handle:e.route.handle}}))),[e,t])}function rt(){let e=tt(Je.UseLoaderData),t=l.useContext(Me);t||P(!1);let n=t.matches[t.matches.length-1];return n.route.id||P(!1),e.loaderData[n.route.id]}function it(e){return tt(Je.UseRouteLoaderData).loaderData[e]}function ot(){let e=tt(Je.UseActionData);return l.useContext(Me)||P(!1),Object.values((null==e?void 0:e.actionData)||{})[0]}function ut(){var e;let t=l.useContext(Re),n=tt(Je.UseRouteError),a=l.useContext(Me),r=a.matches[a.matches.length-1];return t||(a||P(!1),r.route.id||P(!1),null==(e=n.errors)?void 0:e[r.route.id])}function ct(){let e=l.useContext(Te);return null==e?void 0:e._data}function dt(){let e=l.useContext(Te);return null==e?void 0:e._error}function st(e){let{fallbackElement:t,router:n}=e,a=Oe(n.subscribe,(()=>n.state),(()=>n.state)),r=l.useMemo((()=>({createHref:n.createHref,go:e=>n.navigate(e),push:(e,t,a)=>n.navigate(e,{state:t,preventScrollReset:null==a?void 0:a.preventScrollReset}),replace:(e,t,a)=>n.navigate(e,{replace:!0,state:t,preventScrollReset:null==a?void 0:a.preventScrollReset})})),[n]),i=n.basename||"/";return l.createElement(ke.Provider,{value:{router:n,navigator:r,static:!1,basename:i}},l.createElement(Pe.Provider,{value:a},l.createElement(ht,{basename:n.basename,location:n.state.location,navigationType:n.state.historyAction,navigator:r},n.state.initialized?l.createElement(bt,null):t)))}function ft(e){let{basename:t,children:n,initialEntries:a,initialIndex:r}=e,i=l.useRef();null==i.current&&(i.current=u({initialEntries:a,initialIndex:r,v5Compat:!0}));let o=i.current,[c,d]=l.useState({action:o.action,location:o.location});return l.useLayoutEffect((()=>o.listen(d)),[o]),l.createElement(ht,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:o})}function mt(e){let{to:t,replace:n,state:a,relative:r}=e;je()||P(!1);let i=l.useContext(Pe),o=Ue();return l.useEffect((()=>{i&&"idle"!==i.navigation.state||o(t,{replace:n,state:a,relative:r})})),null}function pt(e){return Ve(e.context)}function vt(e){P(!1)}function ht(e){let{basename:t="/",children:n=null,location:r,navigationType:i=a.Pop,navigator:o,static:u=!1}=e;je()&&P(!1);let c=t.replace(/^\/*/,"/"),d=l.useMemo((()=>({basename:c,navigator:o,static:u})),[c,o,u]);"string"==typeof r&&(r=v(r));let{pathname:s="/",search:f="",hash:m="",state:p=null,key:h="default"}=r,b=l.useMemo((()=>{let e=k(s,c);return null==e?null:{pathname:e,search:f,hash:m,state:p,key:h}}),[c,s,f,m,p,h]);return null==b?null:l.createElement(De.Provider,{value:d},l.createElement(Be.Provider,{children:n,value:{location:b,navigationType:i}}))}function bt(e){let{children:t,location:n}=e,a=l.useContext(ke);return Ge(a&&!t?a.router.routes:wt(t),n)}function gt(e){let{children:t,errorElement:n,resolve:a}=e;return l.createElement(yt,{resolve:a,errorElement:n},l.createElement(_t,null,t))}!function(e){e.UseRevalidator="useRevalidator"}(Xe||(Xe={})),function(e){e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator"}(Je||(Je={})),function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(et||(et={}));const Et=new Promise((()=>{}));class yt extends l.Component{constructor(e){super(e),this.state={error:null}}static getDerivedStateFromError(e){return{error:e}}componentDidCatch(e,t){console.error("<Await> caught the following error during render",e,t)}render(){let{children:e,errorElement:t,resolve:n}=this.props,a=null,r=et.pending;if(n instanceof Promise)if(this.state.error){r=et.error;let e=this.state.error;a=Promise.reject().catch((()=>{})),Object.defineProperty(a,"_tracked",{get:()=>!0}),Object.defineProperty(a,"_error",{get:()=>e})}else n._tracked?(a=n,r=void 0!==a._error?et.error:void 0!==a._data?et.success:et.pending):(r=et.pending,Object.defineProperty(n,"_tracked",{get:()=>!0}),a=n.then((e=>Object.defineProperty(n,"_data",{get:()=>e})),(e=>Object.defineProperty(n,"_error",{get:()=>e}))));else r=et.success,a=Promise.resolve(),Object.defineProperty(a,"_tracked",{get:()=>!0}),Object.defineProperty(a,"_data",{get:()=>n});if(r===et.error&&a._error instanceof U)throw Et;if(r===et.error&&!t)throw a._error;if(r===et.error)return l.createElement(Te.Provider,{value:a,children:t});if(r===et.success)return l.createElement(Te.Provider,{value:a,children:e});throw a}}function _t(e){let{children:t}=e,n=ct();return"function"==typeof t?t(n):l.createElement(l.Fragment,null,t)}function wt(e,t){void 0===t&&(t=[]);let n=[];return l.Children.forEach(e,((e,a)=>{if(!l.isValidElement(e))return;if(e.type===l.Fragment)return void n.push.apply(n,wt(e.props.children,t));e.type!==vt&&P(!1),e.props.index&&e.props.children&&P(!1);let r=[...t,a],i={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,hasErrorBoundary:null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle};e.props.children&&(i.children=wt(e.props.children,r)),n.push(i)})),n}function St(e){return qe(e)}function xt(e){return e.map((e=>{let t=we({},e);return null==t.hasErrorBoundary&&(t.hasErrorBoundary=null!=t.errorElement),t.children&&(t.children=xt(t.children)),t}))}function Ct(e,t){return q({basename:null==t?void 0:t.basename,history:u({initialEntries:null==t?void 0:t.initialEntries,initialIndex:null==t?void 0:t.initialIndex}),hydrationData:null==t?void 0:t.hydrationData,routes:xt(e)}).initialize()}function At(){return At=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},At.apply(this,arguments)}function Ot(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}const Nt="get",kt="application/x-www-form-urlencoded";function Pt(e){return null!=e&&"string"==typeof e.tagName}function Tt(e){return void 0===e&&(e=""),new URLSearchParams("string"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce(((t,n)=>{let a=e[n];return t.concat(Array.isArray(a)?a.map((e=>[n,e])):[[n,a]])}),[]))}const Dt=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset"],Bt=["aria-current","caseSensitive","className","end","style","to","children"],Mt=["reloadDocument","replace","method","action","onSubmit","fetcherKey","routeId","relative"];function Rt(e,t){var n;return q({basename:null==t?void 0:t.basename,history:c({window:null==t?void 0:t.window}),hydrationData:(null==t?void 0:t.hydrationData)||(null==(n=window)?void 0:n.__staticRouterHydrationData),routes:xt(e)}).initialize()}function Lt(e,t){var n;return q({basename:null==t?void 0:t.basename,history:d({window:null==t?void 0:t.window}),hydrationData:(null==t?void 0:t.hydrationData)||(null==(n=window)?void 0:n.__staticRouterHydrationData),routes:xt(e)}).initialize()}function jt(e){let{basename:t,children:n,window:a}=e,r=l.useRef();null==r.current&&(r.current=c({window:a,v5Compat:!0}));let i=r.current,[o,u]=l.useState({action:i.action,location:i.location});return l.useLayoutEffect((()=>i.listen(u)),[i]),l.createElement(ht,{basename:t,children:n,location:o.location,navigationType:o.action,navigator:i})}function It(e){let{basename:t,children:n,window:a}=e,r=l.useRef();null==r.current&&(r.current=d({window:a,v5Compat:!0}));let i=r.current,[o,u]=l.useState({action:i.action,location:i.location});return l.useLayoutEffect((()=>i.listen(u)),[i]),l.createElement(ht,{basename:t,children:n,location:o.location,navigationType:o.action,navigator:i})}function zt(e){let{basename:t,children:n,history:a}=e;const[r,i]=l.useState({action:a.action,location:a.location});return l.useLayoutEffect((()=>a.listen(i)),[a]),l.createElement(ht,{basename:t,children:n,location:r.location,navigationType:r.action,navigator:a})}const Ft=l.forwardRef((function(e,t){let{onClick:n,relative:a,reloadDocument:r,replace:i,state:o,target:u,to:c,preventScrollReset:d}=e,s=Ot(e,Dt),f=Le(c,{relative:a}),m=Kt(c,{replace:i,state:o,target:u,preventScrollReset:d,relative:a});return l.createElement("a",At({},s,{href:f,onClick:r?n:function(e){n&&n(e),e.defaultPrevented||m(e)},ref:t,target:u}))})),Ut=l.forwardRef((function(e,t){let{"aria-current":n="page",caseSensitive:a=!1,className:r="",end:i=!1,style:o,to:u,children:c}=e,d=Ot(e,Bt),s=Ye(u,{relative:d.relative}),f=Ie(),m=l.useContext(Pe),p=s.pathname,v=f.pathname,h=m&&m.navigation&&m.navigation.location?m.navigation.location.pathname:null;a||(v=v.toLowerCase(),h=h?h.toLowerCase():null,p=p.toLowerCase());let b,g=v===p||!i&&v.startsWith(p)&&"/"===v.charAt(p.length),E=null!=h&&(h===p||!i&&h.startsWith(p)&&"/"===h.charAt(p.length)),y=g?n:void 0;b="function"==typeof r?r({isActive:g,isPending:E}):[r,g?"active":null,E?"pending":null].filter(Boolean).join(" ");let _="function"==typeof o?o({isActive:g,isPending:E}):o;return l.createElement(Ft,At({},d,{"aria-current":y,className:b,ref:t,style:_,to:u}),"function"==typeof c?c({isActive:g,isPending:E}):c)})),Ht=l.forwardRef(((e,t)=>l.createElement($t,At({},e,{ref:t})))),$t=l.forwardRef(((e,t)=>{let{reloadDocument:n,replace:a,method:r=Nt,action:i,onSubmit:o,fetcherKey:u,routeId:c,relative:d}=e,s=Ot(e,Mt),f=Xt(u,c),m="get"===r.toLowerCase()?"get":"post",p=Jt(i,{relative:d});return l.createElement("form",At({ref:t,method:m,action:p,onSubmit:n?o:e=>{if(o&&o(e),e.defaultPrevented)return;e.preventDefault();let t=e.nativeEvent.submitter;f(t||e.currentTarget,{method:r,replace:a,relative:d})}},s))}));function Vt(e){let{getKey:t,storageKey:n}=e;return function(e){let{getKey:t,storageKey:n}=void 0===e?{}:e,{router:a}=Gt(Wt.UseScrollRestoration),{restoreScrollPosition:r,preventScrollReset:i}=Qt(Yt.UseScrollRestoration),o=Ie(),u=lt(),c=nt();var d;l.useEffect((()=>(window.history.scrollRestoration="manual",()=>{window.history.scrollRestoration="auto"})),[]),d=l.useCallback((()=>{if("idle"===c.state){let e=(t?t(o,u):null)||o.key;ln[e]=window.scrollY}sessionStorage.setItem(n||an,JSON.stringify(ln)),window.history.scrollRestoration="auto"}),[n,t,c.state,o,u]),l.useEffect((()=>(window.addEventListener("beforeunload",d),()=>{window.removeEventListener("beforeunload",d)})),[d]),l.useLayoutEffect((()=>{try{let e=sessionStorage.getItem(n||an);e&&(ln=JSON.parse(e))}catch(e){}}),[n]),l.useLayoutEffect((()=>{let e=null==a?void 0:a.enableScrollRestoration(ln,(()=>window.scrollY),t);return()=>e&&e()}),[a,t]),l.useLayoutEffect((()=>{if(!1!==r)if("number"!=typeof r){if(o.hash){let e=document.getElementById(o.hash.slice(1));if(e)return void e.scrollIntoView()}!0!==i&&window.scrollTo(0,0)}else window.scrollTo(0,r)}),[o,r,i])}({getKey:t,storageKey:n}),null}var Wt,Yt;function Gt(e){let t=l.useContext(ke);return t||P(!1),t}function Qt(e){let t=l.useContext(Pe);return t||P(!1),t}function Kt(e,t){let{target:n,replace:a,state:r,preventScrollReset:i,relative:o}=void 0===t?{}:t,u=Ue(),c=Ie(),d=Ye(e,{relative:o});return l.useCallback((t=>{if(function(e,t){return!(0!==e.button||t&&"_self"!==t||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))}(t,n)){t.preventDefault();let n=void 0!==a?a:p(c)===p(d);u(e,{replace:n,state:r,preventScrollReset:i,relative:o})}}),[c,u,d,a,r,n,e,i,o])}function Zt(e){let t=l.useRef(Tt(e)),n=Ie(),a=l.useMemo((()=>function(e,t){let n=Tt(e);for(let e of t.keys())n.has(e)||t.getAll(e).forEach((t=>{n.append(e,t)}));return n}(n.search,t.current)),[n.search]),r=Ue(),i=l.useCallback(((e,t)=>{const n=Tt("function"==typeof e?e(a):e);r("?"+n,t)}),[r,a]);return[a,i]}function qt(){return Xt()}function Xt(e,t){let{router:n}=Gt(Wt.UseSubmitImpl),a=Jt();return l.useCallback((function(l,r){if(void 0===r&&(r={}),"undefined"==typeof document)throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");let{method:i,encType:o,formData:u,url:c}=function(e,t,n){let a,l,r,i;if(Pt(o=e)&&"form"===o.tagName.toLowerCase()){let o=n.submissionTrigger;a=n.method||e.getAttribute("method")||Nt,l=n.action||e.getAttribute("action")||t,r=n.encType||e.getAttribute("enctype")||kt,i=new FormData(e),o&&o.name&&i.append(o.name,o.value)}else if(function(e){return Pt(e)&&"button"===e.tagName.toLowerCase()}(e)||function(e){return Pt(e)&&"input"===e.tagName.toLowerCase()}(e)&&("submit"===e.type||"image"===e.type)){let o=e.form;if(null==o)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');a=n.method||e.getAttribute("formmethod")||o.getAttribute("method")||Nt,l=n.action||e.getAttribute("formaction")||o.getAttribute("action")||t,r=n.encType||e.getAttribute("formenctype")||o.getAttribute("enctype")||kt,i=new FormData(o),e.name&&i.append(e.name,e.value)}else{if(Pt(e))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');if(a=n.method||Nt,l=n.action||t,r=n.encType||kt,e instanceof FormData)i=e;else if(i=new FormData,e instanceof URLSearchParams)for(let[t,n]of e)i.append(t,n);else if(null!=e)for(let t of Object.keys(e))i.append(t,e[t])}var o;let{protocol:u,host:c}=window.location;return{url:new URL(l,u+"//"+c),method:a,encType:r,formData:i}}(l,a,r),d=c.pathname+c.search,s={replace:r.replace,formData:u,formMethod:i,formEncType:o};e?(null==t&&P(!1),n.fetch(e,t,d,s)):n.navigate(d,s)}),[a,n,e,t])}function Jt(e,t){let{relative:n}=void 0===t?{}:t,{basename:a}=l.useContext(De),r=l.useContext(Me);r||P(!1);let[i]=r.matches.slice(-1),o=At({},Ye(null!=e?e:".",{relative:n})),u=Ie();if(null==e&&(o.search=u.search,o.hash=u.hash,i.route.index)){let e=new URLSearchParams(o.search);e.delete("index"),o.search=e.toString()?"?"+e.toString():""}return e&&"."!==e||!i.route.index||(o.search=o.search?o.search.replace(/^\?/,"?index&"):"?index"),"/"!==a&&(o.pathname="/"===o.pathname?a:L([a,o.pathname])),p(o)}(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmitImpl="useSubmitImpl",e.UseFetcher="useFetcher"})(Wt||(Wt={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Yt||(Yt={}));let en=0;function tn(){var e;let{router:t}=Gt(Wt.UseFetcher),n=l.useContext(Me);n||P(!1);let a=null==(e=n.matches[n.matches.length-1])?void 0:e.route.id;null==a&&P(!1);let[r]=l.useState((()=>String(++en))),[i]=l.useState((()=>(a||P(!1),function(e,t){return l.forwardRef(((n,a)=>l.createElement($t,At({},n,{ref:a,fetcherKey:e,routeId:t}))))}(r,a)))),[o]=l.useState((()=>e=>{t||P(!1),a||P(!1),t.fetch(r,a,e)})),u=Xt(r,a),c=t.getFetcher(r),d=l.useMemo((()=>At({Form:i,submit:u,load:o},c)),[c,i,u,o]);return l.useEffect((()=>()=>{t?t.deleteFetcher(r):console.warn("No fetcher available to clean up from useFetcher()")}),[t,r]),d}function nn(){return[...Qt(Yt.UseFetchers).fetchers.values()]}const an="react-router-scroll-positions";let ln={}},2408:(e,t)=>{var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),s=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),m=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,h={};function b(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||p}function g(){}function E(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||p}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=b.prototype;var y=E.prototype=new g;y.constructor=E,v(y,b.prototype),y.isPureReactComponent=!0;var _=Array.isArray,w=Object.prototype.hasOwnProperty,S={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,a){var l,r={},i=null,o=null;if(null!=t)for(l in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,l)&&!x.hasOwnProperty(l)&&(r[l]=t[l]);var u=arguments.length-2;if(1===u)r.children=a;else if(1<u){for(var c=Array(u),d=0;d<u;d++)c[d]=arguments[d+2];r.children=c}if(e&&e.defaultProps)for(l in u=e.defaultProps)void 0===r[l]&&(r[l]=u[l]);return{$$typeof:n,type:e,key:i,ref:o,props:r,_owner:S.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var O=/\/+/g;function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function k(e,t,l,r,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var u=!1;if(null===e)u=!0;else switch(o){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case a:u=!0}}if(u)return i=i(u=e),e=""===r?"."+N(u,0):r,_(i)?(l="",null!=e&&(l=e.replace(O,"$&/")+"/"),k(i,t,l,"",(function(e){return e}))):null!=i&&(A(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,l+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(O,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",_(e))for(var c=0;c<e.length;c++){var d=r+N(o=e[c],c);u+=k(o,t,l,d,i)}else if(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=m&&e[m]||e["@@iterator"])?e:null}(e),"function"==typeof d)for(e=d.call(e),c=0;!(o=e.next()).done;)u+=k(o=o.value,t,l,d=r+N(o,c++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function P(e,t,n){if(null==e)return e;var a=[],l=0;return k(e,a,"","",(function(e){return t.call(n,e,l++)})),a}function T(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var D={current:null},B={transition:null},M={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:B,ReactCurrentOwner:S};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=l,t.Profiler=i,t.PureComponent=E,t.StrictMode=r,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,a){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var l=v({},e.props),r=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=S.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)w.call(t,c)&&!x.hasOwnProperty(c)&&(l[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)l.children=a;else if(1<c){u=Array(c);for(var d=0;d<c;d++)u[d]=arguments[d+2];l.children=u}return{$$typeof:n,type:e.type,key:r,ref:i,props:l,_owner:o}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=A,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=B.transition;B.transition={};try{e()}finally{B.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return D.current.useCallback(e,t)},t.useContext=function(e){return D.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return D.current.useDeferredValue(e)},t.useEffect=function(e,t){return D.current.useEffect(e,t)},t.useId=function(){return D.current.useId()},t.useImperativeHandle=function(e,t,n){return D.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return D.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return D.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return D.current.useMemo(e,t)},t.useReducer=function(e,t,n){return D.current.useReducer(e,t,n)},t.useRef=function(e){return D.current.useRef(e)},t.useState=function(e){return D.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return D.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return D.current.useTransition()},t.version="18.2.0"},7294:(e,t,n)=>{e.exports=n(2408)},53:(e,t)=>{function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,l=e[a];if(!(0<r(l,t)))break e;e[a]=t,e[n]=l,n=a}}function a(e){return 0===e.length?null:e[0]}function l(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,l=e.length,i=l>>>1;a<i;){var o=2*(a+1)-1,u=e[o],c=o+1,d=e[c];if(0>r(u,n))c<l&&0>r(d,u)?(e[a]=d,e[c]=n,a=c):(e[a]=u,e[o]=n,a=o);else{if(!(c<l&&0>r(d,n)))break e;e[a]=d,e[c]=n,a=c}}}return t}function r(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,u=o.now();t.unstable_now=function(){return o.now()-u}}var c=[],d=[],s=1,f=null,m=3,p=!1,v=!1,h=!1,b="function"==typeof setTimeout?setTimeout:null,g="function"==typeof clearTimeout?clearTimeout:null,E="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var t=a(d);null!==t;){if(null===t.callback)l(d);else{if(!(t.startTime<=e))break;l(d),t.sortIndex=t.expirationTime,n(c,t)}t=a(d)}}function _(e){if(h=!1,y(e),!v)if(null!==a(c))v=!0,B(w);else{var t=a(d);null!==t&&M(_,t.startTime-e)}}function w(e,n){v=!1,h&&(h=!1,g(A),A=-1),p=!0;var r=m;try{for(y(n),f=a(c);null!==f&&(!(f.expirationTime>n)||e&&!k());){var i=f.callback;if("function"==typeof i){f.callback=null,m=f.priorityLevel;var o=i(f.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?f.callback=o:f===a(c)&&l(c),y(n)}else l(c);f=a(c)}if(null!==f)var u=!0;else{var s=a(d);null!==s&&M(_,s.startTime-n),u=!1}return u}finally{f=null,m=r,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,x=!1,C=null,A=-1,O=5,N=-1;function k(){return!(t.unstable_now()-N<O)}function P(){if(null!==C){var e=t.unstable_now();N=e;var n=!0;try{n=C(!0,e)}finally{n?S():(x=!1,C=null)}}else x=!1}if("function"==typeof E)S=function(){E(P)};else if("undefined"!=typeof MessageChannel){var T=new MessageChannel,D=T.port2;T.port1.onmessage=P,S=function(){D.postMessage(null)}}else S=function(){b(P,0)};function B(e){C=e,x||(x=!0,S())}function M(e,n){A=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){v||p||(v=!0,B(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return m},t.unstable_getFirstCallbackNode=function(){return a(c)},t.unstable_next=function(e){switch(m){case 1:case 2:case 3:var t=3;break;default:t=m}var n=m;m=t;try{return e()}finally{m=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=m;m=e;try{return t()}finally{m=n}},t.unstable_scheduleCallback=function(e,l,r){var i=t.unstable_now();switch(r="object"==typeof r&&null!==r&&"number"==typeof(r=r.delay)&&0<r?i+r:i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:s++,callback:l,priorityLevel:e,startTime:r,expirationTime:o=r+o,sortIndex:-1},r>i?(e.sortIndex=r,n(d,e),null===a(c)&&e===a(d)&&(h?(g(A),A=-1):h=!0,M(_,r-i))):(e.sortIndex=o,n(c,e),v||p||(v=!0,B(w))),e},t.unstable_shouldYield=k,t.unstable_wrapCallback=function(e){var t=m;return function(){var n=m;m=t;try{return e.apply(this,arguments)}finally{m=n}}}},3840:(e,t,n)=>{e.exports=n(53)},1379:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(1171),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},7623:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(8743),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},4902:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(2785),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},2717:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(232),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},6040:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(1976),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},792:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(3379),l=n.n(a),r=n(7795),i=n.n(r),o=n(569),u=n.n(o),c=n(3565),d=n.n(c),s=n(9216),f=n.n(s),m=n(4589),p=n.n(m),v=n(1047),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=u().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=f(),l()(v.Z,h);const b=v.Z&&v.Z.locals?v.Z.locals:void 0},3379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],o=0;o<e.length;o++){var u=e[o],c=a.base?u[0]+a.base:u[0],d=r[c]||0,s="".concat(c," ").concat(d);r[c]=d+1;var f=n(s),m={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(m);else{var p=l(m,a);a.byIndex=o,t.splice(o,0,{identifier:s,updater:p,references:1})}i.push(s)}return i}function l(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,l){var r=a(e=e||[],l=l||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var o=n(r[i]);t[o].references--}for(var u=a(e,l),c=0;c<r.length;c++){var d=n(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=u}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},9216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var l=void 0!==n.layer;l&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,l&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},4529:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppHeader=void 0;const l=a(n(7294)),r=n(7893);t.AppHeader=()=>l.default.createElement(r.ShellBar,{logo:"/images/sap-logo.png",logoAlt:"Fundamental React",title:"Fundamental React"})},4110:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppMainContent=void 0;const l=a(n(7294));t.AppMainContent=({children:e})=>l.default.createElement("div",{style:{width:"100%",height:"100%",overflow:"auto",boxSizing:"border-box",padding:"1rem 4rem"}},e)},5487:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppSidePanel=void 0;const l=a(n(7294)),r=n(9818),i=n(4419),o=n(6042);t.AppSidePanel=()=>{const e=(0,r.useNavigate)();return l.default.createElement(i.VerticalNavigation,{label:"Navigation",itemsLabel:"Core Navigation",items:[{id:"components",text:"Components",glyph:"folder-blank",expanded:!0,items:o.COMPONENTS.map((e=>Object.assign(Object.assign({},e),{glyph:"document-text"})))}],onItemSelect:t=>{"components"!==t&&e(`/components/${t}`)}})}},4595:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CodePanel=void 0;const i=r(n(7294));n(1379),t.CodePanel=({title:e,result:t,code:n})=>{const[a,l]=(0,i.useState)(!1);return i.default.createElement("div",{className:"code-panel"},i.default.createElement("div",{className:"header"},e),i.default.createElement("div",{className:"rendering"},i.default.createElement("div",null,t),i.default.createElement("button",{className:"button-show",onClick:()=>{l(!a)}},a?"Hide Code":"Show Code")),a?i.default.createElement("div",{className:"code"},n,i.default.createElement("button",{className:"button-copy"},"Copy")):null)}},7027:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DemoPage=void 0;const l=a(n(7294)),r=n(2531),i=n(4595);n(7623),t.DemoPage=({title:e,labels:t,description:n,types:a,examples:o})=>{const u=e=>e?"string"==typeof e?l.default.createElement("p",null,e):l.default.createElement("div",null,e):null;return l.default.createElement("div",{className:"demo-page"},l.default.createElement(r.Title,{text:e}),l.default.createElement("div",{style:{display:"flex",gap:"0.25rem",flexWrap:"wrap"}},t.map(((e,t)=>l.default.createElement(r.InfoLabel,Object.assign({key:`label-${t}`},e))))),l.default.createElement(r.Title,{text:"Properties",level:r.TitleLevels.H2}),u(n),a.map(((e,t)=>l.default.createElement("div",{key:`type-${t}`},l.default.createElement(r.Title,{text:e.id,level:r.TitleLevels.H3,style:{margin:"1rem 0"}}),l.default.createElement(r.Table,{columns:[{key:"id",name:"Property",formatter:e=>l.default.createElement("strong",null,e.id)},{key:"type",name:"Type"},{key:"description",name:"Description"}],compact:!0,rows:e.props.map((e=>({data:e})))})))),l.default.createElement(r.Title,{text:"Examples",level:r.TitleLevels.H2}),o.map(((e,t)=>l.default.createElement("div",{key:`example-${t}`},l.default.createElement(r.Title,{text:e.title,level:r.TitleLevels.H3}),u(e.description),l.default.createElement(i.CodePanel,{title:"",result:e.result,code:e.code})))))}},6884:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AvatarDemo=void 0;const l=a(n(7294));t.AvatarDemo=()=>l.default.createElement("div",null,"AVATAR")},6849:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BadgeDemo=void 0;const l=a(n(7294));t.BadgeDemo=()=>l.default.createElement("div",null,"BADGE")},7532:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BarDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Bar",labels:[{text:"version 0.0.6",accentColor:r.AccentColors.COLOR_8},{text:"in progress",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"The bar component is a container that holds titles, buttons and input controls. Its contents are distributed into three areas: left, middle and right. This component’s primary function is to display page headers and footers. It is mainly used to construct a Page, and acts as a building block for other components like Dialog, Popover etc.",types:[{id:"Bar",props:[{id:"cozy",type:"boolean",description:"..."},{id:"left",type:"ReactElement[]",description:"The elements to display on the left"},{id:"middle",type:"ReactElement[]",description:"The elements to display on the middle"},{id:"responsivePaddings",type:"boolean",description:"..."},{id:"right",type:"ReactElement[]",description:"The elements to display on the right"},{id:"type",type:"BarType",description:"..."}]}],examples:[{title:"Default",description:"The default bar contains a back button, page title, segmented button and product switch button. It can be displayed by using the fd-bar class, and is responsive to desktop screen sizes. The default bar is in compact mode.",result:l.default.createElement(r.Bar,{left:[l.default.createElement(r.Title,{text:"TEXT",level:r.TitleLevels.H5})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{compact:!0,icon:"email"}),l.default.createElement(r.Button,{compact:!0,icon:"iphone",selected:!0}),l.default.createElement(r.Button,{compact:!0,icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]}),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Title text='TEXT' level={TitleLevels.H5} />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Cozy",description:"The cozy bar contains a back button, icon buttons, segmented button and product switch button. It is responsive to tablet and mobile screen sizes. To apply cozy mode, add the --cozy modifier class to the container element.",result:l.default.createElement(r.Bar,{cozy:!0,left:[l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"navigation-left-arrow"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"home"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"account"})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{icon:"email"}),l.default.createElement(r.Button,{icon:"iphone",selected:!0}),l.default.createElement(r.Button,{icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]}),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='navigation-left-arrow'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='home'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='account'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Responsive",description:"The bar can be made responsive with the --responsive-paddings modifier class. The paddings will automatically change with the screen size.",result:l.default.createElement(r.Bar,{responsivePaddings:!0,left:[l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"navigation-left-arrow"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"home"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"account"})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{icon:"email"}),l.default.createElement(r.Button,{icon:"iphone",selected:!0}),l.default.createElement(r.Button,{icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]}),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='navigation-left-arrow'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='home'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='account'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Header",description:"The header bar contains actions that impact the entire page. It can be displayed by adding the --header modifier class to the container element.",result:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,l.default.createElement("b",null,"Default (desktop)")),l.default.createElement(r.Bar,{type:r.BarTypes.HEADER,left:[l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,icon:"navigation-left-arrow"}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,icon:"home"}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,icon:"account"})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{compact:!0,icon:"email"}),l.default.createElement(r.Button,{compact:!0,icon:"iphone",selected:!0}),l.default.createElement(r.Button,{compact:!0,icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]}),l.default.createElement("p",null,l.default.createElement("b",null,"Cozy (tablet and mobile)")),l.default.createElement(r.Bar,{cozy:!0,type:r.BarTypes.HEADER,left:[l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"navigation-left-arrow"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"home"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"account"})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{icon:"email"}),l.default.createElement(r.Button,{icon:"iphone",selected:!0}),l.default.createElement(r.Button,{icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<p><b>Default (desktop)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  type={BarTypes.HEADER}"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='navigation-left-arrow'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='home'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='account'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        compact"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"),l.default.createElement("div",null,"<p><b>Cozy (tablet and mobile)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  cozy"),l.default.createElement("div",null,"  type={BarTypes.HEADER}"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='navigation-left-arrow'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='home'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='account'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Header With Subheader",description:"To add a subheader under a header bar, the container element should have the --header-with-subheader modifier class, which will remove the element’s box shadow.",result:l.default.createElement(l.default.Fragment,null,l.default.createElement(r.Bar,{type:r.BarTypes.HEADER_WITH_SUBHEADER,left:[l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"navigation-left-arrow"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"home"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"account"})],middle:[l.default.createElement(r.SegmentedButton,null,l.default.createElement(r.Button,{icon:"email"}),l.default.createElement(r.Button,{icon:"iphone",selected:!0}),l.default.createElement(r.Button,{icon:"notification-2"}))],right:[l.default.createElement(r.Avatar,{ariaLabel:"Avatar",circle:!0,initials:"JS",size:r.Sizes.X_SMALL}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,icon:"grid"})]}),l.default.createElement(r.Bar,{type:r.BarTypes.SUBHEADER,middle:[l.default.createElement(r.Title,{level:r.TitleLevels.H5,text:"Title"})]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  type={BarTypes.HEADER_WITH_SUBHEADER}"),l.default.createElement("div",null,"  left={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='navigation-left-arrow'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='home'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='account'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <SegmentedButton>"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='email'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='iphone'"),l.default.createElement("div",null,"        selected"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"      <Button"),l.default.createElement("div",null,"        icon='notification-2'"),l.default.createElement("div",null,"      />"),l.default.createElement("div",null,"    </SegmentedButton>"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Avatar"),l.default.createElement("div",null,"      ariaLabel='Avatar'"),l.default.createElement("div",null,"      circle"),l.default.createElement("div",null,"      initials='JS'"),l.default.createElement("div",null,"      size={Sizes.X_SMALL}"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      icon='grid'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  type={BarTypes.SUBHEADER}"),l.default.createElement("div",null,"  middle={["),l.default.createElement("div",null,"    <Title"),l.default.createElement("div",null,"      level={TitleLevels.H5}"),l.default.createElement("div",null,"      text='Title'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Footer",description:"The footer bar should display only closing and finalizing action buttons that impact the entire page such as Save or Cancel. It can be displayed by adding the --footer modifier class to the container element.",result:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,l.default.createElement("b",null,"Default (desktop)")),l.default.createElement(r.Bar,{type:r.BarTypes.FOOTER,right:[l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.EMPHASIZED,text:"Save"}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,text:"Cancel"})]}),l.default.createElement("p",null,l.default.createElement("b",null,"Cozy (tablet and mobile)")),l.default.createElement(r.Bar,{cozy:!0,type:r.BarTypes.FOOTER,right:[l.default.createElement(r.Button,{design:r.ButtonDesigns.EMPHASIZED,text:"Save"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,text:"Cancel"})]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<p><b>Default (desktop)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  type={BarTypes.FOOTER}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"      text='Save'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      text='Cancel'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"),l.default.createElement("div",null,"<p><b>Cozy (tablet and mobile)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  cozy"),l.default.createElement("div",null,"  type={BarTypes.FOOTER}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"      text='Save'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      text='Cancel'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Floating Footer",description:"The floating footer bar should also display only finalizing action buttons that impact the entire page. This type floats above the page at the bottom of the screen and is always visible when scrolling. It can be displayed by adding the --floating-footer modifier class to the container element.",result:l.default.createElement(l.default.Fragment,null,l.default.createElement("div",null,l.default.createElement("p",null,l.default.createElement("b",null,"Default (desktop)"))),l.default.createElement("div",{style:{position:"relative",height:"3rem"}},l.default.createElement(r.Bar,{type:r.BarTypes.FOOTER_FLOATING,right:[l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.EMPHASIZED,text:"Save"}),l.default.createElement(r.Button,{compact:!0,design:r.ButtonDesigns.TRANSPARENT,text:"Cancel"})]})),l.default.createElement("div",null,l.default.createElement("p",null,l.default.createElement("b",null,"Cozy (tablet and mobile)"))),l.default.createElement("div",{style:{position:"relative",height:"3rem"}},l.default.createElement(r.Bar,{cozy:!0,type:r.BarTypes.FOOTER_FLOATING,right:[l.default.createElement(r.Button,{design:r.ButtonDesigns.EMPHASIZED,text:"Save"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,text:"Cancel"})]}))),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<p><b>Default (desktop)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  type={BarTypes.FOOTER_FLOATING}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"      text='Save'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      compact"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      text='Cancel'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"),l.default.createElement("div",null,"<p><b>Cozy (tablet and mobile)</b></p>"),l.default.createElement("div",null,"<Bar"),l.default.createElement("div",null,"  cozy"),l.default.createElement("div",null,"  type={BarTypes.FOOTER_FLOATING}"),l.default.createElement("div",null,"  right={["),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"      text='Save'"),l.default.createElement("div",null,"    />,"),l.default.createElement("div",null,"    <Button"),l.default.createElement("div",null,"      design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"      text='Cancel'"),l.default.createElement("div",null,"    />"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))}]};t.BarDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},6533:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BreadcrumbDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Breadcrumb",labels:[{text:"version 0.0.6",accentColor:r.AccentColors.COLOR_8},{text:"in progress",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"The breadcrumb component is a type of navigation that indicates the position of a page within the application’s page hierarchy. Users can navigate backward by selecting the previous pages in the navigation path.",types:[{id:"Breadcrumb",props:[{id:"ariaLabel",type:"string",description:"Event called when a tab is selected"},{id:"items",type:"BreadcrumbItem[]",description:"Event called when a tab is selected"},{id:"onItemSelected",type:"(string) => void",description:"Event called when a tab is selected"}]},{id:"BreadcrumbItem",props:[{id:"text",type:"string",description:"Event called when a tab is selected"},{id:"current",type:"boolean",description:"Event called when a tab is selected"},{id:"onItemSelected",type:"() => void",description:"Event called when a tab is selected"}]}],examples:[{title:"Standard",description:"The standard breadcrumb component displays several pages in text format separated by dividers, indicating a navigation path. Each page can be specifically selected to navigate to its corresponding page. It can be displayed by using the fd-breadcrumb class.",result:l.default.createElement(r.Breadcrumb,{ariaLabel:"Product Breadcrumb",items:[{text:"Product"},{text:"Suppliers"},{text:"Titanium"},{text:"Ultra Portable"},{text:"12 inch"},{text:"Super portable deluxe"},{text:"Laptop"}]}),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Breadcrumb"),l.default.createElement("div",null,"  ariaLabel='Product Breadcrumb'"),l.default.createElement("div",null,"  items={["),l.default.createElement("div",null,"    { text: 'Product' },"),l.default.createElement("div",null,"    { text: 'Suppliers' },"),l.default.createElement("div",null,"    { text: 'Titanium' },"),l.default.createElement("div",null,"    { text: 'Ultra Portable' },"),l.default.createElement("div",null,"    { text: '12 inch' },"),l.default.createElement("div",null,"    { text: 'Super portable deluxe' },"),l.default.createElement("div",null,"    { text: 'Laptop' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"  onItemSelected={() => {}}"),l.default.createElement("div",null,"/>"))}]};t.BreadcrumbDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},5030:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BusyIndicatorDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Busy Indicator",labels:[{text:"version 0.0.6",accentColor:r.AccentColors.COLOR_8},{text:"in progress",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,"The busy indicator component informs the user about an ongoing operation. Only one busy indicator should be shown at a time."),l.default.createElement("p",null,l.default.createElement("strong",null,"Use the busy indicator if:")),l.default.createElement("p",null,"The ongoing operation only covers part of a screen that has multiple controls, and:"),l.default.createElement("ul",null,l.default.createElement("li",null,"You need to display additional information, or"),l.default.createElement("li",null,"The user needs to be able to cancel the operation.")),l.default.createElement("p",null,l.default.createElement("strong",null,"Do not use the busy indicator if:")),l.default.createElement("ul",null,l.default.createElement("li",null,"The operation takes less than one second."),l.default.createElement("li",null,"You need to block the screen because the user is not supposed to start another operation. In this case, use the Busy Dialog component."))),types:[{id:"BusyIndicator",props:[{id:"ariaLabel",type:"string",description:'(Optional) The aria label provided for this busy indicator (defaults to "Loading")'},{id:"size",type:"BusyIndicatorSize",description:"(Optional) The size of the busy indicator (defaults to SMALL)"},{id:"contrast",type:"boolean",description:"(Optional) Sets the busy indicator to contrst mode for display on darker backgrounds"},{id:"label",type:"string",description:"(Optional) Disaplys an additional text information below the indicator"}]}],examples:[{title:"Standard",description:"The standard busy indicator animates a sequence of cascading dots expanding and shrinking in a loop. The component comes in three sizes detailed above. To display the busy indicator, use the fd-busy-indicator class. If you want to display a certain size, add the modifier class of the desired size i.e. --m to the element.",result:l.default.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"2rem"}},l.default.createElement(r.BusyIndicator,{size:r.BusyIndicatorSizes.LARGE}),l.default.createElement(r.BusyIndicator,{size:r.BusyIndicatorSizes.MEDIUM}),l.default.createElement(r.BusyIndicator,null)),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.LARGE}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.MEDIUM}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator />"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>>"))},{title:"Contrast Mode",description:"The busy indicator also comes in contrast mode and displays white dots against a dark background. To apply contrast mode, add contrast into the element i.e. fd-busy-indicator--m contrast.",result:l.default.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"2rem",background:"cadetblue",padding:"2rem"}},l.default.createElement(r.BusyIndicator,{contrast:!0,size:r.BusyIndicatorSizes.LARGE}),l.default.createElement(r.BusyIndicator,{contrast:!0,size:r.BusyIndicatorSizes.MEDIUM}),l.default.createElement(r.BusyIndicator,{contrast:!0})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', flexDirection: 'column', gap: '2rem', background: 'cadetblue', padding: '2rem' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    contrast"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.LARGE}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    contrast"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.MEDIUM}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    contrast"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>>"))},{title:"Extended Busy Indicator",description:"If more information needs to be displayed with the loading animation, it is replaced by the Extended Busy Indicator fd-busy-indicator-extended. The additional information is wrapped in an element with fd-busy-indicator-extended__label class.",result:l.default.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"2rem"}},l.default.createElement(r.BusyIndicator,{label:"Loading data...",size:r.BusyIndicatorSizes.LARGE})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    label='Loading data...'"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.LARGE}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("div",null,"</div>>"))},{title:"Extended Busy Indicator Inside Message Toast",description:"At the Page level the Busy Indicator should always be placed in a container. The simplest form of container will be centred on the page and inherit the color values from Message Toast.",result:l.default.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},l.default.createElement(r.BusyIndicator,{toast:!0,label:"Loading data...",size:r.BusyIndicatorSizes.LARGE})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', flexDirection: 'column', gap: '2rem', alignItems: 'center' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <BusyIndicator"),l.default.createElement("div",null,"    toast"),l.default.createElement("div",null,"    label='Loading data...'"),l.default.createElement("div",null,"    size={BusyIndicatorSizes.LARGE}"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>>"))}]};t.BusyIndicatorDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},1055:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Button",labels:[{text:"version 0.0.3",accentColor:r.AccentColors.COLOR_8},{text:"in progress",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"The button component is used to trigger an action. All buttons are characterized by the fd-button class and an additional modifier class to specify each button type.",types:[{id:"Button",props:[{id:"selectedTab",type:"boolean",description:"The identifier of the currently selected tab"}]}],examples:[{title:"Primary",result:l.default.createElement("div",{style:{display:"flex",gap:"0.5rem"}},l.default.createElement(r.Button,{text:"Create"}),l.default.createElement(r.Button,{ariaLabel:"Add to cart",icon:"cart"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.EMPHASIZED,text:"Save"})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', gap: '0.5rem' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    text='Create'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    ariaLabel='Add to cart'"),l.default.createElement("div",null,"    icon='cart'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"    text='Save'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>"))},{title:"Button styles",description:l.default.createElement("ul",null,l.default.createElement("li",null,l.default.createElement("strong",null,"Default button")," is used for neutral or informative (secondary) actions."),l.default.createElement("li",null,l.default.createElement("strong",null,"Emphasized button")," is used to indicate the primary action on the screen."),l.default.createElement("li",null,l.default.createElement("strong",null,"Ghost button")," is used to trigger secondary actions. If a page already has a primary action, but you also need to highlight the most important action in a content toolbar, use the ghost style."),l.default.createElement("li",null,l.default.createElement("strong",null,"Positive button")," is used to trigger positive semantic actions, such as Accept and should always be accompanied by text."),l.default.createElement("li",null,l.default.createElement("strong",null,"Negative button")," is used to trigger negative semantic actions, such as Reject and should always be accompanied by text."),l.default.createElement("li",null,l.default.createElement("strong",null,"Attention button")," is used to trigger a semantic action that needs attention and should always be accompanied by text."),l.default.createElement("li",null,l.default.createElement("strong",null,"Transparent button")," is used to trigger a negative path action within a header or footer bar, and secondary actions in toolbars.")),result:l.default.createElement("div",{style:{display:"flex",gap:"0.5rem",flexWrap:"wrap"}},l.default.createElement(r.Button,{text:"Default Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.EMPHASIZED,text:"Emphasized Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.GHOST,text:"Ghost Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.POSITIVE,text:"Positive Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.NEGATIVE,text:"Negative Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.ATTENTION,text:"Attention Button"}),l.default.createElement(r.Button,{design:r.ButtonDesigns.TRANSPARENT,text:"Transparent Button"})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    text='Default Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.EMPHASIZED}"),l.default.createElement("div",null,"    text='Emphasized Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.GHOST}"),l.default.createElement("div",null,"    text='Ghost Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.POSITIVE}"),l.default.createElement("div",null,"    text='Positive Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.NEGATIVE}"),l.default.createElement("div",null,"    text='Negative Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.ATTENTION}"),l.default.createElement("div",null,"    text='Attention Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"  <Button"),l.default.createElement("div",null,"    design={ButtonDesigns.TRANSPARENT}"),l.default.createElement("div",null,"    text='Transparent Button'"),l.default.createElement("div",null,"  />"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>"))},{title:"Segmented button",description:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,'The segmented button displays a group of options. Only one option can be active at a time by selecting it, while the others remain or become inactive when the initial option is selected. This button type was previously known as "button group" and is comparable to a radio button group.'),l.default.createElement("p",null,'It can be displayed by using the fd-segmented-button class with role="group" and the aria-label="Group label" attribute.')),result:l.default.createElement("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",flexWrap:"wrap"}},l.default.createElement(r.SegmentedButton,{ariaLabel:"Group label"},l.default.createElement(r.Button,{icon:"survey"}),l.default.createElement(r.Button,{icon:"pie-chart",selected:!0}),l.default.createElement(r.Button,{icon:"pool"})),l.default.createElement(r.SegmentedButton,{ariaLabel:"Group label"},l.default.createElement(r.Button,{text:"Left",compact:!0}),l.default.createElement(r.Button,{text:"Middle 1",compact:!0}),l.default.createElement(r.Button,{text:"Middle 2",compact:!0,selected:!0}),l.default.createElement(r.Button,{text:"Right",compact:!0}))),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', flexWrap: 'wrap' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <SegmentedButton ariaLabel='Group label'>"),l.default.createElement("div",null,"    <Button icon='survey' />"),l.default.createElement("div",null,"    <Button icon='pie-chart' selected />"),l.default.createElement("div",null,"    <Button icon='pool' />"),l.default.createElement("div",null,"  </SegmentedButton>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <SegmentedButton ariaLabel='Group label'>"),l.default.createElement("div",null,"    <Button text='Left' compact />"),l.default.createElement("div",null,"    <Button text='Middle 1' compact />"),l.default.createElement("div",null,"    <Button text='Middle 2' compact selected />"),l.default.createElement("div",null,"    <Button text='Right' compact />"),l.default.createElement("div",null,"  </SegmentedButton>"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>"))}]};t.ButtonDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},7340:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CalendarDemo=void 0;const l=a(n(7294));t.CalendarDemo=()=>l.default.createElement("div",null,"CALENDAR")},1974:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CardDemo=void 0;const l=a(n(7294));t.CardDemo=()=>l.default.createElement("div",null,"CARD")},3242:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DialogDemo=void 0;const l=a(n(7294));t.DialogDemo=()=>l.default.createElement("div",null,"DIALOG")},6661:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FormDemo=void 0;const l=a(n(7294));t.FormDemo=()=>l.default.createElement("div",null,"FORM")},4757:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IconDemo=void 0;const l=a(n(7294));t.IconDemo=()=>l.default.createElement("div",null,"ICON")},6170:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IconTabBarDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Icon Tab Bar",labels:[{text:"version 0.0.3",accentColor:r.AccentColors.COLOR_8},{text:"in progress",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"Info Label is a small non-interactive numeric or text-based label. Its primary use is to add user-defined characteristic to an object.",types:[{id:"InfoTabBar",props:[{id:"selectedTab",type:"boolean",description:"The identifier of the currently selected tab"},{id:"tabs",type:"IconTabBarItemProperties[]",description:"List of tabs to display"},{id:"onTabSelect",type:"Callback (string) => void",description:"Event called when a tab is selected"}]}],examples:[{title:"Primary",description:"The text-only variant is one of the most common types. It allows longer labels, and can also display counters next to the text to indicate the number of items on the tab page. The labels of the tabs do not get truncated. The full text is always shown. As a result, you need to ensure that your labels do not become too long. They should still be easy to read on smaller screens. The control has the same look and feel in Cozy and Compact mode.",result:l.default.createElement(r.IconTabBar,{selectedTab:"tab1",tabs:[{id:"tab1",title:"Info"},{id:"tab2",title:"Attachements (16)"},{id:"tab3",title:"Approvals (42)"}]}),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<IconTabBar"),l.default.createElement("div",null,"  selectedTab='tab1'"),l.default.createElement("div",null,"  tabs={["),l.default.createElement("div",null,"    { id: 'tab1', title: 'Info' },"),l.default.createElement("div",null,"    { id: 'tab2', title: 'Attachements (16)' },"),l.default.createElement("div",null,"    { id: 'tab3', title: 'Approvals (42)' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))}]};t.IconTabBarDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},6446:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InfoLabelDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Info Label",labels:[{text:"version 0.0.3",accentColor:r.AccentColors.COLOR_8},{text:"reviewed 0.0.3",accentColor:r.AccentColors.COLOR_6},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"Info Label is a small non-interactive numeric or text-based label. Its primary use is to add user-defined characteristic to an object. Use the Info Label base class with following modifiers:",types:[{id:"InfoLabel",props:[{id:"icon",type:"string",description:"(Optional) If provided, an icon will be displayed as the first element of the Info Label"},{id:"text",type:"string",description:"(Optional) If provided, a text will be displayed in the Info Label"},{id:"display",type:"boolean",description:"(Optional) Apply the default styling to the Info Label"},{id:"numeric",type:"boolean",description:"(Optional) Subbtle style modification to enhance display in case of numeric information"},{id:"accentColor",type:"AccentColor",description:"(Optional) Apply semantic color to Info Label"}]}],examples:[{title:"Color Flavors",description:"Use the fd-info-label--accent-color-* modifier class to apply semantic color to Info Label. Options include numbers from 1 to 10.",result:l.default.createElement("div",{style:{display:"flex",gap:"0.25rem",flexWrap:"wrap"}},l.default.createElement(r.InfoLabel,{text:"color 1",accentColor:r.AccentColors.COLOR_1}),l.default.createElement(r.InfoLabel,{text:"color 2",accentColor:r.AccentColors.COLOR_2}),l.default.createElement(r.InfoLabel,{text:"color 3",accentColor:r.AccentColors.COLOR_3}),l.default.createElement(r.InfoLabel,{text:"color 4",accentColor:r.AccentColors.COLOR_4}),l.default.createElement(r.InfoLabel,{text:"color 5",accentColor:r.AccentColors.COLOR_5}),l.default.createElement(r.InfoLabel,{text:"color 6",accentColor:r.AccentColors.COLOR_6}),l.default.createElement(r.InfoLabel,{text:"color 7",accentColor:r.AccentColors.COLOR_7}),l.default.createElement(r.InfoLabel,{text:"color 8",accentColor:r.AccentColors.COLOR_8}),l.default.createElement(r.InfoLabel,{text:"color 9",accentColor:r.AccentColors.COLOR_9}),l.default.createElement(r.InfoLabel,{text:"color 10",accentColor:r.AccentColors.COLOR_10})),code:l.default.createElement("div",null,l.default.createElement("div",null,"<InfoLabel text='color 1' accentColor={AccentColors.COLOR_1} />"),l.default.createElement("div",null,"<InfoLabel text='color 2' accentColor={AccentColors.COLOR_2} />"),l.default.createElement("div",null,"<InfoLabel text='color 3' accentColor={AccentColors.COLOR_3} />"),l.default.createElement("div",null,"<InfoLabel text='color 4' accentColor={AccentColors.COLOR_4} />"),l.default.createElement("div",null,"<InfoLabel text='color 5' accentColor={AccentColors.COLOR_5} />"),l.default.createElement("div",null,"<InfoLabel text='color 6' accentColor={AccentColors.COLOR_6} />"),l.default.createElement("div",null,"<InfoLabel text='color 7' accentColor={AccentColors.COLOR_7} />"),l.default.createElement("div",null,"<InfoLabel text='color 8' accentColor={AccentColors.COLOR_8} />"),l.default.createElement("div",null,"<InfoLabel text='color 9' accentColor={AccentColors.COLOR_9} />"),l.default.createElement("div",null,"<InfoLabel text='color 10' accentColor={AccentColors.COLOR_10} />"))},{title:"Info Label with Icon",description:"Use the fd-info-label--icon modifier class and icon type to create Info Label with Icon.",result:l.default.createElement("div",{style:{display:"flex",gap:"0.25rem",flexWrap:"wrap"}},l.default.createElement(r.InfoLabel,{text:"Info Label",icon:"past",accentColor:r.AccentColors.COLOR_1}),l.default.createElement(r.InfoLabel,{icon:"action",accentColor:r.AccentColors.COLOR_2})),code:l.default.createElement("div",null,l.default.createElement("div",null,"<InfoLabel text='Info Label' icon='past' accentColor={AccentColors.COLOR_1} />"),l.default.createElement("div",null,"<InfoLabel icon='action' accentColor={AccentColors.COLOR_2} />"))},{title:"Numeric Info Label",description:"For Numeric Info Label use the fd-info-label--numeric modifier class.",result:l.default.createElement("div",{style:{display:"flex",gap:"0.25rem",flexWrap:"wrap"}},l.default.createElement(r.InfoLabel,{text:"6",numeric:!0,accentColor:r.AccentColors.COLOR_1}),l.default.createElement(r.InfoLabel,{text:"6.2",numeric:!0,accentColor:r.AccentColors.COLOR_2}),l.default.createElement(r.InfoLabel,{text:"42K",numeric:!0,accentColor:r.AccentColors.COLOR_3})),code:l.default.createElement("div",null,l.default.createElement("div",null,"<InfoLabel text='6' numeric accentColor={AccentColors.COLOR_1} />"),l.default.createElement("div",null,"<InfoLabel text='6.2' numeric accentColor={AccentColors.COLOR_2} />"),l.default.createElement("div",null,"<InfoLabel text='42K' numeric accentColor={AccentColors.COLOR_3} />"))},{title:"Display Only Info Label",description:"For Display Only Info Label use the fd-info-label--display modifier class",result:l.default.createElement("div",{style:{display:"flex",gap:"0.25rem",flexWrap:"wrap"}},l.default.createElement(r.InfoLabel,{text:"system status",display:!0}),l.default.createElement(r.InfoLabel,{text:"42",display:!0,numeric:!0}),l.default.createElement(r.InfoLabel,{icon:"action",display:!0}),l.default.createElement(r.InfoLabel,{text:"Info Label",icon:"past",display:!0})),code:l.default.createElement("div",null,l.default.createElement("div",null,"<InfoLabel text='system status' display />"),l.default.createElement("div",null,"<InfoLabel text='42' display numeric />"),l.default.createElement("div",null,"<InfoLabel icon='action' display />"),l.default.createElement("div",null,"<InfoLabel text='Info Label' icon='past' display />"))}]};t.InfoLabelDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},8398:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LinkDemo=void 0;const l=a(n(7294));t.LinkDemo=()=>l.default.createElement("div",null,"LINK")},6226:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MenuDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Menu",labels:[{text:"version 0.0.5",accentColor:r.AccentColors.COLOR_8},{text:"reviewed 0.0.5",accentColor:r.AccentColors.COLOR_6},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,"The menu component is the listing structure with optional headers to create menus."),l.default.createElement("p",null,'Commonly used as the contents when composing "dropdowns", "contextual menus", etc, when paired with the popover component.')),types:[{id:"Menu",props:[{id:"compact",type:"boolean",description:"(Optional) If provided, the Menu is displayed in compact mode."},{id:"noShadow",type:"boolean",description:"(Optional) If provided, the Menu is displayed in compact mode."},{id:"items",type:"MenuItem[]",description:"The items to be displayed in the Menu."},{id:"onItemSelected",type:"(string) => void",description:"(Optional) Called when an item is selected in the menu"}]},{id:"MenuItem",props:[{id:"id",type:"string",description:"The unique identifier of the MenuItem in the Menu"},{id:"text",type:"string",description:"The label of the MenuItem in the Menu"},{id:"shortcut",type:"string",description:"(Optionnal) ..."},{id:"active",type:"boolean",description:"(Optionnal) ..."},{id:"hover",type:"boolean",description:"(Optionnal) ..."},{id:"selected",type:"boolean",description:"(Optionnal) ..."},{id:"disabled",type:"boolean",description:"(Optionnal) ..."},{id:"iconBefore",type:"string",description:"(Optionnal) ..."},{id:"iconAfter",type:"string",description:"(Optionnal) ..."}]}],examples:[{title:"Desktop and Tablet Modes",description:"The basic stucture of a menu. Place the menu item title in a <span> tag using class fd-menu__title and wrap it in the fd-menu__link and fd-menu__item classes as shown. Default mode is the cozy tablet mode, no class has to be added for this. Use class modifierfd-menu--compact on menu container level for desktop mode.",result:l.default.createElement("div",null,l.default.createElement("label",{className:"fd-form-label"},"Basic Menu"),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(r.Menu,{items:[{id:"item1",text:"Item 1"},{id:"item2",text:"Item 2"},{id:"item3",text:"Item 3"},{id:"item4",text:"Item 4"}]}),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("label",{className:"fd-form-label"},"Compact Menu"),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(r.Menu,{compact:!0,items:[{id:"item1",text:"Item 1"},{id:"item2",text:"Item 2"},{id:"item3",text:"Item 3"},{id:"item4",text:"Item 4"}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,'<label className="fd-form-label">'),l.default.createElement("div",null,"  Basic Menu"),l.default.createElement("div",null,"</label>"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,"<Menu"),l.default.createElement("div",null,"  items={["),l.default.createElement("div",null,"    { id: 'item1', text: 'Item 1' },"),l.default.createElement("div",null,"    { id: 'item2', text: 'Item 2' },"),l.default.createElement("div",null,"    { id: 'item3', text: 'Item 3' },"),l.default.createElement("div",null,"    { id: 'item4', text: 'Item 4' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,'<label className="fd-form-label">'),l.default.createElement("div",null,"  Compact Menu"),l.default.createElement("div",null,"</label>"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,"<br />"),l.default.createElement("div",null,"<Menu"),l.default.createElement("div",null,"  compact"),l.default.createElement("div",null,"  items={["),l.default.createElement("div",null,"    { id: 'item1', text: 'Item 1' },"),l.default.createElement("div",null,"    { id: 'item2', text: 'Item 2' },"),l.default.createElement("div",null,"    { id: 'item3', text: 'Item 3' },"),l.default.createElement("div",null,"    { id: 'item4', text: 'Item 4' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"List different states",description:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,"Simulate different states to show state behaviour between the items."),l.default.createElement("ul",null,l.default.createElement("li",null,"For simulating hover state, use class is-hover on the menu item."),l.default.createElement("li",null,"For simulating active state, use class is-active on the menu item."),l.default.createElement("li",null,"For simulating selected state, use class is-selected on the menu item."),l.default.createElement("li",null,"For simulating selected-hover state, use classes is-selected is-hover on the menu item."),l.default.createElement("li",null,"For simulating disabled state, use class is-disabled on the menu item.")),l.default.createElement("p",null,"To remove default box shadow from menu containers use fd-menu__list--no-shadow or fd-menu__sublist--no-shadow.")),result:l.default.createElement("div",null,l.default.createElement(r.Menu,{items:[{id:"item1",text:"Option 1 - Regular"},{id:"item2",text:"Option 2 - Hover",hover:!0},{id:"item3",text:"Option 3 - Active",active:!0},{id:"item4",text:"Option 4 - Selected",selected:!0},{id:"item5",text:"Option 5 - Selected-Hover",hover:!0,selected:!0},{id:"item6",text:"Option 6 - Disabled",disabled:!0}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Menu"),l.default.createElement("div",null,"  items={["),l.default.createElement("div",null,"    { id: 'item1', text: 'Item 1', iconBefore: 'grid', iconAfter: 'wrench' },"),l.default.createElement("div",null,"    { id: 'item2', text: 'Item 2', iconBefore: 'accept', iconAfter: 'history' },"),l.default.createElement("div",null,"    { id: 'item3', text: 'Item 3', iconBefore: 'wrench', iconAfter: 'lightbulb' },"),l.default.createElement("div",null,"    { id: 'item4', text: 'Item 4', iconBefore: 'cart', iconAfter: 'history', shortcut: 'Ctrl+A' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))},{title:"Menu with decoration content",description:l.default.createElement(l.default.Fragment,null,l.default.createElement("p",null,"To create an addon before or after fd-menu__title element, use elements with folowing classes inside fd-menu__link:"),l.default.createElement("ul",null,l.default.createElement("li",null,"fd-menu__addon-before: styles addon befotre fd-menu__title"),l.default.createElement("li",null,"fd-menu__addon-after: styles addon after fd-menu__title"),l.default.createElement("li",null,"fd-menu__shortcut: styles shortcut placed after fd-menu__title According to Fiori3 design shortcuts should be on desktop devices."))),result:l.default.createElement("div",null,l.default.createElement(r.Menu,{items:[{id:"item1",text:"Item 1",iconBefore:"grid",iconAfter:"wrench"},{id:"item2",text:"Item 2",iconBefore:"accept",iconAfter:"history"},{id:"item3",text:"Item 3",iconBefore:"wrench",iconAfter:"lightbulb"},{id:"item4",text:"Item 4",iconBefore:"cart",iconAfter:"history",shortcut:"Ctrl+A"}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Menu"),l.default.createElement("div",null,"  items={["),l.default.createElement("div",null,"    { id: 'item1', text: 'Item 1', iconBefore: 'grid', iconAfter: 'wrench' },"),l.default.createElement("div",null,"    { id: 'item2', text: 'Item 2', iconBefore: 'accept', iconAfter: 'history' },"),l.default.createElement("div",null,"    { id: 'item3', text: 'Item 3', iconBefore: 'wrench', iconAfter: 'lightbulb' },"),l.default.createElement("div",null,"    { id: 'item4', text: 'Item 4', iconBefore: 'cart', iconAfter: 'history', shortcut: 'Ctrl+A' },"),l.default.createElement("div",null,"  ]}"),l.default.createElement("div",null,"/>"))}]};t.MenuDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},6358:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectDemo=void 0;const l=a(n(7294));t.ObjectDemo=()=>l.default.createElement("div",null,"OBJECT")},3675:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PageDemo=void 0;const l=a(n(7294));t.PageDemo=()=>l.default.createElement("div",null,"PAGE")},5135:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PanelDemo=void 0;const l=a(n(7294));t.PanelDemo=()=>l.default.createElement("div",null,"PANEL")},7688:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PopoverDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Popover",labels:[{text:"version 0.0.3",accentColor:r.AccentColors.COLOR_8},{text:"on going",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"The popover displays additional information for an object in a compact way without leaving the page. The component contains two essential elements: the control (trigger) and body (content). It can also be paired with a Menu, whereas the menu button would trigger a dropdown (body).",types:[{id:"Popover",props:[{id:"icon",type:"string",description:"(Optional) If provided, an icon will be displayed as the first element of the Info Label"}]}],examples:[{title:"Alignment",description:"The popover body can be aligned to the left or right of the control. Additionally, it’s possible to remove the arrow from the body by adding the fd-popover__body--no-arrow modifier class to the body element.",result:l.default.createElement("div",{style:{display:"flex",gap:"2rem",flexWrap:"wrap"}},l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},l.default.createElement(r.Popover,{items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement("button",{className:"fd-button",role:"button"},l.default.createElement("i",{className:"sap-icon--navigation-down-arrow"}))),"Left-aligned (default)"),l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},"Right-aligned",l.default.createElement(r.Popover,{alignRight:!0,items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement("button",{className:"fd-button",role:"button"},l.default.createElement("i",{className:"sap-icon--navigation-down-arrow"})))),l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},l.default.createElement(r.Popover,{noArrow:!0,items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement("button",{className:"fd-button",role:"button"},l.default.createElement("i",{className:"sap-icon--navigation-down-arrow"}),"Left-aligned (no arrow)"))),l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},l.default.createElement(r.Popover,{alignRight:!0,noArrow:!0,items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement("button",{className:"fd-button",role:"button"},"Right-aligned (no arrow)",l.default.createElement("i",{className:"sap-icon--navigation-down-arrow"}))))),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"    Left-aligned (default)"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    Right-aligned"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      alignRight"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      noArrow"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"        Left-aligned (no arrow)"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      alignRight"),l.default.createElement("div",null,"      noArrow"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        Right-aligned (no arrow)"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>"))},{title:"Control variants",description:"Controls can be displayed as buttons, images, icons, and more. In the example below, the Avatar and Icon act as controls.",result:l.default.createElement("div",{style:{display:"flex",gap:"2rem",flexWrap:"wrap"}},l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},l.default.createElement(r.Popover,{items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement(r.Avatar,{ariaLabel:"Popover avatar",icon:"settings",size:r.Sizes.SMALL,circle:!0}))),l.default.createElement("div",{style:{flexBasis:0,flexGrow:1,flexShrink:0}},l.default.createElement(r.Popover,{alignRight:!0,noArrow:!0,items:[{id:"item1",text:"Option 1"},{id:"item2",text:"Option 2"},{id:"item3",text:"Option 3"},{id:"item4",text:"Option 4"}]},l.default.createElement(r.Button,{icon:"cart"})))),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<div style={{ display: 'flex' }}>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"    Left-aligned (default)"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    Right-aligned"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      alignRight"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      noArrow"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"        Left-aligned (no arrow)"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"  <div style={{ flexBasis: 0, flexGrow: 1 }}>"),l.default.createElement("div",null,"    <Popover"),l.default.createElement("div",null,"      alignRight"),l.default.createElement("div",null,"      noArrow"),l.default.createElement("div",null,"      items={["),l.default.createElement("div",null,"        { id: 'item1', text: 'Option 1' },"),l.default.createElement("div",null,"        { id: 'item2', text: 'Option 2' },"),l.default.createElement("div",null,"        { id: 'item3', text: 'Option 3' },"),l.default.createElement("div",null,"        { id: 'item4', text: 'Option 4' },"),l.default.createElement("div",null,"      ]}"),l.default.createElement("div",null,"    >"),l.default.createElement("div",null,"      <button"),l.default.createElement("div",null,"        className='fd-button'"),l.default.createElement("div",null,"        role='button'"),l.default.createElement("div",null,"      >"),l.default.createElement("div",null,"        Right-aligned (no arrow)"),l.default.createElement("div",null,"        <i className='sap-icon--navigation-down-arrow'></i>"),l.default.createElement("div",null,"      </button>"),l.default.createElement("div",null,"    </Popover>"),l.default.createElement("div",null,"  </div>"),l.default.createElement("br",null),l.default.createElement("div",null,"</div>"))}]};t.PopoverDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},8165:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SelectDemo=void 0;const l=a(n(7294));t.SelectDemo=()=>l.default.createElement("div",null,"SELECT")},6615:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ShellBarDemo=void 0;const l=a(n(7294));t.ShellBarDemo=()=>l.default.createElement("div",null,"SHELL BAR")},7055:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TableDemo=void 0;const l=a(n(7294)),r=n(2531),i=n(7027),o={title:"Table",labels:[{text:"version 0.0.3",accentColor:r.AccentColors.COLOR_8},{text:"on going",accentColor:r.AccentColors.COLOR_5},{text:"themable",accentColor:r.AccentColors.COLOR_3}],description:"A table contains a set of line items and usually comprises rows (with each row showing one line item) and columns. Line items can contain data of any kind, but also interactive elements, for example, for editing the data, navigating, or triggering actions relating to the line item.",types:[],examples:[{title:"Primary",description:"The primary table contains columns with headers, and rows with links. In the first column, links are displayed. To display links within a table, add the fd-link class within the table data.",result:l.default.createElement("div",null,l.default.createElement(r.Table,{borderedHorizontal:!0,borderedVertical:!0,columns:[{key:"email",name:"Email",render:e=>l.default.createElement("a",{href:"#"},e.email)},{key:"text",name:"Text"},{key:"name",name:"Middle Name"},{key:"lastName",name:"Last Name"},{key:"date",name:"Date",formatter:e=>e.date.toLocaleString()}],rows:[{data:{id:"user1",text:"I am User One",email:"user1@email.com",name:"User",lastName:"One",date:new Date(2010,1,5)}},{data:{id:"user2",text:"I am User Two",email:"user2@email.com",name:"User",lastName:"Two",date:new Date(2011,1,5)}},{data:{id:"user3",text:"I am User Three",email:"user3@email.com",name:"User",lastName:"Three",date:new Date(2012,1,5)}}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Table"),l.default.createElement("div",null,"  borderedHorizontal={true}"),l.default.createElement("div",null,"  borderedVertical={true}"),l.default.createElement("div",null,"  columns={[{"),l.default.createElement("div",null,"    key: 'email',"),l.default.createElement("div",null,"    name: 'Email',"),l.default.createElement("div",null,"    render: user => <a href='#'>{user.email}</a>"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'text',"),l.default.createElement("div",null,"    name: 'Text'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'name',"),l.default.createElement("div",null,"    name: 'Middle Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'lastName',"),l.default.createElement("div",null,"    name: 'Last Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'date',"),l.default.createElement("div",null,"    name: 'Date',"),l.default.createElement("div",null,"    formatter: user => user.date.toLocaleString()"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"  rows={[{"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user1',"),l.default.createElement("div",null,"      text: 'I am User One',"),l.default.createElement("div",null,"      email: 'user1@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'One',"),l.default.createElement("div",null,"      date: new Date(2010, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user2',"),l.default.createElement("div",null,"      text: 'I am User Two',"),l.default.createElement("div",null,"      email: 'user2@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Two',"),l.default.createElement("div",null,"      date: new Date(2011, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user3',"),l.default.createElement("div",null,"      text: 'I am User Three',"),l.default.createElement("div",null,"      email: 'user3@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Three',"),l.default.createElement("div",null,"      date: new Date(2012, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"/>"))},{title:"Borderless",description:"Table can be displayed without borders that separate the columns, column headers, and rows. To display a borderless table, add the fd-table--no-horizontal-borders and fd-table--no-vertical-borders modifier classes to the main element.",result:l.default.createElement("div",null,l.default.createElement(r.Table,{columns:[{key:"email",name:"Email",render:e=>l.default.createElement("a",{href:"#"},e.email)},{key:"text",name:"Text"},{key:"name",name:"Middle Name"},{key:"lastName",name:"Last Name"},{key:"date",name:"Date",formatter:e=>e.date.toLocaleString()}],rows:[{data:{id:"user1",text:"I am User One",email:"user1@email.com",name:"User",lastName:"One",date:new Date(2010,1,5)}},{data:{id:"user2",text:"I am User Two",email:"user2@email.com",name:"User",lastName:"Two",date:new Date(2011,1,5)}},{data:{id:"user3",text:"I am User Three",email:"user3@email.com",name:"User",lastName:"Three",date:new Date(2012,1,5)}}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Table"),l.default.createElement("div",null,"  columns={[{"),l.default.createElement("div",null,"    key: 'email',"),l.default.createElement("div",null,"    name: 'Email',"),l.default.createElement("div",null,"    render: user => <a href='#'>{user.email}</a>"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'text',"),l.default.createElement("div",null,"    name: 'Text'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'name',"),l.default.createElement("div",null,"    name: 'Middle Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'lastName',"),l.default.createElement("div",null,"    name: 'Last Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'date',"),l.default.createElement("div",null,"    name: 'Date',"),l.default.createElement("div",null,"    formatter: user => user.date.toLocaleString()"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"  rows={[{"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user1',"),l.default.createElement("div",null,"      text: 'I am User One',"),l.default.createElement("div",null,"      email: 'user1@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'One',"),l.default.createElement("div",null,"      date: new Date(2010, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user2',"),l.default.createElement("div",null,"      text: 'I am User Two',"),l.default.createElement("div",null,"      email: 'user2@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Two',"),l.default.createElement("div",null,"      date: new Date(2011, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user3',"),l.default.createElement("div",null,"      text: 'I am User Three',"),l.default.createElement("div",null,"      email: 'user3@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Three',"),l.default.createElement("div",null,"      date: new Date(2012, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"/>"))},{title:"Interactive",description:"The table component can be interactive with hoverable and activable cells and rows.",result:l.default.createElement("div",null,l.default.createElement(r.Table,{borderedHorizontal:!0,borderedVertical:!0,columns:[{key:"email",name:"Email",render:e=>l.default.createElement("a",{href:"#"},e.email)},{key:"text",name:"Text"},{key:"name",name:"Middle Name"},{key:"lastName",name:"Last Name"},{key:"date",name:"Date",formatter:e=>e.date.toLocaleString()}],rows:[{hoverable:!0,data:{id:"user1",text:"I am User One",email:"user1@email.com",name:"User",lastName:"One",date:new Date(2010,1,5)}},{activable:!0,hoverable:!0,data:{id:"user2",text:"I am User Two",email:"user2@email.com",name:"User",lastName:"Two",date:new Date(2011,1,5)}},{activable:!0,data:{id:"user3",text:"I am User Three",email:"user3@email.com",name:"User",lastName:"Three",date:new Date(2012,1,5)}}]})),code:l.default.createElement("div",{style:{whiteSpace:"pre"}},l.default.createElement("div",null,"<Table"),l.default.createElement("div",null,"  borderedHorizontal={true}"),l.default.createElement("div",null,"  borderedVertical={true}"),l.default.createElement("div",null,"  columns={[{"),l.default.createElement("div",null,"    key: 'email',"),l.default.createElement("div",null,"    name: 'Email',"),l.default.createElement("div",null,"    render: user => <a href='#'>{user.email}</a>"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'text',"),l.default.createElement("div",null,"    name: 'Text'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'name',"),l.default.createElement("div",null,"    name: 'Middle Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'lastName',"),l.default.createElement("div",null,"    name: 'Last Name'"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    key: 'date',"),l.default.createElement("div",null,"    name: 'Date',"),l.default.createElement("div",null,"    formatter: user => user.date.toLocaleString()"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"  rows={[{"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user1',"),l.default.createElement("div",null,"      text: 'I am User One',"),l.default.createElement("div",null,"      email: 'user1@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'One',"),l.default.createElement("div",null,"      date: new Date(2010, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user2',"),l.default.createElement("div",null,"      text: 'I am User Two',"),l.default.createElement("div",null,"      email: 'user2@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Two',"),l.default.createElement("div",null,"      date: new Date(2011, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }, {"),l.default.createElement("div",null,"    data: {"),l.default.createElement("div",null,"      id: 'user3',"),l.default.createElement("div",null,"      text: 'I am User Three',"),l.default.createElement("div",null,"      email: 'user3@email.com',"),l.default.createElement("div",null,"      name: 'User',"),l.default.createElement("div",null,"      lastName: 'Three',"),l.default.createElement("div",null,"      date: new Date(2012, 1, 5)"),l.default.createElement("div",null,"    }"),l.default.createElement("div",null,"  }]}"),l.default.createElement("div",null,"/>"))}]};t.TableDemo=()=>l.default.createElement(i.DemoPage,Object.assign({},o))},2612:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TileDemo=void 0;const l=a(n(7294));t.TileDemo=()=>l.default.createElement("div",null,"TILE")},8566:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TitleDemo=void 0;const l=a(n(7294));t.TitleDemo=()=>l.default.createElement("div",null,"TITLE")},7026:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarDemo=void 0;const l=a(n(7294));t.ToolbarDemo=()=>l.default.createElement("div",null,"TOOLBAR")},4392:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.VerticalNavigationDemo=void 0;const l=a(n(7294));t.VerticalNavigationDemo=()=>l.default.createElement("div",null,"VERTICAL NAVIGATION")},6212:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=a(n(7294)),r=n(9818),i=n(745),o=a(n(2509)),u=document.getElementById("reactroot");(0,i.createRoot)(u).render(l.default.createElement(r.HashRouter,null,l.default.createElement(o.default,null)))},8277:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Avatar=void 0;const l=a(n(7294)),r=n(3723),i=n(7876);t.Avatar=({ariaLabel:e,ariaControls:t,ariaExpanded:n,ariaHaspopup:a,icon:o,initials:u,size:c=r.Sizes.MEDIUM,style:d,accentColor:s,shell:f,bordered:m,transparent:p,circle:v,onClick:h})=>{const b=["fd-avatar"];return c&&b.push(`fd-avatar--${c}`),s&&b.push(`fd-avatar--${s}`),f&&b.push("fd-avatar--shell"),m&&b.push("fd-avatar--border"),p&&b.push("fd-avatar--transparent"),v&&b.push("fd-avatar--circle"),l.default.createElement("span",{className:b.join(" "),"aria-label":e,"aria-controls":t,"aria-expanded":n,"aria-haspopup":a,style:d,role:h?"button":void 0,onClick:h},o?l.default.createElement(i.Icon,{className:"fd-avatar__icon",icon:o}):u)}},6149:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Badge=void 0;const l=a(n(7294));t.Badge=({text:e,accentColor:t})=>{const n=["fd-badge"];return t&&n.push(`fd-info-label--${t}`),l.default.createElement("div",{className:n.join(" ")},e)}},9128:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;const l=a(n(7294)),r=n(4413),i=n(3494),o=n(7883),u=n(2300);t.Bar=({className:e,style:t,cozy:n,left:a,middle:c,responsivePaddings:d,right:s,type:f})=>{const m=e=>Array.isArray(e)?e.map(((e,t)=>p(e,`element-${t}`))):p(e),p=(e,t)=>l.default.createElement(r.BarElement,{key:t},e),v=["fd-bar"];return e&&v.push(e),n&&v.push("fd-bar--cozy"),d&&v.push("fd-bar--responsive-paddings"),f&&v.push(`fd-bar--${f}`),l.default.createElement("div",{className:v.join(" "),style:t},a?l.default.createElement(i.BarLeft,null,m(a)):null,c?l.default.createElement(o.BarMiddle,null,m(c)):null,s?l.default.createElement(u.BarRight,null,m(s)):null)}},4413:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BarElement=void 0;const l=a(n(7294));t.BarElement=({className:e,style:t,children:n})=>{const a=["fd-bar__element"];return e&&a.push(e),l.default.createElement("div",{className:a.join(" "),style:t},n)}},3494:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BarLeft=void 0;const l=a(n(7294));t.BarLeft=({className:e,style:t,children:n})=>{const a=["fd-bar__left"];return e&&a.push(e),l.default.createElement("div",{className:a.join(" "),style:t},n)}},7883:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BarMiddle=void 0;const l=a(n(7294));t.BarMiddle=({className:e,style:t,children:n})=>{const a=["fd-bar__middle"];return e&&a.push(e),l.default.createElement("div",{className:a.join(" "),style:t},n)}},2300:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BarRight=void 0;const l=a(n(7294));t.BarRight=({className:e,style:t,children:n})=>{const a=["fd-bar__right"];return e&&a.push(e),l.default.createElement("div",{className:a.join(" "),style:t},n)}},8677:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Breadcrumb=void 0;const l=a(n(7294)),r=n(6859);t.Breadcrumb=({className:e,style:t,ariaLabel:n,items:a,onItemSelected:i})=>{const o=[];return e&&o.push(e),l.default.createElement("nav",{className:o.join(" "),style:t,"aria-label":n},l.default.createElement("ul",{className:"fd-breadcrumb"},a.map(((e,t)=>l.default.createElement(r.BreadcrumbItem,{key:t,text:e.text,current:t===a.length-1,onItemSelected:()=>(e=>(e.onItemSelected?e.onItemSelected():i&&i(e.text),!1))(e)})))))}},6859:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BreadcrumbItem=void 0;const l=a(n(7294));t.BreadcrumbItem=({className:e,style:t,text:n,current:a,onItemSelected:r})=>{const i=["fd-breadcrumb__item"];return e&&i.push(e),a?l.default.createElement("li",{className:i.join(" "),style:t,"aria-current":"page"},n):l.default.createElement("li",{className:i.join(" "),style:t},l.default.createElement("a",{className:"fd-link",tabIndex:0,href:"#",onClick:()=>(r(),!1)},l.default.createElement("span",{className:"fd-link__content"},n)))}},7289:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BusyIndicator=void 0;const l=a(n(7294));t.BusyIndicator=({className:e,style:t,ariaLabel:n,contrast:a,label:r,size:i,toast:o})=>{const u=r||o,c=["fd-busy-indicator"];i&&c.push(`fd-busy-indicator--${i}`),e&&c.push(e),a&&c.push("fd-busy-indicator--contrast");const d=l.default.createElement("div",{className:c.join(" "),style:t,"aria-hidden":"false","aria-label":n||"Loading"},l.default.createElement("div",{className:"fd-busy-indicator__circle"}),l.default.createElement("div",{className:"fd-busy-indicator__circle"}),l.default.createElement("div",{className:"fd-busy-indicator__circle"}));if(u){const e=["fd-busy-indicator-extended"];return o&&(e.push("fd-message-toast"),r&&e.push("fd-busy-indicator-extended--message-toast")),l.default.createElement("div",{className:e.join(" ")},d,r?l.default.createElement("div",{className:"fd-busy-indicator-extended__label"},r):null)}return d}},4326:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Button=void 0;const l=a(n(7294)),r=n(1903);t.Button=({className:e,style:t,ariaLabel:n,ariaControls:a,ariaExpanded:i,ariaHaspopup:o,badge:u,compact:c,design:d,disabled:s,icon:f,iconAfter:m,menu:p,selected:v,tabIndex:h,text:b,type:g=r.ButtonTypes.BUTTON,onClick:E})=>{const y=["fd-button"];return e&&y.push(e),d&&y.push(`fd-button--${d}`),v&&y.push("is-selected"),c&&y.push("fd-button--compact"),p&&y.push("fd-button--menu"),l.default.createElement("button",{className:y.join(" "),style:t,"aria-label":n,"aria-controls":a,"aria-expanded":i,"aria-haspopup":o,onClick:()=>{E&&E()},tabIndex:h||0,type:g,"aria-disabled":!!s,disabled:s},f&&!m?l.default.createElement("i",{className:`sap-icon--${f}`,role:"presentation"}):null,b?l.default.createElement("span",{className:"fd-button__text"},b):null,f&&m?l.default.createElement("i",{className:`sap-icon--${f}`,role:"presentation"}):null,p?l.default.createElement("i",{className:"sap-icon--slim-arrow-down"}):null,u?l.default.createElement("span",{className:"fd-button__badge"},u):null)}},6232:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SegmentedButton=void 0;const l=a(n(7294));t.SegmentedButton=({className:e,style:t,ariaLabel:n,children:a})=>{const r=["fd-segmented-button"];return e&&r.push(e),l.default.createElement("div",{className:r.join(" "),style:t,"aria-label":n||"Group label",role:"group"},a)}},8681:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Calendar=t.DISPLAY_MODE=void 0;const i=r(n(7294)),o=n(7280),u=n(8551),c=n(1663);t.DISPLAY_MODE={DAYS:"DAYS",MONTHS:"MONTHS",YEARS:"YEARS"},t.Calendar=({date:e=new Date,selectedDate:n,compact:a,onSelectedDateChange:l})=>{let r=t.DISPLAY_MODE.DAYS;const[d,s]=(0,i.useState)(e),[f,m]=(0,i.useState)(t.DISPLAY_MODE.DAYS);(0,i.useEffect)((()=>{f!==t.DISPLAY_MODE.YEARS&&(r=f)}),[f]);const p=e=>{s(e)},v=e=>{m(e)},h=e=>{m(e)},b=e=>{m(r||e)};switch(f){case t.DISPLAY_MODE.MONTHS:return i.default.createElement(u.CalendarMonths,{date:d,onDisplayDateChange:p,onDisplayModeChange:h});case t.DISPLAY_MODE.YEARS:return i.default.createElement(c.CalendarYears,{date:d,onDisplayDateChange:p,onDisplayModeChange:b});default:return i.default.createElement(o.CalendarDays,{date:d,selectedDate:n,compact:a,onDisplayDateChange:p,onDisplayModeChange:v,onSelectedDateChange:l})}}},7280:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CalendarDays=void 0;const i=r(n(7294)),o=n(6414),u=n(4326),c=n(8681),d=n(5958);t.CalendarDays=({date:e,selectedDate:t,compact:n,onDisplayDateChange:a,onDisplayModeChange:l,onSelectedDateChange:r})=>{const p="en",v=new Intl.Locale(p),{firstDay:h,minimalDays:b,weekend:g}=v.weekInfo,[E,y]=(0,i.useState)([]),[_,w]=(0,i.useState)([]);(0,i.useEffect)((()=>{const e=[],t=new Date;for(;t.getDay()!==h%7;)t.setDate(t.getDate()-1);for(let n=0;n<7;n++){const n=t.toLocaleString(p,{weekday:"short"});e.push(n.substring(0,1).toUpperCase()),t.setDate(t.getDate()+1)}w(e)}),[]),(0,i.useEffect)((()=>{const n=new Date,a=[],l=new Date(e.getFullYear(),e.getMonth(),1);for(;l.getDay()!==h%7;)l.setDate(l.getDate()-1);for(let r=0;r<5;r++){const r=[];for(let a=1;a<8;a++){const i=n.getFullYear()===l.getFullYear(),o=n.getMonth()===l.getMonth(),u=n.getDate()===l.getDate(),c=!!t&&t.getFullYear()===l.getFullYear(),d=!!t&&t.getMonth()===l.getMonth(),s=!!t&&t.getDate()===l.getDate();r.push({date:new Date(l.getTime()),text:l.getDate(),otherMonth:l.getMonth()!==e.getMonth(),current:i&&o&&u,active:c&&d&&s,weekend:g.includes(a)}),l.setDate(l.getDate()+1)}a.push(r)}y(a)}),[e,t]);const S=["fd-calendar"];return n&&S.push("fd-calendar--compact"),i.default.createElement("section",{className:S.join(" ")},i.default.createElement("header",{className:"fd-calendar__header"},i.default.createElement("div",{className:"fd-calendar__navigation"},i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-left"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-left",onClick:()=>{const t=new Date(e.getFullYear(),e.getMonth(),0);a(t)}})),i.default.createElement("div",{className:"fd-calendar__action"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,text:o.StringUtils.capitalize(e.toLocaleString(p,{month:"long"})),onClick:()=>{l(c.DISPLAY_MODE.MONTHS)}})),i.default.createElement("div",{className:"fd-calendar__action"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,text:e.getFullYear(),onClick:()=>{l(c.DISPLAY_MODE.YEARS)}})),i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-right"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-right",onClick:()=>{const t=new Date(e.getFullYear(),e.getMonth()+1,1);a(t)}})))),i.default.createElement("div",{className:"fd-calendar__content fd-calendar__content--dates"},i.default.createElement("table",{className:"fd-calendar__table",role:"grid"},i.default.createElement("thead",{className:"fd-calendar__group"},i.default.createElement("tr",{className:"fd-calendar__row"},i.default.createElement(s,null),_.map(((e,t)=>i.default.createElement(s,{key:`calendar-week-day-${t}`,text:e}))))),i.default.createElement("tbody",{className:"fd-calendar__group"},E.map(((e,t)=>i.default.createElement("tr",{key:`calendar-week-${t}`,className:"fd-calendar__row"},i.default.createElement(f,{text:t+1}),e.map((e=>i.default.createElement(m,Object.assign({key:`calendar-week-${t}-day-${e.text}`},e,{onCalendarDayClicked:()=>r&&r(e.date)})))))))))),i.default.createElement("div",{"aria-live":"polite",className:"fd-calendar__content fd-calendar__content--screen-reader-only"},"Use arrow keys to navigate dates"))};const s=({text:e})=>i.default.createElement("th",{className:"fd-calendar__item fd-calendar__item--side-helper"},e?i.default.createElement("span",{className:"fd-calendar__text",role:"button"},e):null),f=({text:e})=>i.default.createElement("td",{className:"fd-calendar__item fd-calendar__item--side-helper"},i.default.createElement("span",{className:"fd-calendar__text",role:"button"},e)),m=({text:e,active:t,current:n,otherMonth:a,range:l,specialDay:r,weekend:o,onCalendarDayClicked:u})=>{const c=["fd-calendar__item"];return t&&c.push("is-active"),n&&c.push("fd-calendar__item--current"),a&&c.push("fd-calendar__item--other-month"),l&&c.push("fd-calendar__item--range"),r&&c.push(`fd-calendar__special-day--${r}`),o&&c.push("fd-calendar__item--weekend"),i.default.createElement("td",{className:c.join(" "),role:"gridcell",style:{cursor:"pointer"}},i.default.createElement("span",{className:"fd-calendar__text",role:"button",onClick:u},e))}},8551:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CalendarMonths=void 0;const i=r(n(7294)),o=n(6414),u=n(4326),c=n(8681),d=n(5958);t.CalendarMonths=({date:e,onDisplayDateChange:t,onDisplayModeChange:n})=>{const[a,l]=(0,i.useState)([]);(0,i.useEffect)((()=>{const t=new Date,n=[];for(let a=0;a<4;a++){const l=[];for(let n=0;n<3;n++){const r=4*n+a,i=e.getFullYear()===t.getFullYear(),o=t.getMonth()===r;l.push({month:r,current:i&&o})}n.push(l)}l(n)}),[e]);const r=e=>{const t=new Date(2e3,e).toLocaleString("en",{month:"long"});return o.StringUtils.capitalize(t)};return i.default.createElement("section",{className:["fd-calendar"].join(" ")},i.default.createElement("header",{className:"fd-calendar__header"},i.default.createElement("div",{className:"fd-calendar__navigation"},i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-left"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-left",onClick:()=>{const n=new Date(e.getFullYear()-1,e.getMonth(),1);t(n)}})),i.default.createElement("div",{className:"fd-calendar__action"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,text:e.getFullYear(),onClick:()=>{n(c.DISPLAY_MODE.YEARS)}})),i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-right"},i.default.createElement(u.Button,{design:d.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-right",onClick:()=>{const n=new Date(e.getFullYear()+1,e.getMonth(),1);t(n)}})))),i.default.createElement("div",{className:"fd-calendar__content fd-calendar__content--months"},i.default.createElement("table",{className:"fd-calendar__table",role:"grid"},i.default.createElement("tbody",{className:"fd-calendar__group"},a.map(((a,l)=>i.default.createElement("tr",{key:`'calendar-month-row-${l}`,className:"fd-calendar__row"},a.map((a=>i.default.createElement(s,{key:`'calendar-month-${a.month}`,text:r(a.month),current:a.current,onClick:()=>(a=>{const l=new Date(e.getFullYear(),a,1);t(l),n(c.DISPLAY_MODE.DAYS)})(a.month)}))))))))),i.default.createElement("div",{"aria-live":"polite",className:"fd-calendar__content fd-calendar__content--screen-reader-only"},"Use arrow keys to navigate dates"))};const s=({text:e,active:t,current:n,onClick:a})=>{const l=["fd-calendar__item"];n&&l.push("fd-calendar__item--current");const r=["fd-button fd-button--transparent fd-calendar__item-button"];return t&&r.push("is-active"),i.default.createElement("td",{className:l.join(" "),role:"gridcell"},i.default.createElement("button",{className:r.join(" "),type:"button",onClick:a},i.default.createElement("span",{className:"fd-calendar__text"},e)))}},1663:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CalendarYears=void 0;const i=r(n(7294)),o=n(4326),u=n(8681),c=n(5958);t.CalendarYears=({date:e,onDisplayDateChange:t,onDisplayModeChange:n})=>{const[a,l]=(0,i.useState)([]);return(0,i.useEffect)((()=>{const t=new Date;let n=10*Math.floor(e.getFullYear()/10);const a=[];for(let e=0;e<4;e++){const e=[];for(let a=0;a<5;a++)e.push({current:n===t.getFullYear(),year:n++});a.push(e)}l(a)}),[e]),i.default.createElement("section",{className:["fd-calendar"].join(" "),style:{marginBottom:"1rem"}},i.default.createElement("header",{className:"fd-calendar__header"},i.default.createElement("div",{className:"fd-calendar__navigation"},i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-left"},i.default.createElement(o.Button,{design:c.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-left",onClick:()=>{const n=new Date(e.getFullYear()-20,e.getMonth(),1);t(n)}})),i.default.createElement("div",{className:"fd-calendar__action"},i.default.createElement(o.Button,{design:c.ButtonDesigns.TRANSPARENT,text:a&&a.length?`${a[0][0].year} - ${a[3][4].year}`:void 0})),i.default.createElement("div",{className:"fd-calendar__action fd-calendar__action--arrow-right"},i.default.createElement(o.Button,{design:c.ButtonDesigns.TRANSPARENT,icon:"slim-arrow-right",onClick:()=>{const n=new Date(e.getFullYear()+20,e.getMonth(),1);t(n)}})))),i.default.createElement("div",{className:"fd-calendar__content fd-calendar__content--years ",id:"57YUZ521"},i.default.createElement("table",{className:"fd-calendar__table",role:"grid"},i.default.createElement("tbody",{className:"fd-calendar__group"},a.map(((a,l)=>i.default.createElement("tr",{key:`'calendar-years-row-${l}`,className:"fd-calendar__row"},a.map((a=>i.default.createElement(d,{key:`'calendar-years-${a.year}`,text:a.year,current:a.current,onClick:()=>(a=>{const l=new Date(a,e.getMonth(),1);t(l),n(u.DISPLAY_MODE.MONTHS)})(a.year)}))))))))),i.default.createElement("div",{"aria-live":"polite",className:"fd-calendar__content fd-calendar__content--screen-reader-only"},"Use arrow keys to navigate dates"))};const d=({text:e,active:t,current:n,onClick:a})=>{const l=["fd-calendar__item"];n&&l.push("fd-calendar__item--current");const r=["fd-button fd-button--transparent fd-calendar__item-button"];return t&&r.push("is-active"),i.default.createElement("td",{className:l.join(" "),role:"gridcell"},i.default.createElement("button",{className:r.join(" "),type:"button",onClick:a},i.default.createElement("span",{className:"fd-calendar__text"},e)))}},6369:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Card=void 0;const l=a(n(7294)),r=n(6149),i=n(3824),o=n(6864);t.Card=({badge:e,header:t,footer:n,children:a})=>l.default.createElement("div",{className:["fd-card"].join(" ")},e?l.default.createElement(r.Badge,Object.assign({},e)):null,l.default.createElement(i.CardHeader,Object.assign({},t)),a?l.default.createElement("div",{className:"fd-card__content",role:"group","aria-label":"Card Content"},a):null,l.default.createElement(o.CardFooter,Object.assign({},n)))},6864:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CardFooter=void 0;const l=a(n(7294));t.CardFooter=({className:e,children:t})=>{const n=["fd-card__footer"];return e&&n.push(e),l.default.createElement("a",{className:n.join(" ")},t)}},3824:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CardHeader=void 0;const l=a(n(7294)),r=n(8277);t.CardHeader=({avatar:e,title:t,titleCounter:n,subTitle:a,onClick:i})=>l.default.createElement("a",{className:["fd-card__header"].join(" "),tabIndex:0,onClick:()=>{i&&i()},onKeyUp:e=>{switch(e.code){case"Enter":case"Space":e.stopPropagation(),i&&i()}}},e?l.default.createElement(r.Avatar,Object.assign({},e)):null,t||n?l.default.createElement("div",{className:"fd-card__title-area"},l.default.createElement("div",{className:"fd-card__title"},t),l.default.createElement("span",{className:"fd-object-status fd-card__counter"},n)):null,a?l.default.createElement("div",{className:"fd-card__subtitle-area"},l.default.createElement("div",{className:"fd-card__subtitle"},a)):null)},9456:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Dialog=void 0;const i=r(n(7294)),o=n(8329),u=n(9929);t.Dialog=({resizable:e,header:t,footer:n,children:a})=>{const l=(0,i.useRef)(null);return(0,i.useEffect)((()=>{const e=null==l?void 0:l.current;if(e){const t=e.querySelector('[tabindex="0"]');t&&t.focus()}}),[]),i.default.createElement("section",{className:"fd-dialog-docs-static fd-dialog fd-dialog--active"},i.default.createElement("div",{className:"fd-dialog__content",role:"dialog","aria-modal":"true","aria-labelledby":"dialog-title-1",ref:l},e?i.default.createElement("span",{className:"fd-dialog__resize-handle"}):null,t?i.default.createElement(u.DialogHeader,Object.assign({},t)):null,i.default.createElement("div",{className:"fd-dialog__body"},a),n?i.default.createElement(o.DialogFooter,Object.assign({},n)):null))}},8329:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DialogFooter=void 0;const l=a(n(7294));t.DialogFooter=({left:e,right:t,children:n})=>{const a=e=>e?Array.isArray(e)?l.default.createElement(l.default.Fragment,null,e.map(((e,t)=>r(e,`elem-${t}`)))):r(e):null,r=(e,t)=>l.default.createElement("div",{key:t,className:"fd-bar__element"},e);return l.default.createElement("footer",{className:"fd-dialog__footer fd-bar fd-bar--footer"},l.default.createElement("div",{className:"fd-bar__left"},e?a(e):null),l.default.createElement("div",{className:"fd-bar__right"},a(t||n)))}},9929:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DialogHeader=void 0;const l=a(n(7294));t.DialogHeader=({left:e,right:t,subheader:n})=>{const a=["fd-dialog__header fd-bar"];n?a.push("fd-bar--header-with-subheader"):a.push("fd-bar--header");const r=e=>{if(e)return Array.isArray(e)?l.default.createElement(l.default.Fragment,null,e.map(((e,t)=>i(e,`elem-${t}`)))):i(e)},i=(e,t)=>l.default.createElement("div",{key:t,className:"fd-bar__element"},e);return l.default.createElement("footer",{className:a.join(" ")},l.default.createElement("div",{className:"fd-bar__left"},e?r(e):null),l.default.createElement("div",{className:"fd-bar__right"},r(t)))}},5291:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FormInput=void 0;const l=a(n(7294)),r=n(6414);t.FormInput=({className:e,label:t,placeholder:n,type:a="text"})=>{const i=r.UUID.next(),o=["fd-form-item"];return e&&o.push(e),l.default.createElement("div",{className:o.join(" ")},l.default.createElement("label",{className:"fd-form-label",htmlFor:i},t),l.default.createElement("input",{className:"fd-input",type:a,id:i,placeholder:n}))}},2923:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.FormStepInput=void 0;const i=r(n(7294)),o=n(6414),u=n(4326),c=n(5958);t.FormStepInput=({className:e,label:t,min:n,max:a,value:l,onChange:r})=>{const d=(0,i.useRef)(null),[s,f]=(0,i.useState)(n);(0,i.useEffect)((()=>{m(l)}),[l]);const m=e=>{let t=e;!isNaN(n)&&t<n&&(t=n),a&&!isNaN(a)&&t>a&&(t=a),f(t),r(t)},p=o.UUID.next(),v=["fd-form-item"];return e&&v.push(e),i.default.createElement("div",{className:v.join(" ")},i.default.createElement("label",{className:"fd-form-label",htmlFor:p},t),i.default.createElement("div",{className:"fd-step-input"},i.default.createElement(u.Button,{className:"fd-step-input__button",ariaLabel:"Step down",design:c.ButtonDesigns.TRANSPARENT,tabIndex:-1,icon:"less",onClick:()=>{m(s-1)}}),i.default.createElement("input",{id:p,className:"fd-input fd-input--no-number-spinner fd-step-input__input",style:{width:"100%"},type:"number",value:s,ref:d,onChange:e=>{m(Number(e.target.value))}}),i.default.createElement(u.Button,{className:"fd-step-input__button",ariaLabel:"Step Up",design:c.ButtonDesigns.TRANSPARENT,tabIndex:-1,icon:"add",onClick:()=>{m(s+1)}})))}},7876:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Icon=void 0;const l=a(n(7294));t.Icon=({className:e,style:t,ariaLabel:n,ariaControls:a,ariaExpanded:r,ariaHaspopup:i,icon:o,preferSpan:u,onClick:c})=>{const d=[`sap-icon--${o}`];return e&&d.push(e),u&&d.push("sap-icon"),u?l.default.createElement("span",{className:d.join(" "),style:t,"aria-label":n,"aria-controls":a,"aria-expanded":r,"aria-haspopup":i,role:c?"button":"presentation",onClick:c}):l.default.createElement("i",{className:d.join(" "),style:t,"aria-label":n,"aria-controls":a,"aria-expanded":r,"aria-haspopup":i,role:c?"button":"presentation",onClick:c})}},1058:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IconTabBar=void 0;const l=a(n(7294)),r=n(5426);n(4902),t.IconTabBar=({selectedTab:e,tabs:t,onTabSelect:n,children:a})=>l.default.createElement("div",{className:["fd-icon-tab-bar"].join(" ")},l.default.createElement("ul",{className:"fd-icon-tab-bar__header",role:"tablist"},null==t?void 0:t.map((t=>l.default.createElement(r.IconTabBarItem,Object.assign({key:t.id,selected:e===t.id},t,{onTabSelect:n})))),a))},5426:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IconTabBarItem=void 0;const l=a(n(7294));t.IconTabBarItem=({id:e,badge:t,selected:n,semantic:a,title:r,onTabSelect:i})=>{const o=["fd-icon-tab-bar__item"];return a&&o.push(`fd-icon-tab-bar__item--${a}`),l.default.createElement("li",{className:o.join(" "),role:"presentation",onClick:()=>{i&&i(e)},onKeyUp:t=>{switch(t.code){case"Enter":case"Space":t.stopPropagation(),i&&i(e)}}},l.default.createElement("span",{id:e,className:"fd-icon-tab-bar__tab","aria-selected":!!n,role:"tab",tabIndex:0},l.default.createElement("span",{className:"fd-icon-tab-bar__tag"},r),t?l.default.createElement("span",{className:"fd-icon-tab-bar__badge"}):null))}},4229:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InfoLabel=void 0;const l=a(n(7294));t.InfoLabel=({icon:e,text:t,display:n,numeric:a,accentColor:r})=>{const i=["fd-info-label"];return r&&i.push(`fd-info-label--${r}`),a&&i.push("fd-info-label--numeric"),n&&i.push("fd-info-label--display"),l.default.createElement("span",{className:i.join(" ")},e?l.default.createElement("i",{className:`fd-info-label__icon sap-icon--${e}`,role:"presentation"}):null,t?l.default.createElement("span",{className:"fd-info-label__text"},t):null)}},6374:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Link=void 0;const l=a(n(7294));t.Link=({href:e,className:t,ariaLabel:n,style:a,icon:r,iconAfter:i,text:o,disabled:u,tabIndex:c})=>{const d=["fd-link"];return t&&d.push(t),a&&d.push(`fd-link--${a}`),l.default.createElement("a",{href:e,className:d.join(" "),"aria-label":n,tabIndex:c||0,"aria-disabled":!!u},l.default.createElement("span",{className:"fd-link__content"},r&&!i?l.default.createElement("span",{className:`sap-icon--${r}`}):null,o,r&&i?l.default.createElement("span",{className:`sap-icon--${r}`}):null))}},1665:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Menu=void 0;const l=a(n(7294)),r=n(7541);t.Menu=({items:e,compact:t,noShadow:n,onItemSelected:a})=>{const i=["fd-menu"];t&&i.push("fd-menu--compact");const o=["fd-menu__list"];return n&&o.push("fd-menu__list--no-shadow"),l.default.createElement("nav",{className:i.join(" "),"aria-label":"options",role:"navigation"},l.default.createElement("ul",{className:o.join(" "),role:"menu"},e.map((e=>l.default.createElement(r.MenuItem,Object.assign({},e,{key:e.id,onItemSelected:()=>{return e.onItemSelected?e.onItemSelected():(t=e.id,a&&a(t),!1);var t}}))))))}},7541:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MenuItem=void 0;const l=a(n(7294));t.MenuItem=({text:e,shortcut:t,active:n,hover:a,selected:r,disabled:i,iconBefore:o,iconAfter:u,onItemSelected:c})=>{const d=["fd-menu__link"];return n&&d.push("is-active"),a&&d.push("is-hover"),r&&d.push("is-selected"),i&&d.push("is-disabled"),l.default.createElement("li",{className:["fd-menu__item"].join(" "),role:"presentation"},l.default.createElement("a",{className:d.join(" "),role:"menuitem",onClick:()=>(c&&c(),!1)},o?l.default.createElement("span",{className:"fd-menu__addon-before"},l.default.createElement("i",{className:`sap-icon--${o}`,role:"presentation"})):null,l.default.createElement("span",{className:"fd-menu__title"},e),t?l.default.createElement("span",{className:"fd-menu__shortcut"},t):null,u?l.default.createElement("span",{className:"fd-menu__addon-after"},l.default.createElement("i",{className:`sap-icon--${u}`,role:"presentation"})):null))}},8775:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectAttribute=void 0;const l=a(n(7294));t.ObjectAttribute=({text:e})=>l.default.createElement("div",{className:"fd-object-list__object-attribute"},e)},9579:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectHeaderAttribute=void 0;const l=a(n(7294));n(2717),t.ObjectHeaderAttribute=({className:e,label:t,text:n})=>{const a=["fd-object-header-attribute"];return e&&a.push(e),l.default.createElement("div",{className:a.join(" ")},l.default.createElement("label",{className:"fd-object-header-attribute__label"},t),l.default.createElement("div",{className:"fd-object-header-attribute__text"},n))}},3417:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectIdentifier=void 0;const l=a(n(7294));t.ObjectIdentifier=({title:e,text:t,bold:n,medium:a,className:r})=>{const i=["fd-object-identifier"];a&&i.push("fd-object-identifier--medium"),r&&i.push(r);const o=["fd-object-identifier__title"];return n&&o.push("fd-object-identifier__title--bold"),l.default.createElement("div",{className:i.join(" ")},l.default.createElement("p",{className:o.join(" ")},e),t?l.default.createElement("p",{className:"fd-object-identifier__text"},t):null)}},225:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectList=void 0;const l=a(n(7294)),r=n(3610);t.ObjectList=({ariaLabeledBy:e,items:t,children:n,bordered:a})=>{const i=["fd-list fd-object-list"];return a||i.push("fd-list--no-border"),l.default.createElement("ul",{className:i.join(" "),role:"list","aria-labelledby":e},null==t?void 0:t.map(((e,t)=>l.default.createElement(r.ObjectListItem,Object.assign({key:`item-${t}`},e)))),n)}},3610:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectListItem=void 0;const l=a(n(7294)),r=n(8277),i=n(8775),o=n(3417),u=n(6519),c=n(3501),d=n(4279),s=n(3723);t.ObjectListItem=({intro:e,avatar:t,title:n,info:a,attributes:u,children:c})=>l.default.createElement("li",{className:"fd-list__item fd-object-list__item",style:{height:"auto"},role:"listitem",tabIndex:0},l.default.createElement("div",{className:"fd-object-list__container"},e?l.default.createElement("div",{className:"fd-object-list__intro"},e):null,a&&t&&n?l.default.createElement(f,{avatar:l.default.createElement(r.Avatar,Object.assign({},t,{size:s.Sizes.SMALL})),left:l.default.createElement(o.ObjectIdentifier,{className:"fd-object-list__object-identifier",title:n}),right:l.default.createElement(g,{type:a.type,props:a.props})}):null,l.default.createElement("div",{className:"fd-object-list__content"},null==u?void 0:u.map(((e,t)=>{var n;return l.default.createElement(v,{key:`attribute-${t}`},l.default.createElement(h,null,l.default.createElement(i.ObjectAttribute,{text:e.name})),l.default.createElement(b,null,null===(n=e.items)||void 0===n?void 0:n.map(((e,n)=>l.default.createElement(g,Object.assign({key:`item-${t}-${n}`},e))))))})),c)));const f=({avatar:e,left:t,right:n,children:a})=>l.default.createElement("div",{className:"fd-object-list__header"},e||a,t?l.default.createElement(m,null,t):null,n?l.default.createElement(p,null,n):null),m=({children:e})=>l.default.createElement("div",{className:"fd-object-list__header-left"},e),p=({children:e})=>l.default.createElement("div",{className:"fd-object-list__header-right"},e),v=({left:e,right:t,children:n})=>l.default.createElement("div",{className:"fd-object-list__row"},e?l.default.createElement(h,null,e):null,t?l.default.createElement(b,null,t):null,e||t?null:n),h=({children:e})=>l.default.createElement("div",{className:"fd-object-list__row-left"},e),b=({children:e})=>l.default.createElement("div",{className:"fd-object-list__row-right"},e),g=({type:e,props:t})=>{switch(e){case"attribute":return l.default.createElement(i.ObjectAttribute,{text:t.text});case"marker":return l.default.createElement(u.ObjectMarker,{icon:t.icon,iconOnly:t.iconOnly,text:t.text});case"number":return l.default.createElement(c.ObjectNumber,{className:"fd-object-list__object-number",value:t.value,unit:t.unit});case"status":return l.default.createElement(d.ObjectStatus,{text:t.text,semantic:t.semantic});case"identifier":return l.default.createElement(o.ObjectIdentifier,{className:"fd-object-list__object-identifier",title:t.title});default:return null}}},6519:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectMarker=void 0;const l=a(n(7294));t.ObjectMarker=({icon:e,iconOnly:t,text:n,className:a})=>{const r=["fd-object-marker"];return a&&r.push(a),l.default.createElement("div",{className:r.join(" ")},e?l.default.createElement("i",{className:`fd-object-marker__icon sap-icon--${e}`,"aria-label":t?n:void 0,role:t?void 0:"presentation"}):null,!t&&n?l.default.createElement("span",{className:"fd-object-marker__text"},n):null)}},3501:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectNumber=void 0;const l=a(n(7294));t.ObjectNumber=({value:e,unit:t,bold:n,large:a,semantic:r,className:i})=>{const o=["fd-object-number"];i&&o.push(i),a&&o.push("fd-object-number--large"),r&&o.push(`fd-object-number--${r}`);const u=["fd-object-number__text"];return n&&u.push("fd-object-number__text--bold"),l.default.createElement("span",{className:o.join(" ")},l.default.createElement("span",{className:u.join(" ")},e),l.default.createElement("span",{className:"fd-object-number__unit"},t))}},4279:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectStatus=void 0;const l=a(n(7294));t.ObjectStatus=({icon:e,iconOnly:t,text:n,inverted:a,large:r,semantic:i})=>{const o=["fd-object-status"];return i&&o.push(`fd-object-status--${i}`),a&&o.push("fd-object-status--inverted"),r&&o.push("fd-object-status--large"),l.default.createElement("span",{className:o.join(" ")},l.default.createElement("i",{className:`fd-object-status__icon sap-icon--${e}`,"aria-label":t?n:void 0,role:t?void 0:"presentation"}),t?null:l.default.createElement("span",{className:"fd-object-status__text"},n))}},2192:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Page=void 0;const l=a(n(7294));n(6040),t.Page=({className:e,children:[t,n,a]})=>{const r=["fd-page"];return e&&r.push(e),l.default.createElement("div",{className:r.join(" ")},t,l.default.createElement("div",{className:"fd-page__content"},n,a))}},8087:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PageBody=void 0;const l=a(n(7294));t.PageBody=({className:e,children:t})=>{const n=["fd-page__body"];return e&&n.push(e),l.default.createElement("div",{className:n.join(" ")},t)}},8327:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PageFooter=void 0;const l=a(n(7294));t.PageFooter=({className:e,children:t})=>{const n=["fd-page__footer"];return e&&n.push(e),l.default.createElement("div",{className:n.join(" ")},t)}},9283:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PageHeader=void 0;const l=a(n(7294));t.PageHeader=({className:e,children:t})=>{const n=["fd-page__header"];return e&&n.push(e),l.default.createElement("div",{className:n.join(" ")},t)}},7774:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Panel=void 0;const i=r(n(7294));t.Panel=({compact:e,expanded:t,expandable:n,title:a,toolbar:l,children:r})=>{const[o,u]=(0,i.useState)(null);(0,i.useEffect)((()=>{u(t)}),[t]);const c=["fd-panel"];return e&&c.push("fd-panel--compact"),n||c.push("fd-panel--fixed"),i.default.createElement("div",{className:c.join(" ")},i.default.createElement("div",{className:"fd-panel__header"},n?i.default.createElement("div",{className:"fd-panel__expand"},i.default.createElement("button",{className:"fd-button fd-button--compact fd-button--transparent fd-panel__button","aria-expanded":!!o,"aria-haspopup":"true","aria-controls":"panel-content","aria-labelledby":"panel-title",onClick:()=>{u(!o)}},i.default.createElement("i",{className:o?"sap-icon--slim-arrow-down":"sap-icon--slim-arrow-right"}))):null,i.default.createElement("h4",{className:"fd-panel__title",id:"panel-title"},a),l||null),i.default.createElement("div",{id:"panel-content",className:"fd-panel__content",role:"region","aria-hidden":!o},r))}},805:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Popover=void 0;const i=r(n(7294)),o=n(6414),u=n(1665);t.Popover=({className:e,style:t,alignRight:n,noArrow:a,items:l,children:r})=>{const[c]=(0,i.useState)(o.UUID.next()),[d,s]=(0,i.useState)(!1),f=()=>{s(!1),window.removeEventListener("click",f),window.removeEventListener("scroll",f,!0),window.removeEventListener("resize",f,!0),window.removeEventListener("keyup",f,!0)},m=()=>{d?f():(s(!0),setTimeout((()=>{window.addEventListener("click",f),window.addEventListener("scroll",f,!0),window.addEventListener("resize",f,!0),window.addEventListener("keyup",f,!0)}),0))},p=["fd-popover"];e&&p.push(e),n&&p.push("fd-popover--right");const v=["fd-popover__body"];return n&&v.push("fd-popover__body--right"),a&&v.push("fd-popover__body--no-arrow"),i.default.createElement("div",{className:p.join(" "),style:t},i.default.createElement("div",{className:"fd-popover__control"},(()=>{if(i.default.isValidElement(r)){const e={onClick:m};return"string"==typeof r.type?(e["aria-controls"]=c,e["aria-expanded"]=d,e["aria-haspopup"]=!0,e.role="button"):(e.ariaControls=c,e.ariaExpanded=d,e.ariaHaspopup=!0),i.default.cloneElement(r,e)}return r})()),i.default.createElement("div",{className:v.join(" "),"aria-hidden":!d,id:c},i.default.createElement(u.Menu,{noShadow:!0,items:l})))}},7674:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Select=void 0;const i=r(n(7294)),o=n(6414);t.Select=({children:e})=>{const[t,n]=(0,i.useState)(),[a,l]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{n(o.UUID.next())}),[]),i.default.createElement("div",{className:"fd-popover"},i.default.createElement("div",{className:"fd-popover__control"},i.default.createElement("div",{className:"fd-select"},i.default.createElement("button",{id:t,className:"fd-select__control","aria-expanded":!!a,"aria-haspopup":"listbox","aria-labelledby":"cozySelectLabel cozySelectValue",tabIndex:0,value:"List Item 1",onClick:()=>{l(!a)}},i.default.createElement("span",{is:"cozySelectValue",className:"fd-select__text-content"},"List Item 1"),i.default.createElement("span",{className:"fd-button fd-button--transparent fd-select__button"},i.default.createElement("i",{className:"sap-icon--slim-arrow-down"}))))),i.default.createElement("div",{className:"fd-popover__body fd-popover__body--no-arrow fd-popover__body--dropdown","aria-hidden":!a},i.default.createElement("ul",{"aria-activedescendant":"cozySelectCombobox-currentlyFocusedItem","aria-labelledby":t,className:"fd-list fd-list--dropdown",role:"listbox"},e)))}},7459:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SelectItem=void 0;const l=a(n(7294));t.SelectItem=({selected:e,title:t,onSelect:n})=>{const a=["fd-list__item"];return e&&a.push("is-selected"),l.default.createElement("li",{className:a.join(" "),"aria-selected":`${Boolean(e)}`,role:"option",tabIndex:0,onClick:()=>{n()}},l.default.createElement("span",{className:"fd-list__title"},t))}},7893:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ShellBar=void 0;const l=a(n(7294)),r=n(3723),i=n(8277),o=n(805);t.ShellBar=({logo:e,logoAlt:t,title:n,subTitle:a,profile:u})=>l.default.createElement("div",{className:"fd-shellbar"},l.default.createElement("div",{className:"fd-shellbar__group fd-shellbar__group--product"},l.default.createElement("span",{className:"fd-shellbar__logo"},l.default.createElement("img",{src:e,width:"48",height:"24",alt:t})),l.default.createElement("span",{className:"fd-shellbar__title"},n),a?l.default.createElement("div",{className:"fd-shellbar__subtitle"},a):null),l.default.createElement("div",{className:"fd-shellbar__group fd-shellbar__group--actions"},l.default.createElement("div",{className:"fd-shellbar__action"},u?l.default.createElement(o.Popover,{alignRight:!0,items:u.menu},l.default.createElement(i.Avatar,{ariaLabel:u.name,initials:u.initials,size:r.Sizes.X_SMALL,circle:!0})):null)))},524:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Table=t.TableCellIndicators=void 0;const l=a(n(7294)),r=n(4111),i=n(5270),o=n(9027);t.TableCellIndicators={VALID:"valid",WARNING:"warning",ERROR:"error",INFORMATION:"information"},t.Table=({borderedHorizontal:e,borderedVertical:t,compact:n,indicator:a,columns:u,rows:c,children:d})=>{const s=["fd-table"];return t||s.push("fd-table--no-vertical-borders"),e||s.push("fd-table--no-horizontal-borders"),n&&s.push("fd-table--compact"),l.default.createElement("table",{className:s.join(" ")},l.default.createElement("thead",{className:"fd-table__header"},l.default.createElement(o.TableRow,null,l.default.createElement(l.default.Fragment,null,a?l.default.createElement(r.TableCell,{type:"status-indicator"}):null,u.map((e=>l.default.createElement(i.TableHeaderCell,{key:e.key,type:e.type},l.default.createElement("span",null,e.name))))))),l.default.createElement("tbody",{className:"fd-table__body"},null==c?void 0:c.map(((e,t)=>l.default.createElement(o.TableRow,{key:e.data.id,activable:e.activable,hoverable:e.hoverable},l.default.createElement(l.default.Fragment,null,a?l.default.createElement(r.TableCell,{type:"status-indicator",indicator:e.indicator}):null,u.map((t=>{const n=t.render||(e=>l.default.createElement("span",null,t.formatter?t.formatter(e):e[t.key]));return l.default.createElement(r.TableCell,{key:t.key},n(e.data))})))))),d))}},4111:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TableCell=void 0;const l=a(n(7294));t.TableCell=({type:e,indicator:t,activable:n,hoverable:a,children:r})=>{const i=["fd-table__cell"];return e&&i.push(`fd-table__cell--${e}`),"status-indicator"===e&&t&&i.push(`fd-table__cell--status-indicator--${t}`),n&&i.push("fd-table__cell--activable"),a&&i.push("fd-table__cell--hoverable"),l.default.createElement("td",{className:i.join(" ")},r)}},5270:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TableHeaderCell=void 0;const l=a(n(7294));t.TableHeaderCell=({children:e,type:t})=>{const n=["fd-table__cell"];return t&&n.push(`fd-table__cell--${t}`),l.default.createElement("th",{className:n.join(" "),scope:"col"},e)}},9027:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TableRow=void 0;const l=a(n(7294));t.TableRow=({activable:e,hoverable:t,children:n})=>{const a=["fd-table__row"];return e&&a.push("fd-table__row--activable"),t&&a.push("fd-table__row--hoverable"),l.default.createElement("tr",{className:a.join(" ")},n)}},9268:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Tile=void 0;const l=a(n(7294)),r=n(6149),i=n(3723);t.Tile=({className:e,badge:t,title:n,subTitle:a,footer:o,size:u=i.Sizes.LARGE,children:c,onClick:d})=>{const s=["fd-tile"];return e&&s.push(e),u&&s.push(`fd-tile--${u}`),l.default.createElement("div",{className:s.join(" "),role:"button",tabIndex:0,onClick:()=>{d&&d()}},t?l.default.createElement(r.Badge,{text:t}):null,l.default.createElement("div",{className:"fd-tile__header"},l.default.createElement("div",{className:"fd-tile__title"},n),a?l.default.createElement("div",{className:"fd-tile__subtitle"},a):null),l.default.createElement("div",{className:"fd-tile__content"},c),o?l.default.createElement("div",{className:"fd-tile__footer"},l.default.createElement("span",{className:"fd-tile__footer-text"},o)):null)}},6056:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TileContainer=void 0;const l=a(n(7294));t.TileContainer=({className:e,children:t})=>{const n=["fd-tile fd-tile-container"];return e&&n.push(e),l.default.createElement("div",{className:n.join(" "),style:{minHeight:0,maxHeight:"none",height:"auto",minWidth:0,maxWidth:"none",width:"100%"}},t)}},153:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TileContentNumeric=void 0;const l=a(n(7294)),r=n(3723);t.TileContentNumeric=({value:e,size:t=r.Sizes.LARGE,semantic:n})=>{const a=["fd-numeric-content"];t&&a.push(`fd-numeric-content--${t}`);const i=["fd-numeric-content__kpi"];return n&&i.push(`fd-numeric-content__kpi--${n}`),l.default.createElement("div",{className:a.join(" ")},l.default.createElement("div",{className:"fd-numeric-content__kpi-container"},l.default.createElement("div",{className:i.join(" ")},e)))}},5791:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Title=void 0;const l=a(n(7294)),r=n(3904);t.Title=({className:e,style:t,level:n,levelVisual:a,text:i,wrap:o})=>{const u=["fd-title"];switch(u.push(`fd-title--h${a||n||r.TitleLevels.H1}`),e&&u.push(e),o&&u.push("fd-title--wrap"),n){case r.TitleLevels.H6:return l.default.createElement("h6",{className:u.join(" "),style:t},i);case r.TitleLevels.H5:return l.default.createElement("h5",{className:u.join(" "),style:t},i);case r.TitleLevels.H4:return l.default.createElement("h4",{className:u.join(" "),style:t},i);case r.TitleLevels.H3:return l.default.createElement("h3",{className:u.join(" "),style:t},i);case r.TitleLevels.H2:return l.default.createElement("h2",{className:u.join(" "),style:t},i);default:return l.default.createElement("h1",{className:u.join(" "),style:t},i)}}},1054:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Toolbar=void 0;const l=a(n(7294)),r=n(2744),i=n(5791),o=n(3904);n(792),t.Toolbar=({title:e,titleLevel:t=o.TitleLevels.H4,active:n,clear:a,transparent:u,solid:c,children:d})=>{const s=["fd-toolbar"];return n&&s.push("fd-toolbar-active"),e&&s.push("fd-toolbar--title"),a&&s.push("fd-toolbar--clear"),u&&s.push("fd-toolbar--transparent"),c&&s.push("fd-toolbar--solid"),l.default.createElement("div",{className:s.join(" ")},e?l.default.createElement(i.Title,{className:"fd-toolbar__title",level:t,text:e}):null,l.default.createElement(r.ToolbarSpacer,null),d)}},5703:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarSeparator=void 0;const l=a(n(7294));t.ToolbarSeparator=()=>l.default.createElement("span",{className:"fd-toolbar__separator"})},2744:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarSpacer=void 0;const l=a(n(7294));t.ToolbarSpacer=()=>l.default.createElement("span",{className:"fd-toolbar__spacer"})},4419:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.VerticalNavigation=void 0;const l=a(n(7294)),r=n(8927);t.VerticalNavigation=({className:e,label:t,itemsLabel:n,items:a,onItemSelect:i,children:o})=>{const u=["fd-vertical-nav"];return e&&u.push(e),l.default.createElement("div",{className:u.join(" ")},l.default.createElement("nav",{className:"fd-vertical-nav__main-navigation","aria-label":t},l.default.createElement("ul",{className:"fd-list","aria-label":n},null==a?void 0:a.map((e=>l.default.createElement(r.VerticalNavigationItem,{key:e.id,id:e.id,className:e.className,expanded:e.expanded,items:e.items,glyph:e.glyph,text:e.text,selected:e.selected,onItemSelect:e.onItemSelect||i}))),o)))}},8927:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var l=Object.getOwnPropertyDescriptor(t,n);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,l)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return l(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.VerticalNavigationItem=void 0;const i=r(n(7294));t.VerticalNavigationItem=({id:e,className:n,expanded:a,items:l,glyph:r,selected:o,text:u,onItemSelect:c,children:d})=>{const[s,f]=(0,i.useState)(a),m=Boolean(null==l?void 0:l.length)||Boolean(d),p=["fd-list__navigation-item"];n&&p.push(n),m&&p.push("fd-list__navigation-item--expandable"),s&&p.push("is-expanded"),o&&p.push("fd-list__navigation-item--indicated");const v=["fd-list__navigation-item-arrow"];return s?(v.push("is-expanded"),v.push("sap-icon--navigation-down-arrow")):v.push("sap-icon--navigation-right-arrow"),i.default.createElement("li",{className:p.join(" "),tabIndex:0,onClick:t=>{t.stopPropagation(),c&&c(e)},onKeyUp:t=>{switch(t.code){case"Enter":case"Space":t.stopPropagation(),c&&c(e)}}},r?i.default.createElement("i",{className:`fd-list__navigation-item-icon sap-icon--${r}`,role:"presentation"}):null,i.default.createElement("span",{className:"fd-list__navigation-item-text"},u),m?i.default.createElement("button",{className:v.join(" "),"aria-label":"Expand second submenu",onClick:()=>f(!s)}):null,m&&s&&(Boolean(null==l?void 0:l.length)||Boolean(d))?i.default.createElement("ul",{className:"fd-list"},null==l?void 0:l.map((e=>i.default.createElement(t.VerticalNavigationItem,{key:e.id,id:e.id,className:e.className,expanded:e.expanded,items:e.items,glyph:e.glyph,text:e.text,selected:e.selected,onItemSelect:c}))),d):null)}},7517:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AccentColors=void 0,t.AccentColors={COLOR_1:"accent-color-1",COLOR_2:"accent-color-2",COLOR_3:"accent-color-3",COLOR_4:"accent-color-4",COLOR_5:"accent-color-5",COLOR_6:"accent-color-6",COLOR_7:"accent-color-7",COLOR_8:"accent-color-8",COLOR_9:"accent-color-9",COLOR_10:"accent-color-10"}},2780:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BarTypes=void 0,t.BarTypes={HEADER:"header",HEADER_WITH_SUBHEADER:"header-with-subheader",SUBHEADER:"subheader",FOOTER:"footer",FOOTER_FLOATING:"floating-footer"}},9313:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BusyIndicatorSizes=void 0,t.BusyIndicatorSizes={SMALL:"s",MEDIUM:"m",LARGE:"l"}},5958:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonDesigns=void 0,t.ButtonDesigns={EMPHASIZED:"emphasized",GHOST:"ghost",POSITIVE:"positive",NEGATIVE:"negative",ATTENTION:"attention",TRANSPARENT:"transparent"}},1903:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonTypes=void 0,t.ButtonTypes={BUTTON:"button",SUBMIT:"submit",RESET:"reset"}},8313:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LinkTypes=void 0,t.LinkTypes={EMPHASIZED:"emphasized",SUBTLE:"subtle",INVERTED:"inverted"}},9041:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Semantics=void 0,t.Semantics={POSITIVE:"positive",NEGATIVE:"negative",CRITICAL:"critical",INFORMATIVE:"informative"}},3723:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Sizes=void 0,t.Sizes={X_SMALL:"xs",SMALL:"s",MEDIUM:"m",LARGE:"l",X_LARGE:"xl"}},3904:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TitleLevels=void 0,t.TitleLevels={H1:1,H2:2,H3:3,H4:4,H5:5,H6:6}},6042:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.COMPONENTS=t.COMPONENT=void 0;const a=n(6884),l=n(6849),r=n(7532),i=n(6533),o=n(5030),u=n(1055),c=n(7340),d=n(1974),s=n(3242),f=n(6661),m=n(4757),p=n(6170),v=n(6446),h=n(8398),b=n(6226),g=n(6358),E=n(3675),y=n(5135),_=n(7688),w=n(8165),S=n(6615),x=n(7055),C=n(2612),A=n(8566),O=n(7026),N=n(4392);t.COMPONENT={AVATAR:{id:"avatar",text:"Avatar",demo:a.AvatarDemo},BADGE:{id:"badge",text:"Badge",demo:l.BadgeDemo},BAR:{id:"bar",text:"Bar",demo:r.BarDemo},BREADCRUMB:{id:"breadcrumb",text:"Breadcrumb",demo:i.BreadcrumbDemo},BUSY_INDICATOR:{id:"busyindicator",text:"Busy Indicator",demo:o.BusyIndicatorDemo},BUTTON:{id:"button",text:"Button",demo:u.ButtonDemo},CALENDAR:{id:"calendar",text:"Calendar",demo:c.CalendarDemo},CARD:{id:"card",text:"Card",demo:d.CardDemo},DIALOG:{id:"dialog",text:"Dialog",demo:s.DialogDemo},FORM:{id:"form",text:"Form",demo:f.FormDemo},ICON:{id:"icon",text:"Icon",demo:m.IconDemo},ICON_TAB_BAR:{id:"icontabbar",text:"IconTabBar",demo:p.IconTabBarDemo},INFO_LABEL:{id:"infolabel",text:"InfoLabel",demo:v.InfoLabelDemo},LINK:{id:"link",text:"Link",demo:h.LinkDemo},MENU:{id:"menu",text:"Menu",demo:b.MenuDemo},OBJECT:{id:"object",text:"Object",demo:g.ObjectDemo},PAGE:{id:"page",text:"Page",demo:E.PageDemo},PANEL:{id:"panel",text:"Panel",demo:y.PanelDemo},POPOVER:{id:"popover",text:"Popover",demo:_.PopoverDemo},SELECT:{id:"select",text:"Select",demo:w.SelectDemo},SHELL_BAR:{id:"shellbar",text:"ShellBar",demo:S.ShellBarDemo},TABLE:{id:"table",text:"Table",demo:x.TableDemo},TILE:{id:"tile",text:"Tile",demo:C.TileDemo},TITLE:{id:"title",text:"Title",demo:A.TitleDemo},TOOLBAR:{id:"toolbar",text:"Toolbar",demo:O.ToolbarDemo},VERTICAL_NAVIGATION:{id:"verticalnavigation",text:"VerticalNavigation",demo:N.VerticalNavigationDemo}},t.COMPONENTS=Object.values(t.COMPONENT)},2531:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Select=t.Popover=t.Panel=t.PageFooter=t.PageBody=t.PageHeader=t.Page=t.ObjectStatus=t.ObjectNumber=t.ObjectMarker=t.ObjectListItem=t.ObjectList=t.ObjectIdentifier=t.ObjectHeaderAttribute=t.ObjectAttribute=t.Menu=t.Link=t.InfoLabel=t.IconTabBarItem=t.IconTabBar=t.Icon=t.FormStepInput=t.FormInput=t.DialogFooter=t.DialogHeader=t.Dialog=t.CardFooter=t.CardHeader=t.Card=t.Calendar=t.SegmentedButton=t.Button=t.BusyIndicator=t.Breadcrumb=t.BarRight=t.BarMiddle=t.BarLeft=t.BarElement=t.Bar=t.Badge=t.Avatar=t.TitleLevels=t.Sizes=t.Semantics=t.LinkTypes=t.ButtonTypes=t.ButtonDesigns=t.BusyIndicatorSizes=t.BarTypes=t.AccentColors=void 0,t.VerticalNavigationItem=t.VerticalNavigation=t.ToolbarSpacer=t.ToolbarSeparator=t.Toolbar=t.Title=t.TileContentNumeric=t.TileContainer=t.Tile=t.TableRow=t.TableHeaderCell=t.TableCell=t.Table=t.ShellBar=t.SelectItem=void 0;var a=n(7517);Object.defineProperty(t,"AccentColors",{enumerable:!0,get:function(){return a.AccentColors}});var l=n(2780);Object.defineProperty(t,"BarTypes",{enumerable:!0,get:function(){return l.BarTypes}});var r=n(9313);Object.defineProperty(t,"BusyIndicatorSizes",{enumerable:!0,get:function(){return r.BusyIndicatorSizes}});var i=n(5958);Object.defineProperty(t,"ButtonDesigns",{enumerable:!0,get:function(){return i.ButtonDesigns}});var o=n(1903);Object.defineProperty(t,"ButtonTypes",{enumerable:!0,get:function(){return o.ButtonTypes}});var u=n(8313);Object.defineProperty(t,"LinkTypes",{enumerable:!0,get:function(){return u.LinkTypes}});var c=n(9041);Object.defineProperty(t,"Semantics",{enumerable:!0,get:function(){return c.Semantics}});var d=n(3723);Object.defineProperty(t,"Sizes",{enumerable:!0,get:function(){return d.Sizes}});var s=n(3904);Object.defineProperty(t,"TitleLevels",{enumerable:!0,get:function(){return s.TitleLevels}});var f=n(8277);Object.defineProperty(t,"Avatar",{enumerable:!0,get:function(){return f.Avatar}});var m=n(6149);Object.defineProperty(t,"Badge",{enumerable:!0,get:function(){return m.Badge}});var p=n(9128);Object.defineProperty(t,"Bar",{enumerable:!0,get:function(){return p.Bar}});var v=n(4413);Object.defineProperty(t,"BarElement",{enumerable:!0,get:function(){return v.BarElement}});var h=n(3494);Object.defineProperty(t,"BarLeft",{enumerable:!0,get:function(){return h.BarLeft}});var b=n(7883);Object.defineProperty(t,"BarMiddle",{enumerable:!0,get:function(){return b.BarMiddle}});var g=n(2300);Object.defineProperty(t,"BarRight",{enumerable:!0,get:function(){return g.BarRight}});var E=n(8677);Object.defineProperty(t,"Breadcrumb",{enumerable:!0,get:function(){return E.Breadcrumb}});var y=n(7289);Object.defineProperty(t,"BusyIndicator",{enumerable:!0,get:function(){return y.BusyIndicator}});var _=n(4326);Object.defineProperty(t,"Button",{enumerable:!0,get:function(){return _.Button}});var w=n(6232);Object.defineProperty(t,"SegmentedButton",{enumerable:!0,get:function(){return w.SegmentedButton}});var S=n(8681);Object.defineProperty(t,"Calendar",{enumerable:!0,get:function(){return S.Calendar}});var x=n(6369);Object.defineProperty(t,"Card",{enumerable:!0,get:function(){return x.Card}});var C=n(3824);Object.defineProperty(t,"CardHeader",{enumerable:!0,get:function(){return C.CardHeader}});var A=n(6864);Object.defineProperty(t,"CardFooter",{enumerable:!0,get:function(){return A.CardFooter}});var O=n(9456);Object.defineProperty(t,"Dialog",{enumerable:!0,get:function(){return O.Dialog}});var N=n(9929);Object.defineProperty(t,"DialogHeader",{enumerable:!0,get:function(){return N.DialogHeader}});var k=n(8329);Object.defineProperty(t,"DialogFooter",{enumerable:!0,get:function(){return k.DialogFooter}});var P=n(5291);Object.defineProperty(t,"FormInput",{enumerable:!0,get:function(){return P.FormInput}});var T=n(2923);Object.defineProperty(t,"FormStepInput",{enumerable:!0,get:function(){return T.FormStepInput}});var D=n(7876);Object.defineProperty(t,"Icon",{enumerable:!0,get:function(){return D.Icon}});var B=n(1058);Object.defineProperty(t,"IconTabBar",{enumerable:!0,get:function(){return B.IconTabBar}});var M=n(5426);Object.defineProperty(t,"IconTabBarItem",{enumerable:!0,get:function(){return M.IconTabBarItem}});var R=n(4229);Object.defineProperty(t,"InfoLabel",{enumerable:!0,get:function(){return R.InfoLabel}});var L=n(6374);Object.defineProperty(t,"Link",{enumerable:!0,get:function(){return L.Link}});var j=n(1665);Object.defineProperty(t,"Menu",{enumerable:!0,get:function(){return j.Menu}});var I=n(8775);Object.defineProperty(t,"ObjectAttribute",{enumerable:!0,get:function(){return I.ObjectAttribute}});var z=n(9579);Object.defineProperty(t,"ObjectHeaderAttribute",{enumerable:!0,get:function(){return z.ObjectHeaderAttribute}});var F=n(3417);Object.defineProperty(t,"ObjectIdentifier",{enumerable:!0,get:function(){return F.ObjectIdentifier}});var U=n(225);Object.defineProperty(t,"ObjectList",{enumerable:!0,get:function(){return U.ObjectList}});var H=n(3610);Object.defineProperty(t,"ObjectListItem",{enumerable:!0,get:function(){return H.ObjectListItem}});var $=n(6519);Object.defineProperty(t,"ObjectMarker",{enumerable:!0,get:function(){return $.ObjectMarker}});var V=n(3501);Object.defineProperty(t,"ObjectNumber",{enumerable:!0,get:function(){return V.ObjectNumber}});var W=n(4279);Object.defineProperty(t,"ObjectStatus",{enumerable:!0,get:function(){return W.ObjectStatus}});var Y=n(2192);Object.defineProperty(t,"Page",{enumerable:!0,get:function(){return Y.Page}});var G=n(9283);Object.defineProperty(t,"PageHeader",{enumerable:!0,get:function(){return G.PageHeader}});var Q=n(8087);Object.defineProperty(t,"PageBody",{enumerable:!0,get:function(){return Q.PageBody}});var K=n(8327);Object.defineProperty(t,"PageFooter",{enumerable:!0,get:function(){return K.PageFooter}});var Z=n(7774);Object.defineProperty(t,"Panel",{enumerable:!0,get:function(){return Z.Panel}});var q=n(805);Object.defineProperty(t,"Popover",{enumerable:!0,get:function(){return q.Popover}});var X=n(7674);Object.defineProperty(t,"Select",{enumerable:!0,get:function(){return X.Select}});var J=n(7459);Object.defineProperty(t,"SelectItem",{enumerable:!0,get:function(){return J.SelectItem}});var ee=n(7893);Object.defineProperty(t,"ShellBar",{enumerable:!0,get:function(){return ee.ShellBar}});var te=n(524);Object.defineProperty(t,"Table",{enumerable:!0,get:function(){return te.Table}});var ne=n(4111);Object.defineProperty(t,"TableCell",{enumerable:!0,get:function(){return ne.TableCell}});var ae=n(5270);Object.defineProperty(t,"TableHeaderCell",{enumerable:!0,get:function(){return ae.TableHeaderCell}});var le=n(9027);Object.defineProperty(t,"TableRow",{enumerable:!0,get:function(){return le.TableRow}});var re=n(9268);Object.defineProperty(t,"Tile",{enumerable:!0,get:function(){return re.Tile}});var ie=n(6056);Object.defineProperty(t,"TileContainer",{enumerable:!0,get:function(){return ie.TileContainer}});var oe=n(153);Object.defineProperty(t,"TileContentNumeric",{enumerable:!0,get:function(){return oe.TileContentNumeric}});var ue=n(5791);Object.defineProperty(t,"Title",{enumerable:!0,get:function(){return ue.Title}});var ce=n(1054);Object.defineProperty(t,"Toolbar",{enumerable:!0,get:function(){return ce.Toolbar}});var de=n(5703);Object.defineProperty(t,"ToolbarSeparator",{enumerable:!0,get:function(){return de.ToolbarSeparator}});var se=n(2744);Object.defineProperty(t,"ToolbarSpacer",{enumerable:!0,get:function(){return se.ToolbarSpacer}});var fe=n(4419);Object.defineProperty(t,"VerticalNavigation",{enumerable:!0,get:function(){return fe.VerticalNavigation}});var me=n(8927);Object.defineProperty(t,"VerticalNavigationItem",{enumerable:!0,get:function(){return me.VerticalNavigationItem}})},2509:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=a(n(7294)),r=n(9818),i=a(n(2420)),o=a(n(9266)),u=a(n(9240));t.default=()=>l.default.createElement(r.Routes,null,l.default.createElement(r.Route,{path:"*",element:l.default.createElement(i.default,null)},l.default.createElement(r.Route,{path:"components",element:l.default.createElement(o.default,null)},l.default.createElement(r.Route,{path:":componentId",element:l.default.createElement(u.default,null)}))))},9240:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.RouteComponent=void 0;const l=a(n(7294)),r=n(9818),i=n(6042);t.RouteComponent=()=>{const e=(0,r.useParams)().componentId,t=i.COMPONENTS.find((t=>t.id===e));return t?l.default.createElement(t.demo,null):l.default.createElement("div",null,"INDALID")},t.default=t.RouteComponent},9266:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.RouteComponents=void 0;const l=a(n(7294)),r=n(9818);t.RouteComponents=()=>l.default.createElement(r.Outlet,null),t.default=t.RouteComponents},2420:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=a(n(7294)),r=n(9818),i=n(4529),o=n(4110),u=n(5487);t.default=()=>l.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%"}},l.default.createElement("div",{style:{flexShrink:0}},l.default.createElement(i.AppHeader,null)),l.default.createElement("div",{style:{display:"flex",flexBasis:0,flexGrow:1,overflow:"hidden"}},l.default.createElement("div",{style:{overflow:"auto",flexShrink:0}},l.default.createElement(u.AppSidePanel,null)),l.default.createElement("div",{style:{flexBasis:0,flexGrow:1}},l.default.createElement(o.AppMainContent,null,l.default.createElement(r.Outlet,null)))))}},a={};function l(e){var t=a[e];if(void 0!==t)return t.exports;var r=a[e]={id:e,exports:{}};return n[e].call(r.exports,r,r.exports,l),r.exports}l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(n,a){if(1&a&&(n=this(n)),8&a)return n;if("object"==typeof n&&n){if(4&a&&n.__esModule)return n;if(16&a&&"function"==typeof n.then)return n}var r=Object.create(null);l.r(r);var i={};e=e||[null,t({}),t([]),t(t)];for(var o=2&a&&n;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>i[e]=()=>n[e]));return i.default=()=>n,l.d(r,i),r},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.nc=void 0,l(6212)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,